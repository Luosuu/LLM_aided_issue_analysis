{
  "issue_number": 9800.0,
  "title": "[BUG] A memory leak in the example module \"hello cluster\"",
  "body": "**Describe the bug**\r\n\r\nIn the call back function `PingReceiver`, the returned `RedisModuleCallReply` object will not be free'd and thus become a memory leak.\r\n\r\n\r\n**To reproduce**\r\nIt is tested with Redis 6.2.6, `redis_git_sha1: 4930d19e`\r\n\r\n1. Create the clusters. \r\nUtilized the script `create-cluster` provided in utils. \r\n```\r\n$ ./utils/create-cluster/create-cluster start\r\n$ ./utils/create-cluster/create-cluster create\r\n```\r\n2. Load the module.\r\nUtilized `redis-cli`. Using `MODULE LOAD` to load the module.\r\n```\r\n$ ./src/redis-cli -p 30001\r\n127.0.0.1:30001> MOUDLE LOAD ./src/modules/hellocluster.so\r\nOK\r\n$ ./src/redis-cli -p 30002\r\n127.0.0.1:30001> MOUDLE LOAD ./src/modules/hellocluster.so\r\nOK\r\n```\r\n3. Trigger the callback.\r\n```\r\n$ ./src/redis-cli -p 30001\r\n127.0.0.1:30001> hellocluster.pingall\r\nOK\r\n```\r\nThen the cluster 30002 will trigger the call back.\r\n\r\n**Expected behavior**\r\n\r\n`RedisModuleCall` has a return value which could either be freed by `RedisModule_FreeCallReply` or cleaned by automatic memory management (enabled by calling `RedisModule_AutoMemory` at the beginning of a command). \r\n\r\nI used gdb to check that the context didn't enable auto memory when the call back is triggered.\r\n![Screenshot from 2021-11-17 16-38-44](https://user-images.githubusercontent.com/77563179/142320661-cadb3c03-ecbf-44b7-89b4-01e72aadc61b.png)\r\n```\r\nvoid PingReceiver(RedisModuleCtx *ctx, const char *sender_id, uint8_t type, const unsigned char *payload, uint32_t len) {\r\n    RedisModule_Log(ctx,\"notice\",\"PING (type %d) RECEIVED from %.*s: '%.*s'\",\r\n        type,REDISMODULE_NODE_ID_LEN,sender_id,(int)len, payload);\r\n    RedisModule_SendClusterMessage(ctx,NULL,MSGTYPE_PONG,(unsigned char*)\"Ohi!\",4);\r\n    RedisModule_Call(ctx, \"INCR\", \"c\", \"pings_received\");\r\n}\r\n```\r\n\r\n\r\n**Additional information**\r\n\r\nThe bug could be fixed by:\r\n```\r\nvoid PingReceiver(RedisModuleCtx *ctx, const char *sender_id, uint8_t type, const unsigned char *payload, uint32_t len) {\r\n    RedisModule_Log(ctx,\"notice\",\"PING (type %d) RECEIVED from %.*s: '%.*s'\",\r\n        type,REDISMODULE_NODE_ID_LEN,sender_id,(int)len, payload);\r\n    RedisModule_SendClusterMessage(ctx,NULL,MSGTYPE_PONG,(unsigned char*)\"Ohi!\",4);\r\n    RedisModuleCallReply reply = RedisModule_Call(ctx, \"INCR\", \"c\", \"pings_received\");\r\n    RedisModule_FreeCallReply(reply);\r\n}\r\n```\r\n",
  "state": "closed",
  "created_at": "2021-11-18T01:07:07Z",
  "updated_at": "2021-11-19T22:48:59Z",
  "closed_at": "2021-11-19T22:48:59Z",
  "labels": [],
  "comments_data": [
    {
      "id": 972693819,
      "user": "oranagra",
      "created_at": "2021-11-18T09:36:45Z",
      "body": "@RuiliF wanna issue a PR with the fix?"
    },
    {
      "id": 974402987,
      "user": "RuiliF",
      "created_at": "2021-11-19T20:12:10Z",
      "body": "> @RuiliF wanna issue a PR with the fix?\r\n\r\nThank you for your reply! I'll issue a PR later today."
    }
  ]
}