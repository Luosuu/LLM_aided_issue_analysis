{
  "issue_number": 4428.0,
  "title": "Crash on XREAD (streams branch)",
  "body": "Compiled on vanilla ubuntu 16.04, using commit 2970181ff236f5.\r\n\r\n```\r\n=== REDIS BUG REPORT START: Cut & paste starting from here ===\r\n29240:M 08 Nov 17:45:41.889 # Redis 999.999.999 crashed by signal: 11\r\n29240:M 08 Nov 17:45:41.889 # Crashed running the instuction at: 0x4a1d06\r\n29240:M 08 Nov 17:45:41.889 # Accessing address: 0x7fc41e3ac79a\r\n29240:M 08 Nov 17:45:41.889 # Failed assertion: <no assertion failed> (<no file>:0)\r\n\r\n------ STACK TRACE ------\r\nEIP:\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(lpNext+0x24)[0x4a1d06]\r\n\r\nBacktrace:\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(logStackTrace+0x45)[0x46b855]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(sigsegvHandler+0xb9)[0x46c019]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x11390)[0x7fc3a3b0d390]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(lpNext+0x24)[0x4a1d06]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(streamIteratorGetField+0x79)[0x4a0379]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(streamReplyWithRange+0xde)[0x4a04ae]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(xreadCommand+0x3f8)[0x4a1208]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(call+0xa6)[0x42c396]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(processCommand+0x3a7)[0x42ca97]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(processInputBuffer+0x105)[0x43c635]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(aeProcessEvents+0x13e)[0x42619e]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(aeMain+0x2b)[0x4265cb]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(main+0x4a6)[0x423196]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fc3a3752830]\r\n/usr/local/bin/redis-server-streams 127.0.0.1:6400(_start+0x29)[0x423499]\r\n\r\n------ INFO OUTPUT ------\r\n# Server\r\nredis_version:999.999.999\r\nredis_git_sha1:2970181f\r\nredis_git_dirty:0\r\nredis_build_id:e16c8c161247d4d4\r\nredis_mode:standalone\r\nos:Linux 4.4.0-96-generic x86_64\r\narch_bits:64\r\nmultiplexing_api:epoll\r\natomicvar_api:atomic-builtin\r\ngcc_version:5.4.0\r\nprocess_id:29240\r\nrun_id:5ca9cf893085c149a9f8877e84a58bd9ee3666d2\r\ntcp_port:6400\r\nuptime_in_seconds:792\r\nuptime_in_days:0\r\nhz:10\r\nlru_clock:174101\r\nexecutable:/usr/local/bin/redis-server-streams\r\nconfig_file:/etc/redis/6400.conf\r\n\r\n# Clients\r\nconnected_clients:1\r\nclient_longest_output_list:15\r\nclient_biggest_input_buf:0\r\nblocked_clients:0\r\n\r\n# Memory\r\nused_memory:208908288\r\nused_memory_human:199.23M\r\nused_memory_rss:219287552\r\nused_memory_rss_human:209.13M\r\nused_memory_peak:208908288\r\nused_memory_peak_human:199.23M\r\nused_memory_peak_perc:100.14%\r\nused_memory_overhead:994914\r\nused_memory_startup:765968\r\nused_memory_dataset:207913374\r\nused_memory_dataset_perc:99.89%\r\ntotal_system_memory:8371183616\r\ntotal_system_memory_human:7.80G\r\nused_memory_lua:37888\r\nused_memory_lua_human:37.00K\r\nmaxmemory:0\r\nmaxmemory_human:0B\r\nmaxmemory_policy:noeviction\r\nmem_fragmentation_ratio:1.05\r\nmem_allocator:jemalloc-4.0.3\r\nactive_defrag_running:0\r\nlazyfree_pending_objects:0\r\n\r\n# Persistence\r\nloading:0\r\nrdb_changes_since_last_save:1\r\nrdb_bgsave_in_progress:0\r\nrdb_last_save_time:1510122749\r\nrdb_last_bgsave_status:ok\r\nrdb_last_bgsave_time_sec:-1\r\nrdb_current_bgsave_time_sec:-1\r\nrdb_last_cow_size:0\r\naof_enabled:0\r\naof_rewrite_in_progress:0\r\naof_rewrite_scheduled:0\r\naof_last_rewrite_time_sec:-1\r\naof_current_rewrite_time_sec:-1\r\naof_last_bgrewrite_status:ok\r\naof_last_write_status:ok\r\naof_last_cow_size:0\r\n\r\n# Stats\r\ntotal_connections_received:6\r\ntotal_commands_processed:7\r\ninstantaneous_ops_per_sec:0\r\ntotal_net_input_bytes:594\r\ntotal_net_output_bytes:268\r\ninstantaneous_input_kbps:0.00\r\ninstantaneous_output_kbps:0.00\r\nrejected_connections:0\r\nsync_full:0\r\nsync_partial_ok:0\r\nsync_partial_err:0\r\nexpired_keys:0\r\nevicted_keys:0\r\nkeyspace_hits:1\r\nkeyspace_misses:1\r\npubsub_channels:0\r\npubsub_patterns:0\r\nlatest_fork_usec:0\r\nmigrate_cached_sockets:0\r\nslave_expires_tracked_keys:0\r\nactive_defrag_hits:0\r\nactive_defrag_misses:0\r\nactive_defrag_key_hits:0\r\nactive_defrag_key_misses:0\r\n\r\n# Replication\r\nrole:master\r\nconnected_slaves:0\r\nmaster_replid:8413f78cec51d75ac8aca32364ae7b19ab997c61\r\nmaster_replid2:0000000000000000000000000000000000000000\r\nmaster_repl_offset:0\r\nsecond_repl_offset:-1\r\nrepl_backlog_active:0\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:0\r\nrepl_backlog_histlen:0\r\n\r\n# CPU\r\nused_cpu_sys:0.52\r\nused_cpu_user:0.78\r\nused_cpu_sys_children:0.00\r\nused_cpu_user_children:0.00\r\n\r\n# Commandstats\r\ncmdstat_auth:calls=6,usec=29,usec_per_call=4.83\r\ncmdstat_xadd:calls=1,usec=20,usec_per_call=20.00\r\n\r\n# Cluster\r\ncluster_enabled:0\r\n\r\n# Keyspace\r\ndb0:keys=3,expires=0,avg_ttl=0\r\n\r\n------ CLIENT LIST OUTPUT ------\r\nid=7 addr=10.102.248.33:46556 fd=9 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=15 omem=179100 events=r cmd=xread\r\n\r\n------ CURRENT CLIENT INFO ------\r\nid=7 addr=10.102.248.33:46556 fd=9 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=15 omem=179100 events=r cmd=xread\r\nargv[0]: 'XREAD'\r\nargv[1]: 'BLOCK'\r\nargv[2]: '10000'\r\nargv[3]: 'COUNT'\r\nargv[4]: '1000'\r\nargv[5]: 'STREAMS'\r\nargv[6]: 'patient_1'\r\nargv[7]: 'notes_1'\r\nargv[8]: 'schedule_1'\r\nargv[9]: '1510121124307-0'\r\nargv[10]: '0'\r\nargv[11]: '0'\r\n\r\n------ REGISTERS ------\r\n29240:M 08 Nov 17:45:41.896 # \r\nRAX:00007fc41e3ac79a RBX:00007ffec796e920\r\nRCX:00007ffec796e900 RDX:00000000000011d9\r\nRDI:0000000000000000 RSI:000000007b0011de\r\nRBP:00007ffec796e8a0 RSP:00007ffec796e890\r\nR8 :00007ffec796e908 R9 :00007fc3a34000c0\r\nR10:00007fc3a320d060 R11:00007fc3a320e860\r\nR12:00007ffec796e908 R13:00007ffec796e8f0\r\nR14:00007fc3a321b603 R15:000000000000001e\r\nRIP:00000000004a1d06 EFL:0000000000010206\r\nCSGSFS:0000000000000033\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89f) -> 000000007b0011d9\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89e) -> 0000000000000007\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89d) -> 00007fc3a33ab5bc\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89c) -> 00007fc3a33ab00d\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89b) -> 0000000000000003\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e89a) -> 0000000000000000\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e899) -> 00000000004a04ae\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e898) -> 00000000000003e8\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e897) -> 00007fc3958ebed0\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e896) -> 00000000000000aa\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e895) -> 00007fc3948f24c0\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e894) -> 000000000000001e\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e893) -> 00000000004a0379\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e892) -> 00007ffec796e8f8\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e891) -> 00007fc3a33ab000\r\n29240:M 08 Nov 17:45:41.896 # (00007ffec796e890) -> 00007fc41e3ac79a\r\n\r\n------ FAST MEMORY TEST ------\r\n29240:M 08 Nov 17:45:41.896 # Bio thread for job type #0 terminated\r\n29240:M 08 Nov 17:45:41.896 # Bio thread for job type #1 terminated\r\n29240:M 08 Nov 17:45:41.896 # Bio thread for job type #2 terminated\r\n*** Preparing to test memory region 75d000 (98304 bytes)\r\n*** Preparing to test memory region 89f000 (135168 bytes)\r\n*** Preparing to test memory region 7fc394800000 (218103808 bytes)\r\n*** Preparing to test memory region 7fc3a19fe000 (8388608 bytes)\r\n*** Preparing to test memory region 7fc3a21ff000 (8388608 bytes)\r\n*** Preparing to test memory region 7fc3a2a00000 (8388608 bytes)\r\n*** Preparing to test memory region 7fc3a3200000 (4194304 bytes)\r\n*** Preparing to test memory region 7fc3a3af8000 (16384 bytes)\r\n*** Preparing to test memory region 7fc3a3d15000 (16384 bytes)\r\n*** Preparing to test memory region 7fc3a443c000 (16384 bytes)\r\n*** Preparing to test memory region 7fc3a4449000 (8192 bytes)\r\n*** Preparing to test memory region 7fc3a444d000 (4096 bytes)\r\n.O.O.O.O.O.O.O.O.O.O.O.O\r\nFast memory test PASSED, however your memory can still be broken. Please run a memory test for several hours if possible.\r\n\r\n------ DUMPING CODE AROUND EIP ------\r\nSymbol: lpNext (base: 0x4a1ce2)\r\nModule: /usr/local/bin/redis-server-streams 127.0.0.1:6400 (base 0x400000)\r\n$ xxd -r -p /tmp/dump.hex /tmp/dump.bin\r\n$ objdump --adjust-vma=0x4a1ce2 -D -b binary -m i386:x86-64 /tmp/dump.bin\r\n------\r\n29240:M 08 Nov 17:45:42.686 # dump of function (hexdump of 164 bytes):\r\n554889e54883ec1048897df8488975f0488b45f04889c7e8a3ffffff488945f0488b45f00fb6003cff7507b800000000eb04488b45f0c9c3554889e54883ec2048897de8488975e0488b55e0488b45e84829c24889d04883f8067507b800000000eb3d48836de001488b45e04889c7e894fcffff488945f8488b45f84889c6bf00000000e8f1faffff480145f8b801000000482b45f84889c2488b45e04801d0c9c35548\r\n\r\n=== REDIS BUG REPORT END. Make sure to include from START to END. ===\r\n```\r\n",
  "state": "closed",
  "created_at": "2017-11-08T06:57:49Z",
  "updated_at": "2017-11-15T11:51:06Z",
  "closed_at": "2017-11-15T11:51:06Z",
  "labels": [
    "critical bug",
    "crash report",
    "streams"
  ],
  "comments_data": [
    {
      "id": 342762972,
      "user": "antirez",
      "created_at": "2017-11-08T09:39:34Z",
      "body": "Thank you @nicois, do you know exactly what keys existed among the three mentioned in the command execution when you ran it? Thanks."
    },
    {
      "id": 342940654,
      "user": "nicois",
      "created_at": "2017-11-08T19:58:10Z",
      "body": "I don't fully understand the RDB binary structure, but I'm 90% sure it only had the notes_1 stream defined.\r\n\r\n\r\n$ grep schedule_1 /var/redis/6400/dump.rdb.crashing \r\n$ grep notes_1 /var/redis/6400/dump.rdb.crashing \r\nBinary file /var/redis/6400/dump.rdb.crashing matches\r\n$ grep patient_1 /var/redis/6400/dump.rdb.crashing \r\n"
    },
    {
      "id": 342952955,
      "user": "nicois",
      "created_at": "2017-11-08T20:42:59Z",
      "body": "I don't know if it helps, but I have kept a copy of the RDB, and when I tried restarted redis it would crash immediately, so I can reproduce the fault. Unfortuanately the content of the notes is sensitive, so I cannot share the file with you - though if there are any operations you'd like me to perform on it, I would be very happy to do so.\r\n"
    },
    {
      "id": 342957307,
      "user": "nicois",
      "created_at": "2017-11-08T20:58:20Z",
      "body": "Not sure if it's helpful, but when I reload the failing RDB, this is what happens when I try to operate on the notes_1 stream. Note that I have to restart the server after the XREAD and XRANGE, as the server crashes.\r\nAlso, I don't think it's relevant, but I do have a password on the server, which I have stripped from the lines below.\r\n\r\n$ redis-cli-streams -p 6400  XREAD STREAMS notes_1 0 | wc\r\nError: Server closed the connection\r\n      0       0       0\r\n$ redis-cli-streams -p 6400 XRANGE notes_1 - + | wc                                                                                                               \r\nError: Server closed the connection\r\n      0       0       0\r\n$ redis-cli-streams -p 6400 XADD new_stream_1 '*' foo bar                                                                                                         \r\n1510174431610-0\r\n"
    },
    {
      "id": 342957905,
      "user": "antirez",
      "created_at": "2017-11-08T21:00:41Z",
      "body": "That's super helpful @nicois ! Please could you send me the RDB file in some way? My email address is antirez - at - gmail"
    },
    {
      "id": 342961198,
      "user": "nicois",
      "created_at": "2017-11-08T21:12:13Z",
      "body": "Done @antirez . Shared via google drive."
    },
    {
      "id": 342961956,
      "user": "antirez",
      "created_at": "2017-11-08T21:14:55Z",
      "body": "Thanks! Appreciated. Leaving tomorrow for a conference but I'll try to check it on the go."
    },
    {
      "id": 342994978,
      "user": "forkfork",
      "created_at": "2017-11-08T23:21:52Z",
      "body": "Might be related to https://github.com/antirez/redis/issues/4349 (reading >4096 bytes from a stream)?"
    },
    {
      "id": 343293194,
      "user": "nicois",
      "created_at": "2017-11-09T21:12:54Z",
      "body": "It's absolutely possible. These notes include json-encoded RTF documents, some of which could certainly be 4kb or larger."
    },
    {
      "id": 344307954,
      "user": "antirez",
      "created_at": "2017-11-14T16:07:56Z",
      "body": "Back from my travel, thanks @nicois, @forkfork, yes it looks like it's the same. Investigating and reporting."
    },
    {
      "id": 344315380,
      "user": "antirez",
      "created_at": "2017-11-14T16:30:18Z",
      "body": "Ok there is a problem in listpack.c with strings with the 32 bit length encoding. Unfortunately even fixing the bug the fuzz tester is still reporting failures, so I've to investigate better what is happening. The listpack fuzz tester was yet not finished and it was not able to stress certain encoding types. I'll fix upstream in antirez/listpack directly and back port the fix here. Please note: **the data structure itself generated by XADD** is broken, so fixing this bug will not fix the data, that will have to be re-created from scratch. I can already say this because of the bug I already found, regardless of the next one (fund by the fuzzer) that is still pending."
    },
    {
      "id": 344570090,
      "user": "antirez",
      "created_at": "2017-11-15T11:50:46Z",
      "body": "Problem fixed, thank you @nicois @forkfork "
    }
  ]
}