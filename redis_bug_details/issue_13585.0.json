{
  "issue_number": 13585.0,
  "title": "[CRASH] Redis 7.2.0 server crashing on installation through docker",
  "body": "Redis installation through docker image \"docker pull redis/redis-stack:7.2.0-v0\" fails with the below given crash report. Meanwhile, docker image \"docker pull redis/redis-stack:6.2.6-v9\" works fine. We want to use redis 7.2\r\n\r\n**Crash report**\r\n\r\n9:C 03 Oct 2024 12:39:01.910 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\r\n9:C 03 Oct 2024 12:39:01.910 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n9:C 03 Oct 2024 12:39:01.910 * Redis version=7.2.0, bits=64, commit=00000000, modified=0, pid=9, just started\r\n9:C 03 Oct 2024 12:39:01.910 * Configuration loaded\r\n9:M 03 Oct 2024 12:39:01.912 * monotonic clock: POSIX clock_gettime\r\n/opt/redis-stack/nodejs/bin/node[8]: ../src/node_platform.cc:61:std::unique_ptr<long unsigned int> node::WorkerThreadsTaskRunner::DelayedTaskScheduler::Start(): Assertion `(0) == (uv_thread_create(t.get(), start_thread, this))' failed.\r\n9:M 03 Oct 2024 12:39:01.912 * Running mode=standalone, port=6379.\r\n9:M 03 Oct 2024 12:39:01.912 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\r\n 1: 0xb09c10 node::Abort() [/opt/redis-stack/nodejs/bin/node]\r\n 2: 0xb09c8e  [/opt/redis-stack/nodejs/bin/node]\r\n 3: 0xb794ce  [/opt/redis-stack/nodejs/bin/node]\r\n9:M 03 Oct 2024 12:39:01.915 * <search> Redis version found by RedisSearch : 7.2.0 - oss\r\n9:M 03 Oct 2024 12:39:01.915 * <search> RediSearch version 2.8.4 (Git=HEAD-7797d39d)\r\n 4: 0xb79596 node::NodePlatform::NodePlatform(int, v8::TracingController*) [/opt/redis-stack/nodejs/bin/node]\r\n9:M 03 Oct 2024 12:39:01.915 * <search> Low level api version 1 initialized successfully\r\n9:M 03 Oct 2024 12:39:01.915 * <search> concurrent writes: OFF, gc: ON, prefix min length: 2, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  10000, search pool size: 20, index pool size: 8, \r\n 5: 0xacd0e9 node::InitializeOncePerProcess(int, char**, node::InitializationSettingsFlags, node::ProcessFlags::Flags) [/opt/redis-stack/nodejs/bin/node]\r\n 6: 0xacd399 node::Start(int, char**) [/opt/redis-stack/nodejs/bin/node]\r\n 7: 0x7fabd08eed90  [/lib/x86_64-linux-gnu/libc.so.6]\r\n 8: 0x7fabd08eee40 __libc_start_main [/lib/x86_64-linux-gnu/libc.so.6]\r\n 9: 0xa4067c  [/opt/redis-stack/nodejs/bin/node]\r\n\r\n![image](https://github.com/user-attachments/assets/a1467eea-4f69-492c-84aa-93d2762f9df1)\r\n\r\n**Additional information**\r\n\r\n1. OS distribution and version: os:Linux 3.10.0-1160.119.1.el7.x86_64 x86_64\r\n2. Docker version: 18.09\r\n3. Steps to reproduce: Pull the docker image using \"docker pull redis/redis-stack:7.2.0-v0\" command, and then run the container.",
  "state": "open",
  "created_at": "2024-10-03T13:36:41Z",
  "updated_at": "2024-10-07T09:35:19Z",
  "closed_at": null,
  "labels": [
    "state:to-be-closed"
  ],
  "comments_data": [
    {
      "id": 2391496251,
      "user": "sundb",
      "created_at": "2024-10-03T13:57:33Z",
      "body": "same as https://github.com/redis/redis/issues/12362"
    }
  ]
}