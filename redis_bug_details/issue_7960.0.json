{
  "issue_number": 7960.0,
  "title": "[BUG] redis-benchmark with pipeline not enforcing upper bound to number of requests.",
  "body": "**Describe the bug**\r\nThis is a small bug that can be easily reproduced by using redis-benchmark with a pipeline number larger than 1. \r\n\r\nBottom line we're issuing more requests to the server than expected (meaning we're not enforcing upper bound to number of requests) and this can be easily address by changing `atomicGetIncr(config.requests_issued, requests_issued, 1);` by `atomicGetIncr(config.requests_issued, requests_issued, config.pipeline);`\r\n\r\nI caught this issue while adding tests for redis-benchmark as per #7947 discussion. Additionally that same PR fixes this issue and includes tests to keep this bug from happening again.\r\n\r\n**To reproduce**\r\n```\r\n$ ./src/redis-benchmark -P 10 -c 5 -n 1000 -t set\r\n====== SET ======                                          \r\n  1000 requests completed in 0.00 seconds\r\n  5 parallel clients\r\n  3 bytes payload\r\n  keep alive: 1\r\n  host configuration \"save\": 3600 1 300 100 60 10000\r\n  host configuration \"appendonly\": no\r\n  multi-thread: no\r\n\r\nLatency by percentile distribution:\r\n0.000% <= 0.047 milliseconds (cumulative count 20)\r\n50.000% <= 0.111 milliseconds (cumulative count 560)\r\n75.000% <= 0.143 milliseconds (cumulative count 760)\r\n87.500% <= 0.183 milliseconds (cumulative count 880)\r\n93.750% <= 0.231 milliseconds (cumulative count 950)\r\n96.875% <= 0.903 milliseconds (cumulative count 970)\r\n98.438% <= 0.935 milliseconds (cumulative count 990)\r\n99.219% <= 0.943 milliseconds (cumulative count 1000)\r\n100.000% <= 0.943 milliseconds (cumulative count 1000)\r\n\r\nCumulative distribution of latencies:\r\n46.000% <= 0.103 milliseconds (cumulative count 460)\r\n92.000% <= 0.207 milliseconds (cumulative count 920)\r\n95.000% <= 0.303 milliseconds (cumulative count 950)\r\n97.000% <= 0.903 milliseconds (cumulative count 970)\r\n100.000% <= 1.007 milliseconds (cumulative count 1000)\r\n\r\nSummary:\r\n  throughput summary: 333333.34 requests per second\r\n  latency summary (msec):\r\n          avg       min       p50       p95       p99       max\r\n        0.150     0.040     0.111     0.231     0.935     0.943\r\n```\r\n### commandstats output ( expected 1000 set commands and we can notice 1040 )\r\n```\r\n$ redis-cli info commandstats\r\n# Commandstats\r\ncmdstat_config:calls=3,usec=58,usec_per_call=19.33\r\ncmdstat_set:calls=1040,usec=371,usec_per_call=0.36\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe clause enforcing upper bound to number of requests to work for both pipeline and non pipelined commands.\r\n\r\n\r\n\r\n",
  "state": "closed",
  "created_at": "2020-10-25T17:45:58Z",
  "updated_at": "2020-10-26T06:05:00Z",
  "closed_at": "2020-10-26T06:05:00Z",
  "labels": [],
  "comments_data": []
}