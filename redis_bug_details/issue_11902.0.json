{
  "issue_number": 11902.0,
  "title": "[BUG] Redis does not honour the maxmemory parameter",
  "body": "**Describe the bug**\r\n\r\nIn replica mode, with read-only set to no, Redis does not honour the maxmemory parameter\r\n\r\n**To reproduce**\r\n\r\nSetup Redis as a Replica, read-only no. Add data to Redis until it gets killed by the OOM.  I added a dictionary provided by wbritish on Ubuntu. \r\nIn the following setup, I have maxmemory set to 100MB on a system with 2GB of RAM. Eviction Policy set to allkeys-lfu.\r\n\r\n```bash\r\nsudo apt install wbritish\r\n\r\nwhile :\r\ndo\r\nkey=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c10)\r\nredis-cli -x set $key < /usr/share/dict/british-english\r\ndone\r\n```\r\n\r\nYou can check the used_memory_rss vs the maxmemory parameters with `redis-cli info memory | grep -e used_memory_rss_human -e maxmemory_human`\r\n\r\n```bash\r\n$ redis-cli info memory | grep -e used_memory_rss_human -e maxmemory_human\r\nused_memory_rss_human:1.74G\r\nmaxmemory_human:100.00M\r\nuser@redis-host:~$ redis-cli info memory | grep -e used_memory_rss_human -e maxmemory_human\r\n<Redis killed by OOM>\r\nError: Connection reset by peer\r\nuser@redis-host:~$ \r\nuser@redis-host:~$ redis-cli info memory | grep -e used_memory_rss_human -e maxmemory_human\r\nused_memory_rss_human:73.84M\r\nmaxmemory_human:100.00M\r\n```\r\n\r\nPlease note - My use case for Redis is as a cache for Ruby on Rails - I don't normally use it to store dictionaries.\r\n\r\n**Expected behavior**\r\n\r\nThis Redis instance is using allkeys-lfu, as such I think Redis should expire keys and as a last resort, reject writes.\r\n\r\n**Additional information**\r\n\r\nThis instance is set as a replica of a Redis master and has replica-read-only set to no.\r\n\r\n```bash\r\n$ redis-cli config get replica-read-only\r\n1) \"replica-read-only\"\r\n2) \"no\"\r\n```\r\n\r\nSwap is enabled at the same size as RAM\r\n\r\n```bash\r\n$ free -m\r\n               total        used        free      shared  buff/cache   available\r\nMem:            1975        1377         425           0         173         457\r\nSwap:           1976         120        1856\r\n```\r\n\r\nVM Overcommit is enabled:\r\n\r\n\r\n```bash\r\n$ sysctl vm.overcommit_memory\r\nvm.overcommit_memory = 1\r\n```\r\n\r\nHugepages are disabled: \r\n\r\n```bash\r\n$ cat /sys/kernel/mm/transparent_hugepage/enabled\r\nalways madvise [never]\r\n```\r\n\r\nEviction Policy is set to LFU\r\n\r\n```bash\r\n~$ redis-cli config get maxmemory-policy\r\n1) \"maxmemory-policy\"\r\n2) \"allkeys-lfu\"\r\n```\r\n\r\nMax Memory is set to 100MB\r\n```bash\r\n$ redis-cli config get maxmemory\r\n1) \"maxmemory\"\r\n2) \"104857600\"\r\n```\r\n\r\nSystem memory is 2GB:\r\n\r\n```bash\r\n$ cat /proc/meminfo | head -n 1\r\nMemTotal:        2023376 kB\r\n```\r\n\r\nRedis version is 7.0.9\r\n```bash\r\n$ redis-server --version\r\nRedis server v=7.0.9 sha=00000000:0 malloc=jemalloc-5.2.1 bits=64 build=448f00a942bc1f77\r\n```\r\n\r\nOS is Ubuntu 22.04.02 LTS on an Intel based VPS.\r\n",
  "state": "closed",
  "created_at": "2023-03-11T02:24:31Z",
  "updated_at": "2023-03-13T02:28:14Z",
  "closed_at": "2023-03-12T09:53:02Z",
  "labels": [
    "state:to-be-closed"
  ],
  "comments_data": [
    {
      "id": 1465083053,
      "user": "enjoy-binbin",
      "created_at": "2023-03-12T03:32:33Z",
      "body": "i guess the reason is allocator_frag_bytes, can you try to post the whole INFO result?"
    },
    {
      "id": 1465087484,
      "user": "dkam",
      "created_at": "2023-03-12T04:07:49Z",
      "body": "Hi @enjoy-binbin - sure!\r\n\r\n```\r\nredis01:~$ redis-cli info\r\n# Server\r\nredis_version:7.0.9\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:448f00a942bc1f77\r\nredis_mode:standalone\r\nos:Linux 5.15.0-67-generic x86_64\r\narch_bits:64\r\nmonotonic_clock:POSIX clock_gettime\r\nmultiplexing_api:epoll\r\natomicvar_api:c11-builtin\r\ngcc_version:11.3.0\r\nprocess_id:823561\r\nprocess_supervised:systemd\r\nrun_id:58fcb82c7cb7cca82454663ebe920f66e2a02b5c\r\ntcp_port:6379\r\nserver_time_usec:1678594008682019\r\nuptime_in_seconds:86\r\nuptime_in_days:0\r\nhz:10\r\nconfigured_hz:10\r\nlru_clock:872408\r\nexecutable:/usr/bin/redis-server\r\nconfig_file:/etc/redis/redis.conf\r\nio_threads_active:0\r\n\r\n# Clients\r\nconnected_clients:2\r\ncluster_connections:0\r\nmaxclients:10000\r\nclient_recent_max_input_buffer:24\r\nclient_recent_max_output_buffer:0\r\nblocked_clients:0\r\ntracking_clients:0\r\nclients_in_timeout_table:0\r\n\r\n# Memory\r\nused_memory:2469512608\r\nused_memory_human:2.30G\r\nused_memory_rss:1848303616\r\nused_memory_rss_human:1.72G\r\nused_memory_peak:2470520848\r\nused_memory_peak_human:2.30G\r\nused_memory_peak_perc:99.96%\r\nused_memory_overhead:1011948\r\nused_memory_startup:862440\r\nused_memory_dataset:2468500660\r\nused_memory_dataset_perc:99.99%\r\nallocator_allocated:2469779344\r\nallocator_active:2479742976\r\nallocator_resident:2486583296\r\ntotal_system_memory:2071937024\r\ntotal_system_memory_human:1.93G\r\nused_memory_lua:31744\r\nused_memory_vm_eval:31744\r\nused_memory_lua_human:31.00K\r\nused_memory_scripts_eval:0\r\nnumber_of_cached_scripts:0\r\nnumber_of_functions:0\r\nnumber_of_libraries:0\r\nused_memory_vm_functions:32768\r\nused_memory_vm_total:64512\r\nused_memory_vm_total_human:63.00K\r\nused_memory_functions:184\r\nused_memory_scripts:184\r\nused_memory_scripts_human:184B\r\nmaxmemory:943718400\r\nmaxmemory_human:900.00M\r\nmaxmemory_policy:allkeys-lfu\r\nallocator_frag_ratio:1.00\r\nallocator_frag_bytes:9963632\r\nallocator_rss_ratio:1.00\r\nallocator_rss_bytes:6840320\r\nrss_overhead_ratio:0.74\r\nrss_overhead_bytes:-638279680\r\nmem_fragmentation_ratio:0.75\r\nmem_fragmentation_bytes:-621169064\r\nmem_not_counted_for_evict:0\r\nmem_replication_backlog:20508\r\nmem_total_replication_buffers:20504\r\nmem_clients_slaves:0\r\nmem_clients_normal:1816\r\nmem_cluster_links:0\r\nmem_aof_buffer:0\r\nmem_allocator:jemalloc-5.2.1\r\nactive_defrag_running:0\r\nlazyfree_pending_objects:0\r\nlazyfreed_objects:0\r\n\r\n# Persistence\r\nloading:0\r\nasync_loading:0\r\ncurrent_cow_peak:0\r\ncurrent_cow_size:0\r\ncurrent_cow_size_age:0\r\ncurrent_fork_perc:0.00\r\ncurrent_save_keys_processed:0\r\ncurrent_save_keys_total:0\r\nrdb_changes_since_last_save:305\r\nrdb_bgsave_in_progress:0\r\nrdb_last_save_time:1678593922\r\nrdb_last_bgsave_status:ok\r\nrdb_last_bgsave_time_sec:-1\r\nrdb_current_bgsave_time_sec:-1\r\nrdb_saves:0\r\nrdb_last_cow_size:0\r\nrdb_last_load_keys_expired:0\r\nrdb_last_load_keys_loaded:2050\r\naof_enabled:0\r\naof_rewrite_in_progress:0\r\naof_rewrite_scheduled:0\r\naof_last_rewrite_time_sec:-1\r\naof_current_rewrite_time_sec:-1\r\naof_last_bgrewrite_status:ok\r\naof_rewrites:0\r\naof_rewrites_consecutive_failures:0\r\naof_last_write_status:ok\r\naof_last_cow_size:0\r\nmodule_fork_in_progress:0\r\nmodule_fork_last_cow_size:0\r\n\r\n# Stats\r\ntotal_connections_received:514\r\ntotal_commands_processed:1585\r\ninstantaneous_ops_per_sec:0\r\ntotal_net_input_bytes:497431094\r\ntotal_net_output_bytes:24149\r\ntotal_net_repl_input_bytes:17864\r\ntotal_net_repl_output_bytes:0\r\ninstantaneous_input_kbps:0.00\r\ninstantaneous_output_kbps:0.02\r\ninstantaneous_input_repl_kbps:0.00\r\ninstantaneous_output_repl_kbps:0.00\r\nrejected_connections:0\r\nsync_full:0\r\nsync_partial_ok:0\r\nsync_partial_err:0\r\nexpired_keys:0\r\nexpired_stale_perc:0.00\r\nexpired_time_cap_reached_count:0\r\nexpire_cycle_cpu_milliseconds:0\r\nevicted_keys:0\r\nevicted_clients:0\r\ntotal_eviction_exceeded_time:0\r\ncurrent_eviction_exceeded_time:0\r\nkeyspace_hits:0\r\nkeyspace_misses:0\r\npubsub_channels:0\r\npubsub_patterns:0\r\npubsubshard_channels:0\r\nlatest_fork_usec:0\r\ntotal_forks:0\r\nmigrate_cached_sockets:0\r\nslave_expires_tracked_keys:0\r\nactive_defrag_hits:0\r\nactive_defrag_misses:0\r\nactive_defrag_key_hits:0\r\nactive_defrag_key_misses:0\r\ntotal_active_defrag_time:0\r\ncurrent_active_defrag_time:0\r\ntracking_total_keys:0\r\ntracking_total_items:0\r\ntracking_total_prefixes:0\r\nunexpected_error_replies:0\r\ntotal_error_replies:204\r\ndump_payload_sanitizations:0\r\ntotal_reads_processed:7142\r\ntotal_writes_processed:591\r\nio_threaded_reads_processed:0\r\nio_threaded_writes_processed:0\r\nreply_buffer_shrinks:1\r\nreply_buffer_expands:0\r\n\r\n# Replication\r\nrole:slave\r\nmaster_host:100.75.219.35\r\nmaster_port:6379\r\nmaster_link_status:up\r\nmaster_last_io_seconds_ago:3\r\nmaster_sync_in_progress:0\r\nslave_read_repl_offset:18140\r\nslave_repl_offset:18140\r\nslave_priority:100\r\nslave_read_only:0\r\nreplica_announced:1\r\nconnected_slaves:0\r\nmaster_failover_state:no-failover\r\nmaster_replid:faa424333eeef08293687bf46e048ad4f13add98\r\nmaster_replid2:0000000000000000000000000000000000000000\r\nmaster_repl_offset:18140\r\nsecond_repl_offset:-1\r\nrepl_backlog_active:1\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:277\r\nrepl_backlog_histlen:17864\r\n\r\n# CPU\r\nused_cpu_sys:1.127987\r\nused_cpu_user:4.931278\r\nused_cpu_sys_children:0.000000\r\nused_cpu_user_children:0.000000\r\nused_cpu_sys_main_thread:1.127144\r\nused_cpu_user_main_thread:4.930548\r\n\r\n# Modules\r\n\r\n# Errorstats\r\nerrorstat_LOADING:count=204\r\n\r\n# Cluster\r\ncluster_enabled:0\r\n\r\n# Keyspace\r\ndb0:keys=2355,expires=0,avg_ttl=0\r\n\r\n```"
    },
    {
      "id": 1465125586,
      "user": "oranagra",
      "created_at": "2023-03-12T08:34:46Z",
      "body": "if you set `replica-read-only` to `no`, you may also want to set `replica-ignore-maxmemory` to `no`\r\n\r\nnote that writable replicas can easily get out of sync with the master, and commands it forward can easily fail (e.g. on `WRONGTYPE`, or `no such key`)."
    },
    {
      "id": 1465143712,
      "user": "dkam",
      "created_at": "2023-03-12T09:53:02Z",
      "body": "Oh - that's an unexpected setting.  What scenario would you want a replica to be writable but to ignore maxmemory?\r\n\r\n*edit* I meant to say \"unexpected setting!\""
    },
    {
      "id": 1465166139,
      "user": "oranagra",
      "created_at": "2023-03-12T11:20:52Z",
      "body": "you can ask the same question about the master...\r\nif you wanna conduct your own deletions mechanism, and get OOM error if it fails."
    },
    {
      "id": 1465336988,
      "user": "dkam",
      "created_at": "2023-03-13T00:02:29Z",
      "body": "Perhaps there should be a warning in the Redis log when it's setup as a read-write replica that maxmemory will be ignored? "
    },
    {
      "id": 1465417885,
      "user": "enjoy-binbin",
      "created_at": "2023-03-13T02:28:14Z",
      "body": "we do have a redis.conf that saying that:\r\n```\r\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\r\n# (unless it is promoted to master after a failover or manually). It means\r\n# that the eviction of keys will be just handled by the master, sending the\r\n# DEL commands to the replica as keys evict in the master side.\r\n#\r\n# This behavior ensures that masters and replicas stay consistent, and is usually\r\n# what you want, however if your replica is writable, or you want the replica\r\n# to have a different memory setting, and you are sure all the writes performed\r\n# to the replica are idempotent, then you may change this default (but be sure\r\n# to understand what you are doing).\r\n#\r\n# Note that since the replica by default does not evict, it may end using more\r\n# memory than the one set via maxmemory (there are certain buffers that may\r\n# be larger on the replica, or data structures may sometimes take more memory\r\n# and so forth). So make sure you monitor your replicas and make sure they\r\n# have enough memory to never hit a real out-of-memory condition before the\r\n# master hits the configured maxmemory setting.\r\n#\r\n# replica-ignore-maxmemory yes\r\n```"
    }
  ]
}