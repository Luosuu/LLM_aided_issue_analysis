{
  "issue_number": 13634.0,
  "title": "[BUG] Unable to connect to Redis",
  "body": "**Describe the bug**\r\n\r\nUnable to connect Redis to Spring boot dockerize application\r\n\r\n**To reproduce**\r\n\r\nI'm using a Redis image for my Spring Boot application and its running perfectly in my local. However in docker-compose environment, although I have followed every instruction, document, tried every configuration, I still cannot connect it to my Dockerize Spring Boot application. \r\n\r\n**docker-compose.yml:**\r\n\r\n```\r\nversion: '3.8'\r\n\r\nservices:\r\n  app:\r\n    container_name: mikabackend\r\n    image:\r\n    environment:\r\n      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres\r\n      SPRING_DATASOURCE_USERNAME: username\r\n      SPRING_DATASOURCE_PASSWORD: password\r\n      SPRING_REDIS_HOST: redis\r\n      SPRING_REDIS_PORT: 6379\r\n      JWT_SECRET_KEY: ${JWT_SECRET_KEY}\r\n      MAIL_USERNAME: ${MAIL_USERNAME}\r\n      MAIL_PASSWORD: ${MAIL_PASSWORD}\r\n    ports:\r\n      - \"8080:8080\"\r\n    depends_on:\r\n      redis:\r\n        condition: service_healthy\r\n      postgres:\r\n        condition: service_started\r\n    networks:\r\n      - mika\r\n    restart: unless-stopped\r\n\r\n  postgres:\r\n    container_name: postgres-sql\r\n    image: postgres\r\n    environment:\r\n      POSTGRES_USER: username\r\n      POSTGRES_PASSWORD: password\r\n      PGDATA: /data/postgres\r\n    volumes:\r\n      - postgres:/data/postgres\r\n    ports:\r\n      - \"5432:5432\"\r\n    networks:\r\n      - mika\r\n    restart: unless-stopped\r\n\r\n  pgadmin:\r\n    container_name: pgadmin\r\n    image: dpage/pgadmin4\r\n    environment:\r\n      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}\r\n      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}\r\n      PGADMIN_CONFIG_SERVER_MODE: 'False'\r\n    volumes:\r\n      - pgadmin:/var/lib/pgadmin\r\n    ports:\r\n      - \"5050:80\"\r\n    networks:\r\n      - mika\r\n    depends_on:\r\n      - postgres\r\n    restart: unless-stopped\r\n\r\n  redis:\r\n    image: redis:7-alpine\r\n    container_name: redis\r\n    ports:\r\n      - \"6379:6379\"\r\n    volumes:\r\n      - redis_data:/data\r\n    networks:\r\n      - mika\r\n    healthcheck:\r\n      test: [ \"CMD\", \"redis-cli\", \"ping\" ]\r\n      interval: 1s\r\n      timeout: 2s\r\n      retries: 10\r\n\r\nnetworks:\r\n  mika:\r\n    driver: bridge\r\n\r\nvolumes:\r\n  postgres:\r\n  pgadmin:\r\n  redis_data:\r\n```\r\n\r\n**application.yml**\r\n\r\n```\r\nspring:\r\n  datasource:\r\n    url: jdbc:postgresql://localhost:5432/postgres\r\n    username: username\r\n    password: password\r\n    driver-class-name: org.postgresql.Driver\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: update\r\n    show-sql: false\r\n    properties:\r\n      hibernate:\r\n        format_sql: true\r\n    database: postgresql\r\n\r\n  application:\r\n    name: mika\r\n  mail:\r\n    host: smtp.gmail.com\r\n    port: 587\r\n    username: ${MAIL_USERNAME}\r\n    password: ${MAIL_PASSWORD}\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n  data:\r\n    redis:\r\n      host: redis\r\n      port: 6379\r\napplication:\r\n  security:\r\n    jwt:\r\n      secret-key: ${JWT_SECRET_KEY}\r\n      expiration: 86400000 # a day\r\n      refresh-token:\r\n        expiration: 604800000 # 7 days\r\nserver:\r\n  port: 8080\r\napp:\r\n  password:\r\n    default: 12345678\r\nmanagement:\r\n  health:\r\n    mail:\r\n      enabled: off\r\nfile:\r\n  storage:\r\n    path: /uploads\r\n```\r\n\r\n**application log**\r\n```\r\n2024-11-03 22:49:34 mikabackend   | \r\n2024-11-03 22:49:34 mikabackend   |   .   ____          _            __ _ _\r\n2024-11-03 22:49:34 mikabackend   |  /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n2024-11-03 22:49:34 mikabackend   | ( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n2024-11-03 22:49:34 mikabackend   |  \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n2024-11-03 22:49:34 mikabackend   |   '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n2024-11-03 22:49:34 mikabackend   |  =========|_|==============|___/=/_/_/_/\r\n2024-11-03 22:49:34 mikabackend   |  :: Spring Boot ::                (v3.2.3)\r\n2024-11-03 22:49:34 mikabackend   | \r\n2024-11-03 22:49:34 mikabackend   | 2024-11-03 15:49:34 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final\r\n2024-11-03 22:49:34 mikabackend   | 2024-11-03 15:49:34 INFO  c.m.a.AnimestyleBackendApplication - Starting AnimestyleBackendApplication v0.0.1-SNAPSHOT using Java 17-ea with PID 1 (/app/app.jar started by root in /app)\r\n2024-11-03 22:49:34 mikabackend   | 2024-11-03 15:49:34 INFO  c.m.a.AnimestyleBackendApplication - No active profile set, falling back to 1 default profile: \"default\"\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 14 JPA repository interfaces.\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.\r\n2024-11-03 22:49:36 mikabackend   | 2024-11-03 15:49:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 1 Redis repository interface.\r\n2024-11-03 22:49:37 mikabackend   | 2024-11-03 15:49:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)\r\n2024-11-03 22:49:37 mikabackend   | 2024-11-03 15:49:37 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler [\"http-nio-8080\"]\r\n2024-11-03 22:49:37 mikabackend   | 2024-11-03 15:49:37 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]\r\n2024-11-03 22:49:37 mikabackend   | 2024-11-03 15:49:37 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]\r\n2024-11-03 22:49:38 mikabackend   | 2024-11-03 15:49:38 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext\r\n2024-11-03 22:49:38 mikabackend   | 2024-11-03 15:49:38 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3142 ms\r\n2024-11-03 22:49:38 mikabackend   | 2024-11-03 15:49:38 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]\r\n2024-11-03 22:49:38 mikabackend   | 2024-11-03 15:49:38 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final\r\n2024-11-03 22:49:38 mikabackend   | 2024-11-03 15:49:38 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled\r\n2024-11-03 22:49:39 mikabackend   | 2024-11-03 15:49:39 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer\r\n2024-11-03 22:49:39 mikabackend   | 2024-11-03 15:49:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...\r\n2024-11-03 22:49:39 mikabackend   | 2024-11-03 15:49:39 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33060020\r\n2024-11-03 22:49:39 mikabackend   | 2024-11-03 15:49:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.\r\n2024-11-03 22:49:39 mikabackend   | 2024-11-03 15:49:39 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)\r\n2024-11-03 22:49:40 mikabackend   | 2024-11-03 15:49:40 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)\r\n2024-11-03 22:49:40 mikabackend   | 2024-11-03 15:49:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'\r\n2024-11-03 22:49:41 mikabackend   | 2024-11-03 15:49:41 INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.\r\n2024-11-03 22:49:43 mikabackend   | 2024-11-03 15:49:43 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\r\n2024-11-03 22:49:43 mikabackend   | 2024-11-03 15:49:43 INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'\r\n2024-11-03 22:49:43 mikabackend   | 2024-11-03 15:49:43 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@42e58f8e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f815a12, org.springframework.security.web.context.SecurityContextHolderFilter@b625b00, org.springframework.security.web.header.HeaderWriterFilter@5a27a096, org.springframework.web.filter.CorsFilter@1d67a1ad, org.springframework.security.web.authentication.logout.LogoutFilter@7e9e125f, com.miki.animestylebackend.config.JwtAuthenticationFilter@f5d20d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e0fbfb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53279691, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4aa0b026, org.springframework.security.web.session.SessionManagementFilter@7447b08c, org.springframework.security.web.access.ExceptionTranslationFilter@a11811c, org.springframework.security.web.access.intercept.AuthorizationFilter@44eb9af1]\r\n2024-11-03 22:49:44 mikabackend   | 2024-11-03 15:49:44 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler [\"http-nio-8080\"]\r\n2024-11-03 22:49:44 mikabackend   | 2024-11-03 15:49:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''\r\n2024-11-03 22:49:44 mikabackend   | 2024-11-03 15:49:44 INFO  c.m.a.AnimestyleBackendApplication - Started AnimestyleBackendApplication in 10.657 seconds (process running for 11.341)\r\n2024-11-03 22:50:49 mikabackend   | 2024-11-03 15:50:49 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'\r\n2024-11-03 22:50:49 mikabackend   | 2024-11-03 15:50:49 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'\r\n2024-11-03 22:50:49 mikabackend   | 2024-11-03 15:50:49 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms\r\n2024-11-03 22:50:49 mikabackend   | 2024-11-03 15:50:49 INFO  c.m.a.controller.BaseController - Current user: admin@gmail.com\r\n2024-11-03 22:50:49 mikabackend   | 2024-11-03 15:50:49 INFO  c.m.a.controller.BaseController - Current user: admin@gmail.com\r\n```\r\n\r\n**Redis log**\r\n```\r\n2024-11-03 22:42:58 1:C 03 Nov 2024 15:42:58.650 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\r\n2024-11-03 22:42:58 1:C 03 Nov 2024 15:42:58.650 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n2024-11-03 22:42:58 1:C 03 Nov 2024 15:42:58.650 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=1, just started\r\n2024-11-03 22:42:58 1:C 03 Nov 2024 15:42:58.650 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.650 * monotonic clock: POSIX clock_gettime\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * Running mode=standalone, port=6379.\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * Server initialized\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * Loading RDB produced by version 7.4.1\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * RDB age 179 seconds\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * RDB memory usage when created 0.93 Mb\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.651 * Done loading RDB, keys loaded: 0, keys expired: 0.\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.652 * DB loaded from disk: 0.000 seconds\r\n2024-11-03 22:42:58 1:M 03 Nov 2024 15:42:58.652 * Ready to accept connections TCP\r\n```\r\n\r\n**Testing API:**\r\n![image](https://github.com/user-attachments/assets/1454d731-ac6c-4a13-855a-20b877525691)\r\n\r\n\r\n**Expected behavior**\r\n\r\nRedis can connect to spring boot dockerize application",
  "state": "open",
  "created_at": "2024-11-03T15:56:59Z",
  "updated_at": "2024-11-13T16:33:26Z",
  "closed_at": null,
  "labels": [],
  "comments_data": [
    {
      "id": 2453645278,
      "user": "sundb",
      "created_at": "2024-11-04T00:27:17Z",
      "body": "@diegok what's the config in your spring app.\r\nand you can first use `redis-cli` to check if you can connect Redis, if it works, then you need to make sure the spring config is correct."
    },
    {
      "id": 2454782671,
      "user": "dvcminh",
      "created_at": "2024-11-04T13:56:04Z",
      "body": "Hi, thank you for your reply. \r\nThe config in my spring app is the application.yml I have sent above\r\nI do use redis-cli to ensure redis is healthy before my spring app can connect with it (you can see it in the docker-compose.yml file)\r\n"
    },
    {
      "id": 2474130612,
      "user": "iyahimovitz",
      "created_at": "2024-11-13T16:33:24Z",
      "body": "Sounds like a docker DNS cache problem to me since you're trying to connect using `redis` but your health check is using `localhost`. I would try to telnet to redis using  the`redis` hostname from `app` container and see if it connects.\r\nAlso, did you try to recreate the containers? sometimes that does help with DNS cache issues."
    }
  ]
}