{
  "issue_number": 12759.0,
  "title": "[BUG] Unable to build on Debian 12 (Bookworm)",
  "body": "**Describe the bug**\r\n\r\nThe `make` command fails on Debian 12 (Bookworm):\r\n\r\n```txt\r\ninclude/jemalloc/internal/rtree.h:106:33: error: variably modified 'root' at file scope\r\n  106 |         rtree_leaf_elm_t        root[1U << (RTREE_NSB/RTREE_HEIGHT)];\r\n      |                                 ^~~~\r\nmake[3]: *** [Makefile:479: src/jemalloc.sym.o] Error 1\r\n/usr/bin/ld: cannot find ../deps/jemalloc/lib/libjemalloc.a: No such file or directory\r\n```\r\n\r\n**To reproduce**\r\n\r\n1. Create `Dockerfile`:\r\n```Dockerfile\r\nFROM debian:bookworm\r\n\r\nRUN apt update && apt install -y wget build-essential pkg-config\r\n\r\nRUN wget https://github.com/redis/redis/archive/7.2.3.tar.gz \\\r\n  && tar xf 7.2.3.tar.gz \\\r\n  && cd redis-7.2.3 \\\r\n  && make\r\n```\r\n\r\n2. Run `docker build .`\r\n\r\n**Expected behavior**\r\n\r\nBuild succeeds\r\n\r\n**Additional information**\r\n\r\nThis may be related: https://github.com/jemalloc/jemalloc/issues/2318",
  "state": "closed",
  "created_at": "2023-11-13T17:23:18Z",
  "updated_at": "2023-11-28T14:53:02Z",
  "closed_at": "2023-11-28T14:02:01Z",
  "labels": [],
  "comments_data": [
    {
      "id": 1810085000,
      "user": "yossigo",
      "created_at": "2023-11-14T12:08:26Z",
      "body": "@mhassan1 What hardware architecture are you building for? Can you include the jemalloc `configure` output?"
    },
    {
      "id": 1810219453,
      "user": "mhassan1",
      "created_at": "2023-11-14T13:36:56Z",
      "body": "I am building for `x86_64`.\r\n\r\nHere is the output of  `jemalloc configure`:\r\n```txt\r\ncd jemalloc && ./configure --disable-cxx --with-version=5.3.0-0-g0 --with-lg-quantum=3 --disable-cache-oblivious --with-jemalloc-prefix=je_ CFLAGS=\"\" LDFLAGS=\"\"\r\nchecking for xsltproc... false\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether the compiler supports GNU C... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to enable C11 features... none needed\r\nchecking whether compiler is cray... no\r\nchecking whether compiler supports -std=gnu11... yes\r\nchecking whether compiler supports -Werror=unknown-warning-option... no\r\nchecking whether compiler supports -Wall... yes\r\nchecking whether compiler supports -Wextra... yes\r\nchecking whether compiler supports -Wshorten-64-to-32... no\r\nchecking whether compiler supports -Wsign-compare... yes\r\nchecking whether compiler supports -Wundef... yes\r\nchecking whether compiler supports -Wno-format-zero-length... yes\r\nchecking whether compiler supports -Wpointer-arith... yes\r\nchecking whether compiler supports -Wno-missing-braces... yes\r\nchecking whether compiler supports -Wno-missing-field-initializers... yes\r\nchecking whether compiler supports -Wno-missing-attributes... yes\r\nchecking whether compiler supports -pipe... yes\r\nchecking whether compiler supports -g3... yes\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for stdio.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for strings.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for sys/types.h... yes\r\nchecking for unistd.h... yes\r\nchecking whether byte ordering is bigendian... no\r\nchecking size of void *... 8\r\nchecking size of int... 4\r\nchecking size of long... 8\r\nchecking size of long long... 8\r\nchecking size of intmax_t... 8\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking whether pause instruction is compilable... yes\r\nchecking number of significant virtual address bits... 0\r\nchecking for ar... ar\r\nchecking for nm... nm\r\nchecking for gawk... no\r\nchecking for mawk... mawk\r\nchecking for malloc.h... yes\r\nchecking whether malloc_usable_size definition can use const argument... no\r\nchecking for library containing log... -lm\r\nchecking whether __attribute__ syntax is compilable... yes\r\nchecking whether compiler supports -fvisibility=hidden... yes\r\nchecking whether compiler supports -fvisibility=hidden... no\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether tls_model attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether alloc_size attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether format(gnu_printf, ...) attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether format(printf, ...) attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether format(printf, ...) attribute is compilable... yes\r\nchecking whether compiler supports -Wimplicit-fallthrough... yes\r\nchecking whether fallthrough attribute is compilable... yes\r\nchecking whether compiler supports -Wimplicit-fallthrough... yes\r\nchecking whether compiler supports -Wimplicit-fallthrough... no\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether cold attribute is compilable... yes\r\nchecking whether vm_make_tag is compilable... no\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking for ranlib... ranlib\r\nchecking for ld... /usr/bin/ld\r\nchecking for autoconf... false\r\nchecking for memalign... yes\r\nchecking for valloc... yes\r\nchecking for malloc_size... no\r\nchecking whether compiler supports -O3... yes\r\nchecking whether compiler supports -O3... no\r\nchecking whether compiler supports -funroll-loops... yes\r\nchecking configured backtracing method... N/A\r\nchecking for sbrk... yes\r\nchecking whether utrace(2) is compilable... no\r\nchecking whether utrace(2) with label is compilable... no\r\nchecking whether a program using __builtin_unreachable is compilable... yes\r\nchecking whether a program using __builtin_ffsl is compilable... yes\r\nchecking whether a program using __builtin_popcountl is compilable... yes\r\nchecking LG_PAGE... 12\r\nchecking for pthread.h... yes\r\nchecking for pthread_create in -lpthread... yes\r\nchecking for dlfcn.h... yes\r\nchecking for dlsym... yes\r\nchecking whether pthread_atfork(3) is compilable... yes\r\nchecking whether pthread_setname_np(3) is compilable... yes\r\nchecking whether pthread_getname_np(3) is compilable... yes\r\nchecking whether pthread_get_name_np(3) is compilable... no\r\nchecking for library containing clock_gettime... none required\r\nchecking whether clock_gettime(CLOCK_MONOTONIC_COARSE, ...) is compilable... yes\r\nchecking whether clock_gettime(CLOCK_MONOTONIC, ...) is compilable... yes\r\nchecking whether mach_absolute_time() is compilable... no\r\nchecking whether clock_gettime(CLOCK_REALTIME, ...) is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether syscall(2) is compilable... yes\r\nchecking for secure_getenv... yes\r\nchecking for sched_getcpu... yes\r\nchecking for sched_setaffinity... yes\r\nchecking for issetugid... no\r\nchecking for _malloc_thread_cleanup... no\r\nchecking for _pthread_mutex_init_calloc_cb... no\r\nchecking for memcntl... no\r\nchecking for TLS... yes\r\nchecking whether C11 atomics is compilable... yes\r\nchecking whether GCC __atomic atomics is compilable... yes\r\nchecking whether GCC 8-bit __atomic atomics is compilable... yes\r\nchecking whether GCC __sync atomics is compilable... yes\r\nchecking whether GCC 8-bit __sync atomics is compilable... yes\r\nchecking whether Darwin OSAtomic*() is compilable... no\r\nchecking whether madvise(2) is compilable... yes\r\nchecking whether madvise(..., MADV_FREE) is compilable... yes\r\nchecking whether madvise(..., MADV_DONTNEED) is compilable... yes\r\nchecking whether madvise(..., MADV_DO[NT]DUMP) is compilable... yes\r\nchecking whether madvise(..., MADV_[NO]HUGEPAGE) is compilable... yes\r\nchecking whether madvise(..., MADV_[NO]CORE) is compilable... no\r\nchecking whether mprotect(2) is compilable... yes\r\nchecking for __builtin_clz... yes\r\nchecking whether Darwin os_unfair_lock_*() is compilable... no\r\nchecking whether glibc malloc hook is compilable... no\r\nchecking whether glibc memalign hook is compilable... no\r\nchecking whether pthreads adaptive mutexes is compilable... yes\r\nchecking whether compiler supports -D_GNU_SOURCE... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... yes\r\nchecking whether strerror_r returns char with gnu source is compilable... yes\r\nchecking for _Bool... yes\r\nchecking for stdbool.h that conforms to C99... yes\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating jemalloc.pc\r\nconfig.status: creating doc/html.xsl\r\nconfig.status: creating doc/manpages.xsl\r\nconfig.status: creating doc/jemalloc.xml\r\nconfig.status: creating include/jemalloc/jemalloc_macros.h\r\nconfig.status: creating include/jemalloc/jemalloc_protos.h\r\nconfig.status: creating include/jemalloc/jemalloc_typedefs.h\r\nconfig.status: creating include/jemalloc/internal/jemalloc_preamble.h\r\nconfig.status: creating test/test.sh\r\nconfig.status: creating test/include/test/jemalloc_test.h\r\nconfig.status: creating config.stamp\r\nconfig.status: creating bin/jemalloc-config\r\nconfig.status: creating bin/jemalloc.sh\r\nconfig.status: creating bin/jeprof\r\nconfig.status: creating include/jemalloc/jemalloc_defs.h\r\nconfig.status: creating include/jemalloc/internal/jemalloc_internal_defs.h\r\nconfig.status: creating test/include/test/jemalloc_test_defs.h\r\nconfig.status: executing include/jemalloc/internal/public_symbols.txt commands\r\nconfig.status: executing include/jemalloc/internal/private_symbols.awk commands\r\nconfig.status: executing include/jemalloc/internal/private_symbols_jet.awk commands\r\nconfig.status: executing include/jemalloc/internal/public_namespace.h commands\r\nconfig.status: executing include/jemalloc/internal/public_unnamespace.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_protos_jet.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_rename.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_mangle.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_mangle_jet.h commands\r\nconfig.status: executing include/jemalloc/jemalloc.h commands\r\n===============================================================================\r\njemalloc version   : 5.3.0-0-g0\r\nlibrary revision   : 2\r\n\r\nCONFIG             : --disable-cxx --with-version=5.3.0-0-g0 --with-lg-quantum=3 --disable-cache-oblivious --with-jemalloc-prefix=je_ CFLAGS= LDFLAGS=\r\nCC                 : gcc\r\nCONFIGURE_CFLAGS   : -std=gnu11 -Wall -Wextra -Wsign-compare -Wundef -Wno-format-zero-length -Wpointer-arith -Wno-missing-braces -Wno-missing-field-initializers -Wno-missing-attributes -pipe -g3 -fvisibility=hidden -Wimplicit-fallthrough -O3 -funroll-loops\r\nSPECIFIED_CFLAGS   :\r\nEXTRA_CFLAGS       :\r\nCPPFLAGS           : -D_GNU_SOURCE -D_REENTRANT\r\nCXX                :\r\nCONFIGURE_CXXFLAGS :\r\nSPECIFIED_CXXFLAGS :\r\nEXTRA_CXXFLAGS     :\r\nLDFLAGS            :\r\nEXTRA_LDFLAGS      :\r\nDSO_LDFLAGS        : -shared -Wl,-soname,$(@F)\r\nLIBS               : -lm  -pthread\r\nRPATH_EXTRA        :\r\n\r\nXSLTPROC           : false\r\nXSLROOT            :\r\n\r\nPREFIX             : /usr/local\r\nBINDIR             : /usr/local/bin\r\nDATADIR            : /usr/local/share\r\nINCLUDEDIR         : /usr/local/include\r\nLIBDIR             : /usr/local/lib\r\nMANDIR             : /usr/local/share/man\r\n\r\nsrcroot            :\r\nabs_srcroot        : /redis-7.2.3/deps/jemalloc/\r\nobjroot            :\r\nabs_objroot        : /redis-7.2.3/deps/jemalloc/\r\n\r\nJEMALLOC_PREFIX    : je_\r\nJEMALLOC_PRIVATE_NAMESPACE\r\n                   : je_\r\ninstall_suffix     :\r\nmalloc_conf        :\r\ndocumentation      : 1\r\nshared libs        : 1\r\nstatic libs        : 1\r\nautogen            : 0\r\ndebug              : 0\r\nstats              : 1\r\nexperimental_smallocx : 0\r\nprof               : 0\r\nprof-libunwind     : 0\r\nprof-libgcc        : 0\r\nprof-gcc           : 0\r\nfill               : 1\r\nutrace             : 0\r\nxmalloc            : 0\r\nlog                : 0\r\nlazy_lock          : 0\r\ncache-oblivious    : 0\r\ncxx                : 0\r\n```"
    },
    {
      "id": 1819301140,
      "user": "yossigo",
      "created_at": "2023-11-20T15:36:47Z",
      "body": "Looks like you're hitting the jemalloc/jemalloc#2318 issue indeed:\r\n\r\n```\r\nchecking number of significant virtual address bits... 0\r\n```\r\n\r\nHowever, it's not clear why and I can reproduce this locally. You can probably work around this by passing explicit address bits configuration to jemalloc:\r\n\r\n```\r\nmake JEMALLOC_CONFIGURE_OPTS=--with-lg-vaddr=48\r\n```"
    },
    {
      "id": 1828416128,
      "user": "mhassan1",
      "created_at": "2023-11-27T18:43:52Z",
      "body": "Thank you @yossigo. That workaround works. Would it make sense to add that flag in the [`Makefile`](https://github.com/redis/redis/blob/d6f19539d2414bce1b94af9f814ce09adef6d5f2/deps/Makefile#L115)?"
    },
    {
      "id": 1829905936,
      "user": "yossigo",
      "created_at": "2023-11-28T14:02:01Z",
      "body": "@mhassan1 Having `JEMALLOC_CONFIGURE_OPTS` serves this exact purpose, I don't think we need a more specific flag."
    },
    {
      "id": 1830006897,
      "user": "mhassan1",
      "created_at": "2023-11-28T14:53:02Z",
      "body": "@yossigo I meant would it make sense to add that as a default flag to `./Configure` so builders can just run `make` without specifying `JEMALLOC_CONFIGURE_OPTS`? I see we are already passing a bunch of default flags there."
    }
  ]
}