{
  "issue_number": 9515.0,
  "title": "[BUG] redis resets \"dir\" parameter to \"/etc\"",
  "body": "**Description**\r\n\r\nAfter some time (~5 min, some event I guess), redis resets `dir` parameter to `/etc`.\r\n\r\n**To reproduce**\r\n\r\n1. Initialize AWS EC2 instance as shown below:\r\n\r\n```\r\n        redis_conf_path = '/etc/redis/redis.conf'\r\n        ec2_inst.user_data.add_commands(\r\n            \"yum check-update -y\",\r\n            \"yum upgrade -y\",\r\n            \"amazon-linux-extras install -y redis6\",\r\n            f\"echo \\\"bind {ip} 127.0.0.1 ::1\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"appendonly yes\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"appendfsync always\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"cluster-enabled yes\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"cluster-config-file cluster.conf\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"cluster-node-timeout 5000\\\" >> {redis_conf_path}\",\r\n            #f\"echo \\\"loglevel warning\\\" >> {redis_conf_path}\",\r\n            f\"echo \\\"dir /var/lib/redis\\\" >> {redis_conf_path}\",\r\n            \"sysctl net.core.somaxconn=1024\",\r\n            \"sysctl vm.overcommit_memory=1\",\r\n            \"service redis restart\",\r\n        )\r\n```\r\n\r\n2. Check everything looks as expected:\r\n```\r\n[ec2-user@ip-10-0-0-100 ~]$ redis-cli config get dir\r\n1) \"dir\"\r\n2) \"/var/lib/redis\"\r\n\r\n[ec2-user@ip-10-0-0-100 ~]$ sudo ls -la /var/lib/redis\r\ntotal 8\r\ndrwxr-x---  2 redis redis   48 Sep 16 15:28 .\r\ndrwxr-xr-x 31 root  root  4096 Sep 16 15:28 ..\r\n-rw-r--r--  1 redis redis    0 Sep 16 15:28 appendonly.aof\r\n-rw-r--r--  1 redis redis  114 Sep 16 15:28 cluster.conf\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`dir` should stay `/var/lib/redis` no matter what\r\n\r\n**Actual behavior**\r\n\r\nAfter some amount of time (~5 min) of doing nothing `dir` flips to `/etc`:\r\n```\r\n[ec2-user@ip-10-0-0-100 ~]$ redis-cli config get dir\r\n1) \"dir\"\r\n2) \"/etc\"\r\n```\r\nCausing \"Permission denied\" in logs:\r\n```\r\n/var/log/redis/redis.log\r\n7069:C 16 Sep 2021 15:28:13.692 * Supervised by systemd. Please make sure you set appropriate values for TimeoutStartSec and TimeoutStopSec in your service unit.\r\n7069:C 16 Sep 2021 15:28:13.692 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n7069:C 16 Sep 2021 15:28:13.692 # Redis version=6.2.5, bits=64, commit=00000000, modified=0, pid=7069, just started\r\n7069:C 16 Sep 2021 15:28:13.692 # Configuration loaded\r\n7069:M 16 Sep 2021 15:28:13.692 * monotonic clock: POSIX clock_gettime\r\n7069:M 16 Sep 2021 15:28:13.692 * No cluster configuration found, I'm cc772b7f69cfe8fac81985047e5dca3b8b6f5634\r\n7069:M 16 Sep 2021 15:28:13.694 * Running mode=cluster, port=6379.\r\n7069:M 16 Sep 2021 15:28:13.694 # Server initialized\r\n7069:M 16 Sep 2021 15:28:13.694 * Ready to accept connections\r\n7069:M 16 Sep 2021 15:33:12.595 * DB saved on disk\r\n7069:M 16 Sep 2021 15:33:13.071 * DB saved on disk\r\n7069:M 16 Sep 2021 15:33:15.273 * DB saved on disk\r\n7069:M 16 Sep 2021 15:33:15.740 * DB saved on disk\r\n7069:M 16 Sep 2021 15:33:15.973 * DB saved on disk\r\n7069:M 16 Sep 2021 15:33:17.609 # Failed opening the RDB file zzh (in server root dir /etc/cron.d) for saving: Permission denied\r\n7069:M 16 Sep 2021 15:33:18.309 # Failed opening the RDB file crontab (in server root dir /etc) for saving: Permission denied\r\n```\r\n\r\n**Additional information**\r\n\r\n```\r\ncat /etc/system-release\r\nAmazon Linux release 2 (Karoo)\r\n\r\nredis-server --version\r\nRedis server v=6.2.5 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=84fcfe5c74097c6d\r\n```",
  "state": "closed",
  "created_at": "2021-09-16T15:42:11Z",
  "updated_at": "2021-09-16T17:21:44Z",
  "closed_at": "2021-09-16T17:21:44Z",
  "labels": [
    "state:to-be-closed"
  ],
  "comments_data": [
    {
      "id": 921022201,
      "user": "oranagra",
      "created_at": "2021-09-16T15:50:07Z",
      "body": "@rayrapetyan you're being attacked, probably don't have a password on your redis.\r\nsomeone's trying to use redis in order to hack to your system.\r\ni'd assume the instance is compromised and wipe it."
    }
  ]
}