{
  "issue_number": 9613.0,
  "title": "[BUG] Can't setup cluster on TLS enabled ports",
  "body": "Hi, I have problem connecting redis instances into cluster over TLS ports.\r\n\r\nNo matter what i try I’m getting stuck on „Waiting for the cluster to join……….” This happens when trying to set cluster on TLS enabled ports. When using the same ports as non-TLS everything works fine.\r\n#### SETUP:\r\n * There are 3 VMs with 2 instances of redis 6.0.9 on each, on ports 6379 and 6380.\r\n * Each VM is on Oracle linux Server version 8.4 and is created with use of chef-automation and terraform. Redis is installed from Oracle Linux 8 Application Stream repository.\r\n * There is route between hosts, telnet opens connection on both ports: app access and „higher” node communication ports eg 16380 and 16379\r\n * TLS configuration contains: (full config and the end)\r\ntls-port 6379\r\ntls-auth-clients no\r\ntls-replication yes\r\ntls-cluster yes\r\ntls-protocols TLSv1.2\r\nalso normal port is set to 0:\r\nport 0\r\nbind is set to NIC and loopback:\r\nbind 10.128.185.206 127.0.0.1\r\n\r\n#### ERRORS:\r\n\r\n * There are errors in redis log. They can be seen right from the beginning, and they occur every minute:\r\n>error:1408F10B:SSL routines:ssl3_get_record:wrong version number (conn: fd=12)\r\n\r\nwhich is connected to local loopback bind, when 127.0.0.1 is removed from bind directive, Error stops showing every minute, but its still: „Waiting for the cluster to join………” when trying to set cluster. \r\n\r\n * When set loglevel to debug:\r\nOn other node in logs i can see that connection was trying to establish:\r\nOct  5 08:59:18 l000d00redb01 redis-6379[87848]: Connection with Node ee89d9868e41282b3587340f5b6270f23ba06b89 at 10.128.185.208:16379 failed: error:14094413:SSL routines:ssl3_read_bytes:sslv3 alert unsupported certificate\r\nAnd info about one connected client:\r\nOct  5 08:59:19 l000d00redb01 redis-server[87848]: 87848:M 05 Oct 2021 08:59:19.234 . 1 clients connected (0 replicas), 1482728 bytes in use\r\n\r\nBut no explanation what is wrong with certificate\r\nThis looks like some error due to wrong certificates. \r\n\r\n#### What i checked:\r\n\r\n- openssl verify- shows certificate is signed with CA\r\n- certificate is a wildcard type for my organization, and is used with success in other solutions.\r\n- for my own sake i compiled and run redis 6.2 from github and tried set up cluster with no luck. Same error, still „Waiting for the cluster to join………”\r\n- i also tried this with generated sample self-signed certificate from redis utils script. On both 6.0.9 and 6.2 Same result.\r\n- tried with SElinux turned off.\r\n\r\nI use this command to set up cluster:\r\n`redis-cli --tls -h 10.128.185.207 --cluster create 10.128.185.208:6379 10.128.185.208:6380 10.128.185.207:6379 10.128.185.207:6380 10.128.185.206:6379 10.128.185.206:6380 --cluster-replicas 1`\r\n\r\nwhich gives me  this message:\r\n \r\n>>> Performing hash slots allocation on 6 nodes...\r\nMaster[0] -> Slots 0 - 5460\r\nMaster[1] -> Slots 5461 - 10922\r\nMaster[2] -> Slots 10923 - 16383\r\nAdding replica 10.128.185.207:6380 to 10.128.185.208:6379\r\nAdding replica 10.128.185.206:6380 to 10.128.185.207:6379\r\nAdding replica 10.128.185.208:6380 to 10.128.185.206:6379\r\nM: 9240da721c64de8d42cf9fcff89ab1614eb573a5 10.128.185.208:6379\r\n   slots:[0-5460] (5461 slots) master\r\nS: e334e449ef79f7651ae63afb4f20d8daff5fa598 10.128.185.208:6380\r\n   replicates b663747733a16ea068c3213bdca1e3449dae1985\r\nM: 597f7b38162e9e64f62b7d9617b334cfea016b9b 10.128.185.207:6379\r\n   slots:[5461-10922] (5462 slots) master\r\nS: 889c6c8bdaf5e5760f38071b38e5adeec8588967 10.128.185.207:6380\r\n   replicates 9240da721c64de8d42cf9fcff89ab1614eb573a5\r\nM: b663747733a16ea068c3213bdca1e3449dae1985 10.128.185.206:6379\r\n   slots:[10923-16383] (5461 slots) master\r\nS: 06869b485de4ed8570145e1b1fe040754f3925e7 10.128.185.206:6380\r\n   replicates 597f7b38162e9e64f62b7d9617b334cfea016b9b\r\nCan I set the above configuration? (type 'yes' to accept):\r\n\r\nAfter accepting i can only see:\r\n„Waiting for the cluster to join………”\r\n\r\n\r\n * Here is my certificate:\r\n\r\n\r\n>Certificate:\r\n>   Data:\r\n        Version: 3 (0x2)\r\n        Serial Number:\r\n            4d:6c:d2:8d:00:05:00:02:1b:c0\r\n        Signature Algorithm: sha256WithRSAEncryption\r\n        Issuer: DC = pl, DC = company, CN = SubCA-COMPANY\r\n        Validity\r\n            Not Before: Jun 30 12:36:58 2021 GMT\r\n            Not After : Jun 30 12:36:58 2023 GMT\r\n        Subject: C = PL, ST = Mazowieckie, L = Warszawa, O =COMPANY., OU = IT, CN = company.com\r\n        Subject Public Key Info:\r\n            Public Key Algorithm: rsaEncryption\r\n                RSA Public-Key: (2048 bit)\r\n                Modulus:\r\n                    00:b6:71:ca:de:6f:12:31:d4:d8:a3:12:b1:1d:90:\r\n                    cc:58:17:4c:6e:e5:7f:17:68:e1:05:aa:6e:66:15:\r\n                    19:52:20:d3:08:53:80:f4:06:17:f8:3f:90:c1:34:\r\n                    d4:b2:dc:29:60:3b:aa:27:ce:99:95:b4:db:42:13:\r\n                    e8:78:cc:a3:7e:89:b8:04:7b:d9:4c:71:14:da:27:\r\n                    b3:da:ea:98:cf:ff:14:b3:aa:21:07:aa:e2:8c:f6:\r\n                    4e:1f:08:2b:39:c2:da:2a:44:f6:22:d1:e9:8f:e7:\r\n                    54:3b:19:93:21:0e:4b:75:85:4c:b8:19:de:00:1c:\r\n                    04:c0:b3:b0:51:68:cc:3d:31:80:18:11:ef:ab:50:\r\n                    fd:ed:64:2f:4c:26:ba:7d:2a:99:f7:de:e4:b6:90:\r\n                    d7:f0:5d:97:9b:10:33:52:bb:4e:f1:67:82:58:4c:\r\n                    92:8a:9b:f2:2a:cf:fe:ad:a5:d6:ec:1c:ba:0f:32:\r\n                    f6:30:52:87:f5:19:6c:79:27:01:28:c9:9e:49:1e:\r\n                    6f:6c:03:4a:54:d1:14:c7:b2:39:6b:24:ff:f2:cf:\r\n                    36:31:49:14:46:a2:14:e8:e6:14:6e:7d:09:6b:83:\r\n                    45:f8:f0:81:68:21:2a:4e:2f:e3:de:4f:88:1d:bf:\r\n                    30:eb:cd:10:eb:1f:e3:04:18:f1:bf:f7:ba:e5:12:\r\n                    d4:93\r\n                Exponent: 65537 (0x10001)\r\n        X509v3 extensions:\r\n            X509v3 Extended Key Usage: \r\n                TLS Web Server Authentication\r\n            X509v3 Key Usage: \r\n                Digital Signature, Key Encipherment\r\n            X509v3 Subject Alternative Name: \r\n                DNS:*.company.com\r\n            X509v3 Subject Key Identifier: \r\n                4A:0B:1A:95:8F:DB:1F:A8:AC:34:05:A2:94:D8:4E:90:C4:26:5F:05\r\n            X509v3 Authority Key Identifier: \r\n                keyid:70:11:7C:50:03:6B:9F:CC:9D:CA:4C:C3:20:62:8A:1A:B0:62:B7:97\r\n\r\n            X509v3 CRL Distribution Points: \r\n\r\n                Full Name:\r\n                  URI:ldap:///CN=SubCA-COMPANY(5),CN=crt002,CN=CDP,CN=Public%20Key%20Services,CN=Services,CN=Configuration,DC=company,DC=com?certificateRevocationList?base?objectClass=cRLDistributionPoint\r\n                  URI:http:// crt002.company.com/CertEnroll/SubCA-COMPANY(5).crl\r\n\r\n            Authority Information Access: \r\n                CA Issuers - URI:ldap:///CN=SubCA-COMPANY,CN=AIA,CN=Public%20Key%20Services,CN=Services,CN=Configuration,DC=company,DC=com?cACertificate?base?objectClass=certificationAuthority\r\n                OCSP - URI:http://crt002.company.com/ocsp\r\n\r\n            1.3.6.1.4.1.311.21.7: \r\n                0/.'+.....7.........\\...;...6...'.N.......k..i...\r\n            1.3.6.1.4.1.311.21.10: \r\n                0.0\r\n>..+.......\r\n    Signature Algorithm: sha256WithRSAEncryption\r\n         99:fe:f5:17:67:74:bd:6d:2b:de:f0:f7:48:49:0c:d5:31:1b:\r\n         36:b5:52:a6:0d:06:fd:96:79:99:b6:ba:06:88:fc:1e:e6:a1:\r\n         b0:62:13:bc:22:14:e6:33:b0:0b:82:1e:a6:62:f1:af:17:ad:\r\n         f4:43:bc:25:de:d7:33:65:6d:52:cd:25:79:db:7a:90:a4:68:\r\n         ff:cc:26:22:f8:fb:1b:0d:f9:1e:35:e2:8e:23:ff:a5:9b:02:\r\n         3c:4c:49:74:12:25:88:ff:e9:e6:d4:44:f3:c4:e5:36:1d:b7:\r\n         48:32:1e:5f:6a:02:1b:9e:93:01:0d:c4:94:45:00:f4:c5:57:\r\n         7b:cc:98:e7:e7:13:2e:89:a7:d7:96:ae:fc:00:f2:ec:9f:23:\r\n         22:87:4e:3d:49:f7:b6:7c:73:af:59:ed:32:aa:5c:56:ac:4d:\r\n         d2:28:59:96:6b:0a:e8:4c:6a:17:92:ec:88:5c:29:df:db:26:\r\n         01:09:87:06:a9:8e:e9:42:f3:63:cc:10:8b:72:95:ce:a1:f9:\r\n         21:25:dc:af:2a:43:a1:c3:d5:95:e1:7a:98:f6:65:1f:2f:d2:\r\n         af:e4:b3:25:e9:26:ed:44:e7:8a:35:a2:d5:9d:a6:a4:4c:30:\r\n         6e:48:e0:61:be:ba:06:1b:3d:40:5e:cf:fa:5e:0b:ca:eb:54:\r\n         ff:7f:e2:91\r\n\r\n* And config file for redis.\r\n\r\nRedis.conf:\r\n\r\n>bind 10.128.185.206 127.0.0.1\r\nport 0\r\ntimeout 0\r\ntcp-keepalive 0\r\ntls-port 6379\r\ntls-cert-file /etc/pki/tls/certs/company.com.crt \r\ntls-key-file /etc/pki/tls/private/company.com.key\r\ntls-ca-cert-file /etc/pki/tls/certs/CA-company.com.crt\r\ntls-auth-clients no\r\ntls-replication yes\r\ntls-cluster yes\r\ntls-protocols TLSv1.2\r\nsupervised no\r\npidfile /var/run/redis/6379/redis_6379.pid\r\nloglevel notice\r\nsyslog-enabled yes\r\nsyslog-ident redis-6379\r\nsyslog-facility local0\r\ndatabases 16\r\nalways-show-logo yes\r\ndbfilename dump-6379.rdb\t\t \r\nrdb-del-sync-files no\r\ndir /var/lib/redis\r\nreplica-serve-stale-data yes\t\t\t\t\t\t\r\nreplica-read-only yes\t\t\t\t\t\t\t   \r\nrepl-diskless-sync no\r\nrepl-diskless-sync-delay 5\t\t\t\t\t\t\r\nrepl-diskless-load disabled\r\n#repl-timeout 60\r\n#repl-backlog-size 1mb\r\nrepl-backlog-ttl 3600\t\t\t\t\t\t\t  \r\nreplica-priority 100\t\t\t\t\t\t \r\nacllog-max-len 128\r\nmaxclients 10000\r\nlazyfree-lazy-eviction no\r\nlazyfree-lazy-expire no\r\nlazyfree-lazy-server-del no\r\nreplica-lazy-flush no\r\nlazyfree-lazy-user-del no\r\noom-score-adj no\r\noom-score-adj-values 0 200 800\r\n#appendonly no\r\nappendfilename appendonly-6379.aof\r\nappendfsync everysec\t\t\t\t\t\t\t\r\nno-appendfsync-on-rewrite no\r\nauto-aof-rewrite-percentage 100\r\nauto-aof-rewrite-min-size 64mb\r\naof-load-truncated yes\t\t\t \r\naof-use-rdb-preamble yes\r\nlua-time-limit 5000\r\ncluster-enabled yes\r\ncluster-config-file nodes-6379.conf\r\ncluster-node-timeout 5000\r\nslowlog-log-slower-than 10000\r\nslowlog-max-len 1024\r\nlatency-monitor-threshold 0\r\nhash-max-ziplist-entries 512\r\nhash-max-ziplist-value 64\t\t\t   \r\nlist-max-ziplist-size -2\r\n#list-compress-depth 0\r\nset-max-intset-entries 512\r\nzset-max-ziplist-entries 128\r\nzset-max-ziplist-value 64\t\t   \r\nstream-node-max-bytes 4096\r\nstream-node-max-entries 100\r\nactiverehashing yes\t\t\t\t\t\t  \r\nclient-output-buffer-limit normal 0 0 0\r\nclient-output-buffer-limit slave 256mb 64mb 60\r\nclient-output-buffer-limit pubsub 32mb 8mb 60\r\nhz 10\r\ndynamic-hz yes\r\naof-rewrite-incremental-fsync yes\t\t\t\t \r\nrdb-save-incremental-fsync yes\t\t\t\t \t\t \r\njemalloc-bg-thread yes\r\n\r\n\r\nAny help would be much appreciated.",
  "state": "open",
  "created_at": "2021-10-07T12:38:49Z",
  "updated_at": "2022-05-19T07:51:19Z",
  "closed_at": null,
  "labels": [],
  "comments_data": [
    {
      "id": 939467778,
      "user": "yossigo",
      "created_at": "2021-10-10T11:47:09Z",
      "body": "@grykaPL The certificate validation fails, you could confirm this by enabling `tls-auth-clients` and trying to connect to the server using this certificate and `redis-cli`. You can also double-check if this works with self-signed certs or tests certs.\r\n\r\nNote that your certificate has a server-side key usage attribute, which may prevent it from being used as a client certificate. This depends on specific versions / configurations of OpenSSL."
    },
    {
      "id": 1131359199,
      "user": "huangcuiyang",
      "created_at": "2022-05-19T07:50:56Z",
      "body": "this also happend to me, can not create cluster with tls, hunging in \"Waiting for the cluster to join………\"\r\n*  Redis v6.2.5\r\n\r\n"
    }
  ]
}