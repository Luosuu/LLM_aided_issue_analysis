{
  "issue_number": 11241.0,
  "title": "[BUG] Sentinel failover not working as expected",
  "body": "**Describe the bug**\r\n\r\nRedis and sentinel use hostname to communicate, failover fails.\r\n\r\n**To reproduce**\r\n\r\nBackground: redis 6.2.7, k8s deployment, 1 master(pod-0) + 2 slave(pod-1/pod-2) + 3 sentinel\r\n\r\nSentinel/redis both use hostname to communicate, redis is configured with replica-announce-ip, sentinel is configured with resolve-hostnames=yes, announce-hostnames=yes and announce-ip parameters.\r\n\r\n1. Problem scenario: kubectl cordon redis master node + kubectl delete master pod, make the master pod pending (the master hostname is invalid at this time), but sentinel does not elect a new master\r\n2. sentinel log: +fix-slave-config and +failover-abort-no-good-slave, failover failed\r\n3. slave log: mater Host is unreachable and Unable to connect to MASTER: Invalid argument\r\n\r\n**Expected behavior**\r\n\r\nSentinel can select a master from the slave, and the failover is successful.\r\n\r\n**Additional information**\r\n\r\nI read the sentinel code with the log, preliminary analysis:\r\n\r\n1. When sentinel regularly sends info to redis, it will check whether the ip parsed by the master host of the slave has changed (if the hostname fails, it is considered to have changed)\r\n\r\n2. After the change is considered, the sentinel will force a slaveof $master + kill connection to the slave (the connection between the sentinel and the slave will also be forcibly disconnected, and the sentinel will print the log +fix-slave-config)\r\n\r\n3. At this time, the majority sentinel determines the master odwon and initiates failover, but when selecting slave, it will check the connection status of sentinel and slave (slave->link->disconnected)\r\n\r\n4. Because of the second step of sentinel, the connection between sentinel and slave has been disconnected (slave->link->disconnected=true), sentinel selects slave to promote master, it will filter disconnected slave\r\n\r\n5. Eventually, no slave can be promoted to master, and failover fails\r\n\r\n6. Not every time, there will be problems when the 2nd and 3rd hits happen\r\n\r\nNot sure if it is a bug of redis, please help to troubleshoot or provide helpful information to update.\r\n\r\nThe relevant log and source code analysis are as follows:\r\n\r\n<img width=\"1911\" alt=\"sentinel log\" src=\"https://user-images.githubusercontent.com/9117028/188611669-b64e576b-10d1-4e48-8646-b606844a1063.png\">\r\n\r\n<img width=\"1196\" alt=\"slave log\" src=\"https://user-images.githubusercontent.com/9117028/188611688-7741c841-be17-4acd-a233-12b057ef6bcc.png\">\r\n\r\n<img width=\"813\" alt=\"sentinel fix-slave-config\" src=\"https://user-images.githubusercontent.com/9117028/188611743-b053620e-3d6c-431f-bd1a-dd9ac9c3231b.png\">\r\n\r\n<img width=\"887\" alt=\"reslove host\" src=\"https://user-images.githubusercontent.com/9117028/188611764-51e08e8c-d85f-4f52-b7cd-e4dc5c31f3f1.png\">\r\n\r\n<img width=\"887\" alt=\"select slave2\" src=\"https://user-images.githubusercontent.com/9117028/188611782-37d553b2-608c-40a3-bdf0-fcfbf594788f.png\">\r\n\r\n<img width=\"777\" alt=\"select slave1\" src=\"https://user-images.githubusercontent.com/9117028/188611798-7a216fd0-7e00-4560-bd97-d7b4eab4fae9.png\">\r\n\r\n",
  "state": "closed",
  "created_at": "2022-09-06T10:29:17Z",
  "updated_at": "2022-11-06T13:26:55Z",
  "closed_at": "2022-11-06T13:26:55Z",
  "labels": [],
  "comments_data": [
    {
      "id": 1238964462,
      "user": "enjoy-binbin",
      "created_at": "2022-09-07T06:31:27Z",
      "body": "thanks for the report, it looks detailed.\r\n\r\n@moticless i suppose you can take a look when you have time, maybe related to #10146"
    },
    {
      "id": 1239007987,
      "user": "moticless",
      "created_at": "2022-09-07T07:22:53Z",
      "body": "Hi @enjoy-binbin, I planned to reach it later this day. Thanks."
    },
    {
      "id": 1239378630,
      "user": "moticless",
      "created_at": "2022-09-07T13:17:56Z",
      "body": "Hi @kaito-kidd, \r\nBefore we dive into details, please help me to understand the following points:\r\n* What do you mean \"Not every time, there will be problems when the 2nd and 3rd hits happen\".\r\n* In continuation to previous bullet, how often is it happen? Is there any pattern?\r\n* Please verify that redis-sentinel application has write permission to the configuration files, as they rewrite configuration file for persistency.\r\n* Please compare your configuration to the one available [here](https://github.com/moticless/redis-network-testing/tree/main/docker-compose-setups/hostname-based), which shows a simple hostname-based configuration that can run with docker-compose. It brings up 3 sentinel and 2 servers. (You can also play with it, as comparison.)\r\n* Please supply sentinel and server configuration\r\n\r\nThank you"
    },
    {
      "id": 1239433780,
      "user": "kaito-kidd",
      "created_at": "2022-09-07T14:02:02Z",
      "body": "Hi @moticless,\r\n\r\n- the problem does not always occur every time, no fixed rules. After I read the code analysis, I think that this problem will only occur when step2 and step3 meet.\r\n- redis-sentinel confirms permission to write configuration file\r\n- my configuration looks the same as the example you provided\r\n- redis server and sentinel configs:\r\n\r\n```\r\n# master\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\n\r\n# slave1\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-2.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n\r\n# slave2\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-2.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n\r\n\r\n# sentinel1\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-0.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel failover-timeout sso-redis-demo 120000\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\n\r\n# sentinel2\r\n\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-1.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\nsentinel failover-timeout sso-redis-demo 120000\r\n\r\n# sentinel3\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-2.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\nsentinel failover-timeout sso-redis-demo 120000\r\n```\r\n\r\nThank you"
    },
    {
      "id": 1239532561,
      "user": "moticless",
      "created_at": "2022-09-07T15:20:40Z",
      "body": "slave1 & slave2 announces exactly the same name."
    },
    {
      "id": 1239557370,
      "user": "kaito-kidd",
      "created_at": "2022-09-07T15:38:05Z",
      "body": "@moticless, Sorry, there is a problem with copying and pasting, the correct configuration of redis is as follows:\r\n```\r\n# master\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\n\r\n# slave1\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-1.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n\r\n# slave2\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-2.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n```"
    },
    {
      "id": 1239570841,
      "user": "kaito-kidd",
      "created_at": "2022-09-07T15:45:56Z",
      "body": "When this problem occurs, the sentinel log is accompanied by this keyword log: `+fix-slave-config`ï¼Œ`+fix-slave-config` does not appear, this problem does not appear.\r\n\r\nYou can try to invalidate the master hostname to reproduce this problem, note that it takes many attempts to reproduce once.\r\n"
    },
    {
      "id": 1239586167,
      "user": "moticless",
      "created_at": "2022-09-07T15:59:29Z",
      "body": "Regarding the question of how often it reproduced, you said the problem does not always occur every time. And now are saying it takes many attempts to reproduce once. And then there is the wrong configuration. I am sorry but it is hard to me to follow. Please take the time to double check your findings."
    },
    {
      "id": 1239616958,
      "user": "kaito-kidd",
      "created_at": "2022-09-07T16:25:52Z",
      "body": "@moticless, Sorry, maybe my statement is not accurate.\r\n\r\nAllow me to express my question again.\r\n\r\nThe configuration of redis and sentinel is as follows:\r\n\r\n```\r\n# master\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\n\r\n# slave1\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-1.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n\r\n# slave2\r\nreplica-announce-ip \"redis-sso-redis-demo-ss-2.redis-sso-redis-demo-headless.sso.svc.global.chongqing\"\r\nreplicaof redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379\r\n\r\n\r\n# sentinel1\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-0.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel failover-timeout sso-redis-demo 120000\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\n\r\n# sentinel2\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-1.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\nsentinel failover-timeout sso-redis-demo 120000\r\n\r\n# sentinel3\r\nsentinel resolve-hostnames yes\r\nsentinel announce-hostnames yes\r\nsentinel announce-ip \"global-redis-sentinel-2.global-redis-sentinel-headless.sso.svc.global.chongqing\"\r\n\r\nsentinel monitor sso-redis-demo redis-sso-redis-demo-ss-0.redis-sso-redis-demo-headless.sso.svc.global.chongqing 6379 2\r\nsentinel down-after-milliseconds sso-redis-demo 15000\r\nsentinel failover-timeout sso-redis-demo 120000\r\n```\r\n\r\nThe problem does happen occasionally, I want to get to the root cause of the problem and I'm trying to reproduce it.\r\n\r\nThe way to reproduce is to make the `master down + hostname invalid`, and then observe whether the sentinel failover is successfully switched.\r\n\r\nI tried multiple times, problem can be reproduced. When the problem occurs, the sentinel log has key logs: `+fix-slave-config`, `-failover-abort-no-good-slave`.\r\n\r\nIf needed, I can write another simple example to help you reproduce it."
    },
    {
      "id": 1240269142,
      "user": "moticless",
      "created_at": "2022-09-08T06:13:29Z",
      "body": "Hi @kaito-kidd , I don't understand what it means \"master down + hostname invalid\". How exactly you make the master unavailable? shutdown/pause the pod? just change its hostname? Does sentinels run on distinct pods?"
    },
    {
      "id": 1240390294,
      "user": "kaito-kidd",
      "created_at": "2022-09-08T08:22:54Z",
      "body": "Hi @moticless, my steps:\r\n\r\nstep1. kubectl cordon master node\r\nstep2. kubectl delete master pod\r\nstep3. now, master pod pending, and master hostname invalid\r\nstep4. observed that sentinel did not elect master\r\n\r\nsentinels run in different pods, distributed on different nodes."
    },
    {
      "id": 1242957877,
      "user": "moticless",
      "created_at": "2022-09-11T12:48:51Z",
      "body": "The sentinel flow, that you are describing is rather common one. I also let it run, only this specific flow, on docker-compose for two days without any issues. \r\n\r\nMaybe you can try docker-compose that I gave you [above](https://github.com/moticless/redis-network-testing/tree/main/docker-compose-setups/hostname-based), and start change it gradually to be exact copy of your configuration and see when/if it breaks. If it will break, then we shall have common ground to start investigate it. If it works perfectly on docker-compose, go the opposite direction on k8s. "
    },
    {
      "id": 1273256003,
      "user": "kaito-kidd",
      "created_at": "2022-10-10T12:41:09Z",
      "body": "Hi @moticless,\r\n\r\nI used your docker-compose [configuration](https://github.com/moticless/redis-network-testing/tree/main/docker-compose-setups/hostname-based) and reproduced the issue as well.\r\n\r\nMy operation steps:\r\n\r\nStep 1. clone your repo, build env\r\n\r\n````\r\ngit clone https://github.com/moticless/redis-network-testing.git ~/github\r\ncd ~/github/redis-network-testing\r\n\r\ngit submodule init\r\ngit submodule update\r\n\r\n./build_redis.py\r\n````\r\n\r\ncheck redis build ok\r\n````\r\nâžœ redis-network-testing git:(main) âœ— ll artifacts\r\ntotal 92760\r\n-r----x--t 1 ryetan staff 7.8M 10 9 17:53 redis-benchmark\r\n-r----x--t 1 ryetan staff 7.7M 10 9 17:53 redis-cli\r\n-r----x--t 1 ryetan staff 15M 10 9 17:53 redis-sentinel\r\n-r----x--t 1 ryetan staff 15M 10 9 17:53 redis-server\r\n````\r\n\r\n\r\nStep 2. Modify env, docker-compose starts redis and sentinels\r\n\r\n````\r\nâžœ  hostname-based git:(main) âœ— cat ~/github/redis-network-testing/docker-compose-setups/hostname-based/.env\r\nBIN_DST_PATH=/usr/local/bin/\r\n\r\n# The test will use other values. Overriden with env-var.:\r\nIMAGE=\"ubuntu:20.04\"\r\n# my env var\r\nBIN_SRC_PATH=~/github/redis-network-testing/artifacts\r\n````\r\n\r\nStart the service:\r\n````\r\nâžœ hostname-based git:(main) âœ— docker-compose up -d\r\nCreating network \"hostname-based_main\" with the default driver\r\nCreating hostname-based_replica2_1 ... done\r\nCreating hostname-based_instance_standby_1 ... done\r\nCreating hostname-based_sentinel1_1 ... done\r\nCreating hostname-based_sentinel2_1 ... done\r\nCreating hostname-based_replica1_1 ... done\r\nCreating hostname-based_sentinel3_1 ... done\r\n````\r\n\r\nStarted successfully:\r\n````\r\nâžœ hostname-based git:(main) âœ— docker ps\r\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\r\n076052c78ed9 ubuntu:20.04 \"bash -c 'redis-servâ€¦\" 34 seconds ago Up 32 seconds 0.0.0.0:8764->8764/tcp hostname-based_sentinel3_1\r\n2ebac9ab0b3b ubuntu:20.04 \"bash -c 'redis-servâ€¦\" 34 seconds ago Up 32 seconds hostname-based_sentinel2_1\r\n7d69aa962ac5 ubuntu:20.04 \"redis-server /test/â€¦\" 34 seconds ago Up 32 seconds hostname-based_replica1_1\r\n455e14848074 ubuntu:20.04 \"bash -c 'redis-servâ€¦\" 34 seconds ago Up 33 seconds hostname-based_sentinel1_1\r\na3ecfc6e54ad ubuntu:20.04 \"bash -c 'while trueâ€¦\" 34 seconds ago Up 32 seconds hostname-based_instance_standby_1\r\n035eea666c51 ubuntu:20.04 \"redis-server /test/â€¦\" 34 seconds ago Up 33 seconds hostname-based_replica2_1\r\n````\r\n\r\nThe status of master and slave is ok:\r\n\r\n```\r\nâžœ  hostname-based git:(main) âœ— docker exec -it hostname-based_instance_standby_1 redis-cli -h redis-master info replication\r\n# Replication\r\nrole:master\r\nconnected_slaves:1\r\nslave0:ip=redis-slave,port=6379,state=online,offset=2190,lag=1\r\nmaster_failover_state:no-failover\r\nmaster_replid:f945eb62e11227d0f88ec9848e84e5f7d56caec0\r\nmaster_replid2:0000000000000000000000000000000000000000\r\nmaster_repl_offset:2474\r\nsecond_repl_offset:-1\r\nrepl_backlog_active:1\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:1\r\nrepl_backlog_histlen:2474\r\n```\r\n\r\nStep 3. Execute the `docker stop $master` command\r\n\r\n````\r\ndocker stop hostname-based_replica1_1\r\n````\r\n\r\n\r\nStep 4. Observe sentinel log and find that failover failed\r\n\r\n```\r\n# sentinel-1\r\n1:X 10 Oct 2022 12:05:02.945 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n1:X 10 Oct 2022 12:05:02.945 # Redis version=255.255.255, bits=64, commit=00000000, modified=0, pid=1, just started\r\n1:X 10 Oct 2022 12:05:02.945 # Configuration loaded\r\n1:X 10 Oct 2022 12:05:02.946 * monotonic clock: POSIX clock_gettime\r\n1:X 10 Oct 2022 12:05:02.946 * Running mode=sentinel, port=26379.\r\n1:X 10 Oct 2022 12:05:02.976 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:02.976 # Sentinel ID is c7c59ae8fb334f663289d46b8866e33f1f60fd0e\r\n1:X 10 Oct 2022 12:05:02.976 # +monitor master mymaster redis-master 6379 quorum 2\r\n1:X 10 Oct 2022 12:05:02.978 * +slave slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:02.996 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.910 * +sentinel sentinel 8c19832232d462b9330a41d8a3103d2049ed7912 redis-sentinel2 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:04.931 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.996 * +sentinel sentinel 40b9669e83e1b991de1b3cc7461b918331ee0376 redis-sentinel3 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:05.024 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:25.360 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:28.314 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.320 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.365 # +sdown master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.411 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.460 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.477 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.492 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:29.492 # +new-epoch 1\r\n1:X 10 Oct 2022 12:05:29.506 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:29.506 # +vote-for-leader 8c19832232d462b9330a41d8a3103d2049ed7912 1\r\n1:X 10 Oct 2022 12:05:30.494 # +odown master mymaster redis-master 6379 #quorum 3/2\r\n1:X 10 Oct 2022 12:05:30.494 # Next failover delay: I will not start a failover before Mon Oct 10 12:05:39 2022\r\n1:X 10 Oct 2022 12:05:30.571 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:30.583 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.602 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.619 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.645 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.665 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.700 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.709 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:34.749 # Failed to resolve hostname 'redis-master'\r\n\r\n# sentinel-2\r\n1:X 10 Oct 2022 12:05:02.879 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n1:X 10 Oct 2022 12:05:02.879 # Redis version=255.255.255, bits=64, commit=00000000, modified=0, pid=1, just started\r\n1:X 10 Oct 2022 12:05:02.879 # Configuration loaded\r\n1:X 10 Oct 2022 12:05:02.880 * monotonic clock: POSIX clock_gettime\r\n1:X 10 Oct 2022 12:05:02.890 * Running mode=sentinel, port=26379.\r\n1:X 10 Oct 2022 12:05:02.905 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:02.905 # Sentinel ID is 8c19832232d462b9330a41d8a3103d2049ed7912\r\n1:X 10 Oct 2022 12:05:02.905 # +monitor master mymaster redis-master 6379 quorum 2\r\n1:X 10 Oct 2022 12:05:02.908 * +slave slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:02.920 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.953 * +sentinel sentinel c7c59ae8fb334f663289d46b8866e33f1f60fd0e redis-sentinel1 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:04.972 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.996 * +sentinel sentinel 40b9669e83e1b991de1b3cc7461b918331ee0376 redis-sentinel3 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:05.016 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:25.363 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:28.315 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.314 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.382 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.382 # +sdown master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.435 # +odown master mymaster redis-master 6379 #quorum 2/2\r\n1:X 10 Oct 2022 12:05:29.435 # +new-epoch 1\r\n1:X 10 Oct 2022 12:05:29.435 # +try-failover master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.465 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:29.465 # +vote-for-leader 8c19832232d462b9330a41d8a3103d2049ed7912 1\r\n1:X 10 Oct 2022 12:05:29.477 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.508 # c7c59ae8fb334f663289d46b8866e33f1f60fd0e voted for 8c19832232d462b9330a41d8a3103d2049ed7912 1\r\n1:X 10 Oct 2022 12:05:29.510 # 40b9669e83e1b991de1b3cc7461b918331ee0376 voted for 8c19832232d462b9330a41d8a3103d2049ed7912 1\r\n1:X 10 Oct 2022 12:05:29.516 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.537 # +elected-leader master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.537 # +failover-state-select-slave master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.622 # -failover-abort-no-good-slave master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.685 # Next failover delay: I will not start a failover before Mon Oct 10 12:05:40 2022\r\n1:X 10 Oct 2022 12:05:30.453 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:30.572 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.526 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.619 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.598 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.665 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.621 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.700 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:34.661 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:34.754 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:35.748 # Failed to resolve hostname 'redis-master'\r\n\r\n# sentinel-3\r\n1:X 10 Oct 2022 12:05:02.991 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n1:X 10 Oct 2022 12:05:02.991 # Redis version=255.255.255, bits=64, commit=00000000, modified=0, pid=1, just started\r\n1:X 10 Oct 2022 12:05:02.991 # Configuration loaded\r\n1:X 10 Oct 2022 12:05:02.994 * monotonic clock: POSIX clock_gettime\r\n1:X 10 Oct 2022 12:05:02.995 * Running mode=sentinel, port=26379.\r\n1:X 10 Oct 2022 12:05:03.008 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:03.008 # Sentinel ID is 40b9669e83e1b991de1b3cc7461b918331ee0376\r\n1:X 10 Oct 2022 12:05:03.008 # +monitor master mymaster redis-master 6379 quorum 2\r\n1:X 10 Oct 2022 12:05:03.011 * +slave slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:03.023 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.910 * +sentinel sentinel 8c19832232d462b9330a41d8a3103d2049ed7912 redis-sentinel2 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:04.928 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:04.953 * +sentinel sentinel c7c59ae8fb334f663289d46b8866e33f1f60fd0e redis-sentinel1 26379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:04.975 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:28.320 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.361 * +fix-slave-config slave redis-slave:6379 redis-slave 6379 @ mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.382 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.411 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.453 # +sdown master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.477 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:29.494 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:29.494 # +new-epoch 1\r\n1:X 10 Oct 2022 12:05:29.509 * Sentinel new configuration saved on disk\r\n1:X 10 Oct 2022 12:05:29.509 # +vote-for-leader 8c19832232d462b9330a41d8a3103d2049ed7912 1\r\n1:X 10 Oct 2022 12:05:29.509 # +odown master mymaster redis-master 6379 #quorum 2/2\r\n1:X 10 Oct 2022 12:05:29.509 # Next failover delay: I will not start a failover before Mon Oct 10 12:05:40 2022\r\n1:X 10 Oct 2022 12:05:30.453 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:30.583 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.526 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:31.602 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.596 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:32.645 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.621 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:33.709 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:34.661 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:34.790 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:35.748 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:35.907 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:36.798 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:36.938 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:37.872 # Failed to resolve hostname 'redis-master'\r\n1:X 10 Oct 2022 12:05:37.981 # Failed to resolve hostname 'redis-master'\r\n```\r\n\r\nI see sentinel-2 is the leader, but failover failed, important log\r\n\r\n```\r\n1:X 10 Oct 2022 12:05:29.537 # +failover-state-select-slave master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.622 # -failover-abort-no-good-slave master mymaster redis-master 6379\r\n1:X 10 Oct 2022 12:05:29.685 # Next failover delay: I will not start a failover before Mon Oct 10 12:05:40 2022\r\n```\r\n\r\nI expected that the slave container could be promoted to master, but it didn't.\r\n\r\nI would like to ask, docker stop master container, why slave container is not selected as master?\r\n\r\nPlease also help to troubleshoot the problem, thank you very much.\r\n\r\n**If you cannot reproduce the problem, please try several times, as it does not occur every time.**\r\n"
    },
    {
      "id": 1274514505,
      "user": "moticless",
      "created_at": "2022-10-11T11:08:29Z",
      "body": "Hi @kaito-kidd,\r\nI managed to reproduce the problem.\r\n\r\nIt looks like that during failover scenario, when the master is down but sentinel managed to resolve master hostname, then \r\nthe flow pass as expected. But if it failed to resolve hostname, then failover gets failed. \r\n\r\nI will see what it takes to fix it.\r\n\r\nThank you. "
    },
    {
      "id": 1288067825,
      "user": "moticless",
      "created_at": "2022-10-23T09:44:23Z",
      "body": "Hi @kaito-kidd ,\r\nCan you test please my PR #11419  and see if it resolves your issue?\r\n\r\nThank you."
    },
    {
      "id": 1290568654,
      "user": "kaito-kidd",
      "created_at": "2022-10-25T13:34:58Z",
      "body": "Hi @moticless,\r\n\r\nI have tested this MR, the test passed, sentinel failover passed, as expected, thank you very much.\r\n\r\nWill this MR backforward to 6.x? I am using version 6.2.7 now. I'm hoping for is a minor version upgrade."
    },
    {
      "id": 1290940596,
      "user": "moticless",
      "created_at": "2022-10-25T17:54:55Z",
      "body": " \r\n\r\n> Hi @moticless,\r\n> \r\n> I have tested this MR, the test passed, sentinel failover passed, as expected, thank you very much.\r\n> \r\n> Will this MR backforward to 6.x? I am using version 6.2.7 now. I'm hoping for is a minor version upgrade.\r\n\r\n@yossigo FYI"
    },
    {
      "id": 1304801440,
      "user": "moticless",
      "created_at": "2022-11-06T13:26:55Z",
      "body": "https://github.com/redis/redis/pull/11419 goanna backport 6.2 & 7.0."
    }
  ]
}