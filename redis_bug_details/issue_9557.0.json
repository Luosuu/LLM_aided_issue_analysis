{
  "issue_number": 9557.0,
  "title": "[BUG] Possible integer overflow in sds.c",
  "body": "In the [function](https://github.com/redis/redis/blob/e1dc979054846f96f77783673e421863700204be/src/sds.c#L239) `_sdsMakeRoomFor(sds s, size_t addlen, int greedy)`, we have the following code that can lead to integer overflow (see my comments for details):\r\n```\r\nlen = sdslen(s); // suppose len = 2\r\n// suppose addlen=0xffffffffffefffef, then newlen = 0xffffffffffeffff1\r\nnewlen = (len+addlen); \r\nassert(newlen > len); // check passed\r\n\r\nif (greedy == 1) { // suppose greedy = 1\r\n    // SDS_MAX_PREALLOC is (1024*1024), taking else branch\r\n    if (newlen < SDS_MAX_PREALLOC) \r\n      newlen *= 2;\r\n    else\r\n      newlen += SDS_MAX_PREALLOC; // newlen = 0xfffffffffffffff1\r\n}\r\n...\r\nhdrlen = sdsHdrSize(type); // suppose type is SDS_TYPE_64, hdrlen=17\r\n// hdrlen + newlen + 1 = 3 > len=2, check passed but overflow happens!\r\nassert(hdrlen + newlen + 1 > len); \r\n\r\n// use the overflowed small value 3 as the allocation size, dangerous!\r\nnewsh = s_realloc_usable(sh, hdrlen+newlen+1, &usable);\r\n```\r\n",
  "state": "closed",
  "created_at": "2021-09-27T03:55:00Z",
  "updated_at": "2021-10-04T08:11:10Z",
  "closed_at": "2021-10-04T08:11:10Z",
  "labels": [],
  "comments_data": [
    {
      "id": 927548147,
      "user": "sundb",
      "created_at": "2021-09-27T05:41:13Z",
      "body": "Good, Can you make a pr for this?"
    },
    {
      "id": 927564745,
      "user": "yiyuaner",
      "created_at": "2021-09-27T06:16:07Z",
      "body": "> Good, Can you make a pr for this?\r\n\r\nOk, I have made a pr. Also, do you think this issue needs a security advisory? Can you help to apply for an CVE id? Thanks."
    },
    {
      "id": 927631733,
      "user": "oranagra",
      "created_at": "2021-09-27T08:08:45Z",
      "body": "@yiyuaner thank you for reporting.\r\nwe're trying to assess if / how this issue impacts Redis and we'll create an advisory if needed.\r\ni would like to ask that next time if you find such an issue, please contact us privately, see https://github.com/redis/redis/security/policy"
    }
  ]
}