{
  "issue_number": 8530.0,
  "title": "[BUG] 6.2.0 - [err]: Process title set as expected in tests/unit/other.tcl",
  "body": "**Describe the bug**\r\n\r\nAlpine Linux runs the test suite as part of the build process.\r\n\r\nUnfortunately the newly introduced \"Process title set as expected\" test fails.\r\n\r\n```sh\r\n[ok]: Test RDB stream encoding - sanitize dump\r\n[err]: Process title set as expected in tests/unit/other.tcl\r\nExpected 'TEST' to be equal to 'src/redis-server./tests/tmp/redis.conf.1107.10' (context: type eval line 10 cmd {assert_equal \"TEST\" [lindex $cmdline 0]} proc ::test)\r\n[18/62 done]: unit/other (21 seconds)\r\nTesting integration/corrupt-dump\r\n[ok]: Server should not start if RDB file can't be open\r\n```\r\n\r\nLog from CI https://gitlab.alpinelinux.org/TBK/aports/-/jobs/330424#L1433\r\n\r\n**To reproduce**\r\n\r\n1. setup dabuild (https://gitlab.alpinelinux.org/alpine/docker-abuild/)\r\n2. `git clone -b main/redis https://gitlab.alpinelinux.org/tbk/aports`\r\n3. `cd aports/main/redis`\r\n5. `dabuild -r`\r\n\r\n**Expected behavior**\r\n\r\nTest to pass.\r\n\r\n**Additional information**\r\n\r\nredis.conf.1107.10\r\n```txt\r\nalways-show-logo yes\r\nnotify-keyspace-events KEA\r\ndaemonize no\r\npidfile /var/run/redis.pid\r\nport 23115\r\ntimeout 0\r\nbind 127.0.0.1\r\nloglevel verbose\r\nlogfile ''\r\ndatabases 16\r\nlatency-monitor-threshold 1\r\nsave 60 10000\r\nrdbcompression yes\r\ndbfilename dump.rdb\r\ndir ./tests/tmp/server.1107.9\r\nslave-serve-stale-data yes\r\nappendonly no\r\nappendfsync everysec\r\nno-appendfsync-on-rewrite no\r\nactiverehashing yes\r\nunixsocket /home/builder/aports/main/redis/src/redis-6.2.0/tests/tmp/server.1107.9/socket\r\n```\r\n\r\nserver.1107.9 stdout:\r\n```sh\r\n### Starting server for test \r\n2262:C 22 Feb 2021 23:31:47.444 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\r\n2262:C 22 Feb 2021 23:31:47.445 # Redis version=6.2.0, bits=64, commit=21e2f218, modified=1, pid=2262, just started\r\n2262:C 22 Feb 2021 23:31:47.445 # Configuration loaded\r\n2262:M 22 Feb 2021 23:31:47.446 * monotonic clock: POSIX clock_gettime\r\n                _._                                                  \r\n           _.-``__ ''-._                                             \r\n      _.-``    `.  `_.  ''-._           Redis 6.2.0 (21e2f218/1) 64 bit\r\n  .-`` .-```.  ```\\/    _.,_ ''-._                                   \r\n (    '      ,       .-`  | `,    )     Running in standalone mode\r\n |`-._`-...-` __...-.``-._|'` _.-'|     Port: 23115\r\n |    `-._   `._    /     _.-'    |     PID: 2262\r\n  `-._    `-._  `-./  _.-'    _.-'                                   \r\n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \r\n |    `-._`-._        _.-'_.-'    |           http://redis.io        \r\n  `-._    `-._`-.__.-'_.-'    _.-'                                   \r\n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \r\n |    `-._`-._        _.-'_.-'    |                                  \r\n  `-._    `-._`-.__.-'_.-'    _.-'                                   \r\n      `-._    `-.__.-'    _.-'                                       \r\n          `-._        _.-'                                           \r\n              `-.__.-'                                               \r\n\r\n2262:M 22 Feb 2021 23:31:47.453 # Server initialized\r\n2262:M 22 Feb 2021 23:31:47.453 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\r\n2262:M 22 Feb 2021 23:31:47.453 * Ready to accept connections\r\n2262:M 22 Feb 2021 23:31:47.453 * The server is now ready to accept connections at /home/builder/aports/main/redis/src/redis-6.2.0/tests/tmp/server.1107.9/socket\r\n2262:M 22 Feb 2021 23:31:47.494 - Accepted 127.0.0.1:36749\r\n2262:M 22 Feb 2021 23:31:47.495 - Client closed connection\r\n2262:M 22 Feb 2021 23:31:47.535 - Accepted 127.0.0.1:44035\r\n### Starting test Process title set as expected in tests/unit/other.tcl\r\n2262:signal-handler (1614036707) Received SIGTERM scheduling shutdown...\r\n2262:M 22 Feb 2021 23:31:47.654 # User requested shutdown...\r\n2262:M 22 Feb 2021 23:31:47.654 * Saving the final RDB snapshot before exiting.\r\n2262:M 22 Feb 2021 23:31:47.657 * DB saved on disk\r\n2262:M 22 Feb 2021 23:31:47.657 * Removing the pid file.\r\n2262:M 22 Feb 2021 23:31:47.657 * Removing the unix socket file.\r\n2262:M 22 Feb 2021 23:31:47.657 # Redis is now ready to exit, bye bye...\r\n```",
  "state": "closed",
  "created_at": "2021-02-23T00:53:16Z",
  "updated_at": "2021-02-24T08:37:01Z",
  "closed_at": "2021-02-23T10:57:46Z",
  "labels": [],
  "comments_data": [
    {
      "id": 783812631,
      "user": "madolson",
      "created_at": "2021-02-23T02:10:55Z",
      "body": "@TBK Thanks for reporting this. Do you know if anything about this code would fail specifically for alpine linux? https://github.com/redis/redis/blob/ec02c761aa16175eb599b2fc9d0b2792ffe8a66c/src/setproctitle.c#L275\r\n\r\nI'm trying to launch an alpine linux now to see if I can debug further what is going on. It's not great we aren't error'ing out."
    },
    {
      "id": 783842876,
      "user": "madolson",
      "created_at": "2021-02-23T03:01:27Z",
      "body": "It looks like this code relies on glibc to be present, which afaik alpine linux does not use, so we just fail at updating the process title but don't throw any type of error. I think we should update the code to be more portable across libc versions. We could probably do something temporarily to get this passing as well."
    },
    {
      "id": 783958182,
      "user": "yossigo",
      "created_at": "2021-02-23T07:02:14Z",
      "body": "Looks like there are other alpine issues as well and AFAIR it's not the first time we come across libmusl compatibility issues. I'll add a daily job for it."
    },
    {
      "id": 784899849,
      "user": "TBK",
      "created_at": "2021-02-24T08:26:05Z",
      "body": "Thanks for the quick response and solution :+1: \r\n\r\nWe have one additional patch to be able to use musl's malloc.\r\n\r\n```patch\r\n--- a/src/zmalloc.h\r\n+++ b/src/zmalloc.h\r\n@@ -63,12 +63,10 @@\r\n \r\n #ifndef ZMALLOC_LIB\r\n #define ZMALLOC_LIB \"libc\"\r\n-#ifdef __GLIBC__\r\n #include <malloc.h>\r\n #define HAVE_MALLOC_SIZE 1\r\n #define zmalloc_size(p) malloc_usable_size(p)\r\n #endif\r\n-#endif\r\n \r\n /* We can enable the Redis defrag capabilities only if we are using Jemalloc\r\n  * and the version used is our special version modified for Redis having\r\n\r\n```\r\n\r\nTrying to compile with `MALLOC=libc` without the change will result in this error:\r\n```sh\r\nzmalloc.c:55:28: error: missing binary operator before token \"(\"\r\n #define PREFIX_SIZE (sizeof(size_t))\r\n                            ^\r\nzmalloc.c:59:5: note: in expansion of macro 'PREFIX_SIZE'\r\n #if PREFIX_SIZE > 0\r\n```"
    },
    {
      "id": 784903725,
      "user": "yossigo",
      "created_at": "2021-02-24T08:32:59Z",
      "body": "@TBK We can't assume `malloc_usable_size()` is available on all systems.\r\nIs there some canonical define that can be used to detect libmusl? Also, do all reasonably recent versions of libmusl support `malloc_usable_size()`?"
    },
    {
      "id": 784905981,
      "user": "yossigo",
      "created_at": "2021-02-24T08:37:01Z",
      "body": "@TBK By the way the above patch should no longer be necessary on `unstable`, but please confirm."
    }
  ]
}