{
  "issue_number": 529.0,
  "title": "\"BITOP command 10x speed improvement\" commit causes crash",
  "body": "Bitop-code is exactly what I need, so I've started testing with it. \n\nCurrently that 10x speed up has some special cases that throws \nexception for me again and again. Before that commit \neverything seem to work correctly.\n\n=== REDIS BUG REPORT START: Cut & paste starting from here ===\n[4700] 31 May 16:52:37.235 #     Redis 2.5.9 crashed by signal: 11\n[4700] 31 May 16:52:37.235 #     Failed assertion: <no assertion failed> (<no file>:0)\n[4700] 31 May 16:52:37.235 # --- STACK TRACE\n/usr/local/bin/redis-server(logStackTrace+0x75)[0x436f05]\n/usr/local/bin/redis-server(bitopCommand+0x654)[0x43e014]\n/lib64/libpthread.so.0(+0xf4a0)[0x7f18f83ad4a0]\n/usr/local/bin/redis-server(bitopCommand+0x654)[0x43e014]\n/usr/local/bin/redis-server(call+0x5d)[0x41356d]\n/usr/local/bin/redis-server(processCommand+0x375)[0x413a95]\n/usr/local/bin/redis-server(processInputBuffer+0x4f)[0x41ddbf]\n/usr/local/bin/redis-server(readQueryFromClient+0xa0)[0x41ded0]\n/usr/local/bin/redis-server(aeProcessEvents+0x124)[0x40f954]\n/usr/local/bin/redis-server(aeMain+0x2b)[0x40fbcb]\n/usr/local/bin/redis-server(main+0x2a2)[0x415fd2]\n/lib64/libc.so.6(__libc_start_main+0xfd)[0x7f18f802ccdd]\n/usr/local/bin/redis-server[0x40ef99]\n[4700] 31 May 16:52:37.236 # --- INFO OUTPUT\n[4700] 31 May 16:52:37.236 # # Server\nredis_version:2.5.9\nredis_git_sha1:473f3090\nredis_git_dirty:1\nos:Linux 2.6.32-220.7.1.el6.x86_64 x86_64\narch_bits:64\nmultiplexing_api:epoll\ngcc_version:4.4.6\nprocess_id:4700\nrun_id:eadbeea66d27438158e2d3a568a267d770588423\ntcp_port:6379\nuptime_in_seconds:1367\nuptime_in_days:0\nlru_clock:1726659\n# Clients\n\nconnected_clients:2\nclient_longest_output_list:0\nclient_biggest_input_buf:0\nblocked_clients:0\n# Memory\n\nused_memory:882120\nused_memory_human:861.45K\nused_memory_rss:7729152\nused_memory_peak:1134552\nused_memory_peak_human:1.08M\nused_memory_lua:30720\nmem_fragmentation_ratio:8.76\nmem_allocator:jemalloc-3.0.0\n# Persistence\n\nloading:0\nrdb_changes_since_last_save:383\nrdb_bgsave_in_progress:0\nrdb_last_save_time:1338472083\nrdb_last_bgsave_status:ok\nrdb_last_bgsave_time_sec:0\nrdb_current_bgsave_time_sec:-1\naof_enabled:0\naof_rewrite_in_progress:0\naof_rewrite_scheduled:0\naof_last_rewrite_time_sec:-1\naof_current_rewrite_time_sec:-1\n# Stats\n\ntotal_connections_received:441\ntotal_commands_processed:1354\ninstantaneous_ops_per_sec:5\nrejected_connections:0\nexpired_keys:0\nevicted_keys:0\nkeyspace_hits:155\nkeyspace_misses:3\npubsub_channels:0\npubsub_patterns:0\nlatest_fork_usec:586\n# Replication\n\nrole:master\nconnected_slaves:0\n# CPU\n\nused_cpu_sys:0.07\nused_cpu_user:0.04\nused_cpu_sys_children:0.00\nused_cpu_user_children:0.00\n# Commandstats\n\ncmdstat_del:calls=40,usec=71,usec_per_call=1.77\ncmdstat_setbit:calls=957,usec=2612,usec_per_call=2.73\ncmdstat_keys:calls=261,usec=3193,usec_per_call=12.23\ncmdstat_bitop:calls=29,usec=231,usec_per_call=7.97\ncmdstat_bitcount:calls=67,usec=376,usec_per_call=5.61\n# Keyspace\n\ndb0:keys=59,expires=0\nhash_init_value: 1338579262\n\n[4700] 31 May 16:52:37.236 # --- CLIENT LIST OUTPUT\n[4700] 31 May 16:52:37.236 # addr=127.0.0.1:38477 fd=6 age=57 idle=45 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=32 events=r cmd=keys\naddr=127.0.0.1:40358 fd=5 age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=bitop\n\n[4700] 31 May 16:52:37.236 # --- CURRENT CLIENT INFO\n[4700] 31 May 16:52:37.236 # client: addr=127.0.0.1:40358 fd=5 age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=bitop\n[4700] 31 May 16:52:37.236 # argv[0]: 'BITOP'\n[4700] 31 May 16:52:37.236 # argv[1]: 'OR'\n[4700] 31 May 16:52:37.236 # argv[2]: 'segmentcount'\n[4700] 31 May 16:52:37.236 # argv[3]: 'site.2.segment.sgmt_1'\n[4700] 31 May 16:52:37.236 # argv[4]: 'site.2.segment.sgmt_2'\n[4700] 31 May 16:52:37.236 # argv[5]: 'site.2.segment.sgmt_3'\n[4700] 31 May 16:52:37.236 # --- REGISTERS\n[4700] 31 May 16:52:37.236 # \nRAX:0000000000000000 RBX:00007f18f788e288\nRCX:00007fff0e618a40 RDX:0000000000000002\nRDI:000000000000012e RSI:0000000000000000\nRBP:000000000000012e RSP:00007fff0e6189f0\nR8 :0000000000000000 R9 :0000000000000000\nR10:0000000000000000 R11:00007f18f8090cb8\nR12:0000000000000003 R13:0000000000000001\nR14:00007f18f797d000 R15:00007f18f789ca60\nRIP:000000000043e014 EFL:0000000000010297\nCSGSFS:0000000000000033\n[4700] 31 May 16:52:37.236 # (00007fff0e618a68) -> 00007f18f7806000\n[4700] 31 May 16:52:37.236 # (00007fff0e618a60) -> 00007f18f79710e0\n[4700] 31 May 16:52:37.236 # (00007fff0e618a58) -> 0000000000000010\n[4700] 31 May 16:52:37.236 # (00007fff0e618a50) -> 0000000000000000\n[4700] 31 May 16:52:37.236 # (00007fff0e618a48) -> 00007f18f7893828\n[4700] 31 May 16:52:37.236 # (00007fff0e618a40) -> 00007f18f7893588\n[4700] 31 May 16:52:37.236 # (00007fff0e618a38) -> 0000000000000001\n[4700] 31 May 16:52:37.236 # (00007fff0e618a30) -> 0000000000000018\n[4700] 31 May 16:52:37.236 # (00007fff0e618a28) -> 00007f18f79710e0\n[4700] 31 May 16:52:37.236 # (00007fff0e618a20) -> 000000000000012e\n[4700] 31 May 16:52:37.236 # (00007fff0e618a18) -> 0000000000000003\n[4700] 31 May 16:52:37.236 # (00007fff0e618a10) -> 00007f18f789cf60\n[4700] 31 May 16:52:37.236 # (00007fff0e618a08) -> 00007f18f789cfa0\n[4700] 31 May 16:52:37.236 # (00007fff0e618a00) -> 00007f18f788e288\n[4700] 31 May 16:52:37.236 # (00007fff0e6189f8) -> 00007fff0e618a40\n[4700] 31 May 16:52:37.236 # (00007fff0e6189f0) -> 0000000000009000\n[4700] 31 May 16:52:37.236 # \n=== REDIS BUG REPORT END. Make sure to include from START to END. ===\n\n```\n   Please report the crash opening an issue on github:\n\n       http://github.com/antirez/redis/issues\n```\n",
  "state": "closed",
  "created_at": "2012-05-31T18:10:47Z",
  "updated_at": "2012-05-31T19:53:42Z",
  "closed_at": "2012-05-31T19:53:42Z",
  "labels": [
    "critical bug",
    "crash report"
  ],
  "comments_data": [
    {
      "id": 6043698,
      "user": "antirez",
      "created_at": "2012-05-31T18:29:28Z",
      "body": "Thanks, looking into it ASAP. Do you have perhaps a way to simply replicate it? Thanks.\n"
    },
    {
      "id": 6044510,
      "user": "singularity-xx",
      "created_at": "2012-05-31T19:01:12Z",
      "body": "flushdb\nset a \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\nbitop or x a b\n"
    },
    {
      "id": 6045334,
      "user": "antirez",
      "created_at": "2012-05-31T19:37:29Z",
      "body": "Awesome, I can reproduce it, so it will be trivial to fix ASAP. Thanks.\n"
    },
    {
      "id": 6045741,
      "user": "antirez",
      "created_at": "2012-05-31T19:53:32Z",
      "body": "Fixed, thanks!\n"
    }
  ]
}