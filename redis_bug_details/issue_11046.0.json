{
  "issue_number": 11046.0,
  "title": "[BUG] Wrong response in redis-cli after unsubscribing channels and use another command to get data.",
  "body": "**Describe the bug**\r\nI was using `redis-cli` to communicate with `redis-server`.\r\nFirst I used `UNSUBSCRIBE` command to unsubscribe multiple channels (I did not use `SUBSCRIBE` command to subscribe those channels). And then I tried to use `SET` or other commands (may be `LRANGE`) to get some data from the `redis-server`, but I got the unexpected response.\r\n\r\n**To reproduce**\r\n`Environment:` \r\n* redis-server: Redis server v=7.0.3 sha=00000000:0 malloc=jemalloc-5.2.1 bits=64 build=9e1e27bf47eab674\r\n* redis-cli: redis-cli 7.0.3\r\n* OS: Ubuntu 16.04\r\n\r\nSteps to reproduce the behavior and/or a minimal code sample.\r\n![image](https://user-images.githubusercontent.com/28601090/181213225-a0487fd1-cade-4889-bd62-db6c87e79c46.png)\r\n\r\n**Expected behavior**\r\nI think the `GET a` command should return `100` right after I use `UNSUBSCRIBE ch1 ch2`, rather than the response from `UNSUBSCRIBE` command.",
  "state": "closed",
  "created_at": "2022-07-27T09:36:46Z",
  "updated_at": "2023-03-12T16:08:05Z",
  "closed_at": "2023-03-12T16:08:05Z",
  "labels": [],
  "comments_data": [
    {
      "id": 1196531949,
      "user": "enjoy-binbin",
      "created_at": "2022-07-27T10:08:51Z",
      "body": "thanks for reporting, indeed a bug (redis-cli bug), i tested in unstable branch"
    },
    {
      "id": 1196561969,
      "user": "oranagra",
      "created_at": "2022-07-27T10:39:37Z",
      "body": "it seems like the protocol is broken by the UNSUBSCRIBE command (returning multiple RESP replies).\r\nand it seems to have existed in previous versions as well."
    },
    {
      "id": 1196568437,
      "user": "enjoy-binbin",
      "created_at": "2022-07-27T10:46:39Z",
      "body": "> it seems like the protocol is broken by the UNSUBSCRIBE command (returning multiple RESP replies).\r\nand it seems to have existed in previous versions as well.\r\n\r\nyes and yes, i suppose we need to read the specified number of replies according to the number of parameters.\r\ni am testing it. have a demo fix, didn't test in cluster mode..\r\n\r\nIt's just that the code's special handling of SUBSCRIBE related commands... i will make a PR and see how it will work"
    },
    {
      "id": 1196594604,
      "user": "oranagra",
      "created_at": "2022-07-27T11:14:57Z",
      "body": "i'm not a pubsub expert, but all other commands reply with a RESP array when they have multiple replies (even if they got multiple inputs).\r\nmaybe it's different when the connection is in pubsub mode, but in this case it isn't.\r\nmaybe it should just reply with an error?\r\n\r\n@itamarhaber please keep me honest."
    },
    {
      "id": 1196826012,
      "user": "itamarhaber",
      "created_at": "2022-07-27T14:21:08Z",
      "body": "Bringing in clients to gain clarity - @chayim @leibale please opine"
    },
    {
      "id": 1209018306,
      "user": "oranagra",
      "created_at": "2022-08-09T07:33:11Z",
      "body": "trying to pick this up again, i still think it's a bug in redis (not the CLI).\r\nthe connection is not in a pubsub mode, so it should reply with a plain error, and not with a pubsub type message."
    },
    {
      "id": 1209026844,
      "user": "enjoy-binbin",
      "created_at": "2022-08-09T07:40:54Z",
      "body": "yes, think again now, i agree with oran.\r\nthe connection is not in pubsub mode, and i guess reject these command is the better way to go"
    },
    {
      "id": 1209179151,
      "user": "leibale",
      "created_at": "2022-08-09T10:06:15Z",
      "body": "so you are suggesting that\r\n```\r\nUNSUBSCRIBE channel\r\n```\r\nwill throw an error, but\r\n```\r\nSUBSCRIBE channel\r\nUNSUBSCRIBE another-channel\r\n```\r\nwill \"work\"?\r\nand what about `UNSUBSCRIBE` without arguments (which normally unsubscribes from all channels) when the client is not in pubsub mode?\r\n\r\nIMO we should leave it as is and fix the bug in redis-cli"
    },
    {
      "id": 1209204991,
      "user": "oranagra",
      "created_at": "2022-08-09T10:31:07Z",
      "body": "yes, i think an UNSUBSCUBE that arrives to a connection that's in pubsub mode should speak the \"pubsub protocol\", but it if arrives on a connection that's not in pubsub mode it should speak a \"normal\" redis protocol.\r\n\r\nsame about UNSUBSCRIBE without argument, if it arrives on a connection that's not in pubsub mode it should respond with a \"normal\" redis protocol response.\r\nhowever, it seems that in this case we don't have a problem since the subscribed channel list is expected to be empty, and redis will respond with a single array response.\r\n\r\nI don't think the bug is in redis-cli, so we can't fix it there, it's redis that breaks it's own protocol.\r\n\r\n@leibale are you aware of any client library that issues an UNSUBSCRIBE on a connection that's not in pubsub mode and will get broken by such a change?"
    },
    {
      "id": 1422364884,
      "user": "enjoy-binbin",
      "created_at": "2023-02-08T10:22:26Z",
      "body": "> the connection is not in a pubsub mode, so it should reply with a plain error, and not with a pubsub type message.\r\n\r\ntrying to pick this up, it's a breaking change, but it doesn't seem to matter much, maybe we can do it in 7.2? @oranagra WDYT"
    },
    {
      "id": 1423600625,
      "user": "enjoy-binbin",
      "created_at": "2023-02-09T04:07:56Z",
      "body": "It appears to be a known situation, breaking change\r\n```\r\n    test \"UNSUBSCRIBE from non-subscribed channels\" {\r\n        set rd1 [redis_deferring_client]\r\n        assert_equal {0 0 0} [unsubscribe $rd1 {foo bar quux}]\r\n\r\n        # clean up clients\r\n        $rd1 close\r\n    }\r\n```"
    },
    {
      "id": 1423856459,
      "user": "oranagra",
      "created_at": "2023-02-09T09:08:02Z",
      "body": "i no longer remember all the details, i suppose that considering it's a non-common edge case it doesn't worth fixing and breaking something.\r\nbut on the other hand, if we decide not to fix it in redis, we should fix redis-cli, despite the fact the bug is in redis, and i'm very much uncomfortable with it.\r\nmaybe somehow we can get a reassurance that this breaking change is very unlikely to be noticed by anyone?\r\n@itamarhaber can you help here?"
    },
    {
      "id": 1424901718,
      "user": "hpatro",
      "created_at": "2023-02-09T22:10:21Z",
      "body": "@oranagra @enjoy-binbin Wouldn't it be fine to introduce a breaking change to reject `UNSUBSCRIBE`/`SUNSUBSCRIBE` /`PUNSUBSCRIBE` command done outside pubsub mode. I think this adds guardrails to avoid issues further in the future.\r\n\r\nWe currently do the inverse of rejecting most of the commands inside pubsub mode. https://github.com/redis/redis/blob/unstable/src/server.c#L3997-L4011"
    },
    {
      "id": 1426966083,
      "user": "oranagra",
      "created_at": "2023-02-12T07:58:37Z",
      "body": "it makes sense to me, but the fact there's an explicit test for this behavior scares me.\r\nmaybe with other commands, clients expect getting an error (i.e. it's a \"valid\" response), but for unsubscribe they expect getting only the standard unsubscribe error.\r\nhoping someone will be able to shed more light.\r\n\r\nin any case, we should be aiming to avoid introducing breaking changes in semver minor versions (exceptions are when it's a new interface that is better fixed early before many use it, or a fix that we have to fix in order to proceed with something else, or a security issue). i'll mark this for redis 8.0."
    },
    {
      "id": 1460483632,
      "user": "zuiderkwast",
      "created_at": "2023-03-08T16:45:35Z",
      "body": "This is fixed in redis-cli in #11873."
    }
  ]
}