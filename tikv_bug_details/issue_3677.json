{
  "issue_number": 3677,
  "title": "Selection executor does not handle start_scan or stop_scan correctly",
  "body": "## Bug Report\r\n\r\nAs title describes.\r\n\r\nBy default, `stop_scan` will return `None` and we explicitly implemented these interface for Table Scan and Index Scan. However we may have the following scenario: selection + table_scan. Then it will break.\r\n\r\nAlso it can be seen that the best solution is to inherit start_scan and stop_scan from child executors by default (currently our behaviour is override with None).",
  "state": "closed",
  "created_at": "2018-10-15T08:59:28Z",
  "updated_at": "2020-08-27T12:30:56Z",
  "closed_at": "2020-08-27T12:30:56Z",
  "labels": [
    "type/bug",
    "help wanted",
    "sig/coprocessor",
    "difficulty/easy",
    "severity/minor"
  ],
  "comments_data": [
    {
      "id": 559356570,
      "user": "jswh",
      "created_at": "2019-11-28T06:11:51Z",
      "body": "This issue is opened at 15 Oct 2018, is it still valid?"
    },
    {
      "id": 679933728,
      "user": "BusyJay",
      "created_at": "2020-08-25T10:09:06Z",
      "body": "It's still valid for 3.0 when using streaming call. Since 4.0 is released and streaming call is not used by default, I think we can mark it as won't fix and close it."
    }
  ]
}