{
  "issue_number": 13554,
  "title": "TiKV panic repeatedly: [FATAL] [lib.rs:465] [\"unstable.slice[22, 23] out of bound[22, 22], raft_id: 115835, region_id: 115832\"]",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\nTiKV\r\nRelease Version:   5.4.1\r\nEdition:           Community\r\nGit Commit Hash:   91fe561f0af87cc47359cdf61d6e6838471cb644\r\nGit Commit Branch: heads/refs/tags/v5.4.1\r\nUTC Build Time:    2022-05-13 02:34:08\r\nRust Version:      rustc 1.56.0-nightly (2faabf579 2021-07-27)\r\nEnable Features:   jemalloc mem-profiling portable sse test-engines-rocksdb cloud-aws cloud-gcp cloud-azure\r\nProfile:           dist_release\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\n\r\n- Create TiDB cluster v5.4.1 on AWS EKS by operator, 3 TiKV node.\r\n- Run sysbench oltp_common prepare\r\n- Run sysbench oltp_insert run\r\n\r\n### What did you expect?\r\nNo any error.\r\n\r\n### What did happened?\r\n\r\n- TiKV-0 and TiKV-1 OOM, known issue\r\n- Then TiKV-1 recovered, but TiKV-0 panic repeatedly, tikv.log::\r\n[2022/09/28 08:58:13.426 +00:00] [FATAL] [lib.rs:465] [\"unstable.slice[22, 23] out of bound[22, 22], raft_id: 115835, region_id: 115832\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:464:18\\n   1: std::panicking::rust_panic_with_hook\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:626:17\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:519:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:141:18\\n   4: rust_begin_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:515:5\\n   5: std::panicking::begin_panic_fmt\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:457:5\\n   6: raft::log_unstable::Unstable::must_check_outofbounds\\n             at rust/git/checkouts/raft-rs-42b8049ef2e3af07/e6d28ef/src/log_unstable.rs:204:13\\n   7: raft::log_unstable::Unstable::truncate_and_append\\n             at rust/git/checkouts/raft-rs-42b8049ef2e3af07/e6d28ef/src/log_unstable.rs:169:13\\n   8: raft::raft_log::RaftLog<T>::append\\n             at rust/git/checkouts/raft-rs-42b8049ef2e3af07/e6d28ef/src/raft_log.rs:377:9\\n   9: raft::raft_log::RaftLog<T>::maybe_append\\n             at rust/git/checkouts/raft-rs-42b8049ef2e3af07/e6d28ef/src/raft_log.rs:268:17\\n  10: raftstore::store::peer::Peer<EK,ER>::maybe_append_merge_entries\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/peer.rs:845:9\\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_catch_up_logs_for_merge\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3284:15\\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_significant_msg\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:1132:17\\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:615:49\\n  11: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:797:9\\n  12: batch_system::batch::Poller<N,C,Handler>::poll\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:406:27\\n  13: raftstore::store::worker::refresh_config::PoolController<N,C,H>::increase_by::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/worker/refresh_config.rs:71:21\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:125:18\\n  14: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:476:17\\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:347:9\\n      std::panicking::try::do_call\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:401:40\\n      std::panicking::try\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:365:19\\n      std::panic::catch_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:434:14\\n      std::thread::Builder::spawn_unchecked::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:475:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/ops/function.rs:227:5\\n  15: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys/unix/thread.rs:91:17\\n  16: <unknown>\\n  17: clone\\n\"] [location=/rust/git/checkouts/raft-rs-42b8049ef2e3af07/e6d28ef/src/log_unstable.rs:204] [thread_name=raftstore-5-3]",
  "state": "closed",
  "created_at": "2022-09-28T09:39:06Z",
  "updated_at": "2024-07-31T18:00:21Z",
  "closed_at": "2024-05-22T08:41:46Z",
  "labels": [
    "type/bug",
    "severity/major",
    "affects-6.1",
    "affects-6.5",
    "affects-7.1",
    "affects-7.5"
  ],
  "comments_data": [
    {
      "id": 1752464377,
      "user": "AndreMouche",
      "created_at": "2023-10-09T07:20:34Z",
      "body": "Friendly ping, same issue in v6.5.4 when start tikv:\r\n```\r\n[\"unstable.slice[28051, 28055] out of bound[28051, 28051], raft_id: 2010234007, region_id: 2010234004\"] \r\n[backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             \r\nat tikv/components/tikv_util/src/lib.rs:508:18\\n   \r\n1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\\n    \r\n at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2032:9\\n      std::panicking::rust_panic_with_hook\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:692:13\\n   \r\n 2: std::panicking::begin_panic_handler::{{closure}}\\n            \r\n  at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:579:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:137:18\\n   \r\n  4: rust_begin_unwind\\n             \r\n  at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:575:5\\n   5: core::panicking::panic_fmt\\n            \r\n   at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:65:14\\n  \r\n    6: raft::log_unstable::Unstable::must_check_outofbounds\\n           \r\nat root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:201:13\\n  \r\n 7: raft::log_unstable::Unstable::truncate_and_append\\n    \r\nat root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:169:13\\n \r\n  8: raft::raft_log::RaftLog<T>::append\\n        \r\nat root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/raft_log.rs:377:9\\n  \r\n 9: raft::raft_log::RaftLog<T>::maybe_append\\n            \r\n  at root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/raft_log.rs:268:17\\n \r\n   10: raftstore::store::peer::Peer<EK,ER>::maybe_append_merge_entries\\n           \r\n     at tikv/components/raftstore/src/store/peer.rs:1369:9\\n     \r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_catch_up_logs_for_merge\\n             at tikv/components/raftstore/src/store/fsm/peer.rs:4466:15\\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_significant_msg\\n             at tikv/components/raftstore/src/store/fsm/peer.rs:1403:17\\n  11: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\\n             at tikv/components/raftstore/src/store/fsm/peer.rs:666:49\\n  12: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\\n             at tikv/components/raftstore/src/store/fsm/store.rs:971:9\\n  13: batch_system::batch::Poller<N,C,Handler>::poll\\n             at tikv/components/batch-system/src/batch.rs:430:27\\n  14: batch_system::batch::BatchSystem<N,C>::start_poller::{{closure}}\\n             at tikv/components/batch-system/src/batch.rs:600:17\\n      <std::thread::Builder as tikv_util::sys::thread::StdThreadBuildWrapper>::spawn_wrapper::{{closure}}\\n             at tikv/components/tikv_util/src/sys/thread.rs:415:23\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18\\n  15: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:551:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40\\n      std::panicking::try\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19\\n      std::panic::catch_unwind\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:550:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:513:5\\n  16: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\\n  17: start_thread\\n  18: __clone3\\n\"] [location=/root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:201] \r\n[thread_name=raftstore-1942158-0]\r\n```\r\nIt seems that the case of entry being empty was not considered during initialization.\r\n\r\n\r\nhttps://github.com/tikv/raft-rs/blob/10c6e9db6792b85c81784e44fc278f895d5f0ab0/src/log_unstable.rs#L156-L177\r\n\r\nhttps://github.com/tikv/raft-rs/blob/10c6e9db6792b85c81784e44fc278f895d5f0ab0/src/log_unstable.rs#L195-L211\r\n\r\n   "
    },
    {
      "id": 1754222522,
      "user": "overvenus",
      "created_at": "2023-10-10T02:23:51Z",
      "body": "~~The panic is caused by ebs backup breaks region merge assumption: when proposing commit merge, all source peers must have raft logs that is large than or equal to prepare merge min index. But in ebs backup, the snapshot of panic tikv is taken before merge (does not have enough raft logs), and the snapshot of other tikvs is taken after merge. So the target region leader sends CommitMerge raft log to panic tikv, but the source region leader doesn't send the following raft log (because it is merged), which causes the source region to panic when handling CatchUpLogs from target region.~~\r\n\r\n----\r\n\r\nIt turns out that v5.4.1 does not support ebs backup restore."
    },
    {
      "id": 1795032858,
      "user": "BornChanger",
      "created_at": "2023-11-06T15:02:28Z",
      "body": "@tonyxuqqi It seems this issue has nothing to do with br."
    },
    {
      "id": 2030927383,
      "user": "BornChanger",
      "created_at": "2024-04-02T01:47:03Z",
      "body": "/remove-component backup-restore "
    },
    {
      "id": 2030927954,
      "user": "BornChanger",
      "created_at": "2024-04-02T01:47:31Z",
      "body": "br panic issue has been fixed by https://github.com/tikv/tikv/pull/15946"
    }
  ]
}