{
  "issue_number": 12231,
  "title": "resolved_ts: unexpected panic when build_scan_task",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\nmaster @ 9a43faf4da20389a4e2c262ee8ab8b369a3bfec4\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\nkubernetes\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\nrun jepsen sequential workload with the following options:\r\n```\r\n {:auto-retry-limit :default,\r\n :ssh-private-key \"jepsen.pem\",\r\n :isolation :repeatable-read,\r\n :concurrency 10,\r\n :predicate-read false,\r\n :tarball-url\r\n \"http://minio.pingcap.net:9000/tp-team/tests/jepsen/tidb-master.tar.gz\",\r\n :txn-mode \"pessimistic\",\r\n :force-reinstall true,\r\n :update-in-place false,\r\n :ssh\r\n {:username \"root\",\r\n  :password \"root\",\r\n  :strict-host-key-checking false,\r\n  :private-key-path \"jepsen.pem\"},\r\n :nemesis-long-recovery false,\r\n :follower-read true,\r\n :nemesis\r\n {:interval 10,\r\n  :schedules true,\r\n  :kill true,\r\n  :stop true,\r\n  :partition-one true},\r\n :nodes\r\n [\"node-0.node-peer.jepsen-tps-662537-1-191\"\r\n  \"node-1.node-peer.jepsen-tps-662537-1-191\"\r\n  \"node-2.node-peer.jepsen-tps-662537-1-191\"\r\n  \"node-3.node-peer.jepsen-tps-662537-1-191\"\r\n  \"node-4.node-peer.jepsen-tps-662537-1-191\"],\r\n :test-count 1,\r\n :read-lock \"FOR UPDATE\",\r\n :use-index false,\r\n :os #object[tidb.core.Image 0x19fec3d6 \"tidb.core.Image@19fec3d6\"],\r\n :time-limit 300,\r\n :recovery-time 10,\r\n :version \"master\",\r\n :auto-retry :default,\r\n :workload :sequential,\r\n :init-txn-sql\r\n (\"set @@tidb_enable_async_commit = 0, @@tidb_enable_1pc = 0\"\r\n  \"set @@tidb_enable_async_commit = 1, @@tidb_enable_1pc = 0\"\r\n  \"set @@tidb_enable_async_commit = 1, @@tidb_enable_1pc = 1\"),\r\n :init-sql\r\n (\"set @@tidb_enable_mutation_checker=1, @@tidb_txn_assertion_level=strict\")}\r\n```\r\n\r\n### What did you expect?\r\n\r\nTest passed.\r\n\r\n### What did happened?\r\n\r\nTiKV panicked\r\n```\r\n[2022/03/21 10:00:44.118 +00:00] [FATAL] [lib.rs:468] [\"called `Result::unwrap()` on an `Err` value: channel has been closed\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:467:18\\n   1: std::panicking::rust_panic_with_hook\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:702:17\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:588:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys_common/backtrace.rs:138:18\\n   4: rust_begin_unwind\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:584:5\\n   5: core::panicking::panic_fmt\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panicking.rs:143:14\\n   6: core::result::unwrap_failed\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/result.rs:1749:5\\n   7: core::result::Result<T,E>::unwrap\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/result.rs:1065:23\\n      resolved_ts::endpoint::Endpoint<T,E,C>::build_scan_task::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resolved_ts/src/endpoint.rs:368:17\\n   8: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1868:9\\n      resolved_ts::scanner::ScannerPool<T,E>::spawn_task::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resolved_ts/src/scanner.rs:96:25\\n   9: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/future/mod.rs:84:19\\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\\n      tokio::runtime::task::core::CoreStage<T>::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\\n      tokio::runtime::task::harness::poll_future::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\\n      std::panicking::try\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\\n      std::panic::catch_unwind\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\\n      tokio::runtime::task::harness::poll_future\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\\n  10: tokio::runtime::task::harness::Harness<T,S>::poll_inner\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\\n      tokio::runtime::task::harness::Harness<T,S>::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\\n      tokio::runtime::task::raw::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\\n  11: tokio::runtime::task::raw::RawTask::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\\n      tokio::runtime::task::LocalNotified<S>::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:425:13\\n      tokio::coop::with_budget::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\\n      std::thread::local::LocalKey<T>::try_with\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/local.rs:413:16\\n      std::thread::local::LocalKey<T>::with\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/local.rs:389:9\\n      tokio::coop::with_budget\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\\n      tokio::coop::budget\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\\n      tokio::runtime::thread_pool::worker::Context::run_task\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\\n  12: tokio::runtime::thread_pool::worker::Context::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:391:24\\n      tokio::runtime::thread_pool::worker::run::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\\n      tokio::macros::scoped_tls::ScopedKey<T>::set\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\\n      tokio::runtime::thread_pool::worker::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\\n      tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\\n      <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\\n      tokio::runtime::task::core::CoreStage<T>::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\\n      tokio::runtime::task::harness::poll_future::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\\n      std::panicking::try\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\\n      std::panic::catch_unwind\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\\n      tokio::runtime::task::harness::poll_future\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\\n      tokio::runtime::task::harness::Harness<T,S>::poll_inner\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\\n      tokio::runtime::task::harness::Harness<T,S>::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\\n      tokio::runtime::task::raw::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\\n  13: tokio::runtime::task::raw::RawTask::poll\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\\n      tokio::runtime::task::UnownedTask<S>::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\\n      tokio::runtime::blocking::pool::Task::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\\n      tokio::runtime::blocking::pool::Inner::run\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys_common/backtrace.rs:122:18\\n  14: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/mod.rs:498:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\\n      std::panicking::try\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\\n      std::panic::catch_unwind\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/mod.rs:497:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/ops/function.rs:227:5\\n  15: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1854:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1854:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys/unix/thread.rs:108:17\\n  16: start_thread\\n  17: clone\\n\"] [location=/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resolved_ts/src/endpoint.rs:374] [thread_name=inc-scan]\r\n   0: tikv_util::set_panic_hook::{{closure}}\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:467:18\r\n   1: std::panicking::rust_panic_with_hook\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:702:17\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:588:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys_common/backtrace.rs:138:18\r\n   4: rust_begin_unwind\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:584:5\r\n   5: core::panicking::panic_fmt\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panicking.rs:143:14\r\n   6: core::result::unwrap_failed\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/result.rs:1749:5\r\n   7: core::result::Result<T,E>::unwrap\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/result.rs:1065:23\r\n      resolved_ts::endpoint::Endpoint<T,E,C>::build_scan_task::{{closure}}\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resolved_ts/src/endpoint.rs:368:17\r\n   8: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1868:9\r\n      resolved_ts::scanner::ScannerPool<T,E>::spawn_task::{{closure}}\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resolved_ts/src/scanner.rs:96:25\r\n   9: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/future/mod.rs:84:19\r\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\r\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\r\n      tokio::runtime::task::core::CoreStage<T>::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\r\n      tokio::runtime::task::harness::poll_future::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\r\n      std::panicking::try::do_call\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\r\n      std::panicking::try\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\r\n      std::panic::catch_unwind\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\r\n      tokio::runtime::task::harness::poll_future\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\r\n  10: tokio::runtime::task::harness::Harness<T,S>::poll_inner\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\r\n      tokio::runtime::task::harness::Harness<T,S>::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\r\n      tokio::runtime::task::raw::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\r\n  11: tokio::runtime::task::raw::RawTask::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\r\n      tokio::runtime::task::LocalNotified<S>::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:347:9\r\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:425:13\r\n      tokio::coop::with_budget::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:102:9\r\n      std::thread::local::LocalKey<T>::try_with\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/local.rs:413:16\r\n      std::thread::local::LocalKey<T>::with\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/local.rs:389:9\r\n      tokio::coop::with_budget\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:95:5\r\n      tokio::coop::budget\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/coop.rs:72:5\r\n      tokio::runtime::thread_pool::worker::Context::run_task\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:424:9\r\n  12: tokio::runtime::thread_pool::worker::Context::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:391:24\r\n      tokio::runtime::thread_pool::worker::run::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:376:17\r\n      tokio::macros::scoped_tls::ScopedKey<T>::set\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/macros/scoped_tls.rs:61:9\r\n      tokio::runtime::thread_pool::worker::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:373:5\r\n      tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/thread_pool/worker.rs:352:45\r\n      <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/task.rs:42:21\r\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:161:17\r\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/loom/std/unsafe_cell.rs:14:9\r\n      tokio::runtime::task::core::CoreStage<T>::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/core.rs:151:13\r\n      tokio::runtime::task::harness::poll_future::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:467:19\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\r\n      std::panicking::try::do_call\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\r\n      std::panicking::try\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\r\n      std::panic::catch_unwind\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\r\n      tokio::runtime::task::harness::poll_future\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:455:18\r\n      tokio::runtime::task::harness::Harness<T,S>::poll_inner\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:103:27\r\n      tokio::runtime::task::harness::Harness<T,S>::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/harness.rs:57:15\r\n      tokio::runtime::task::raw::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:128:5\r\n  13: tokio::runtime::task::raw::RawTask::poll\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/raw.rs:80:18\r\n      tokio::runtime::task::UnownedTask<S>::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/task/mod.rs:384:9\r\n      tokio::runtime::blocking::pool::Task::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:91:9\r\n      tokio::runtime::blocking::pool::Inner::run\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:308:17\r\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\r\n             at /rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.17.0/src/runtime/blocking/pool.rs:288:17\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys_common/backtrace.rs:122:18\r\n  14: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/mod.rs:498:17\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/panic/unwind_safe.rs:271:9\r\n      std::panicking::try::do_call\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:492:40\r\n      std::panicking::try\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panicking.rs:456:19\r\n      std::panic::catch_unwind\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/panic.rs:137:14\r\n      std::thread::Builder::spawn_unchecked_::{{closure}}\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/thread/mod.rs:497:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/core/src/ops/function.rs:227:5\r\n  15: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1854:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/alloc/src/boxed.rs:1854:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/1e12aef3fab243407f9d71ba9956cb2a1bf105d5/library/std/src/sys/unix/thread.rs:108:17\r\n  16: start_thread\r\n  17: clone\r\n```\r\nfull logs can be accessed [here](http://172.16.4.180:31714/artifacts/testground/plan-exec-662537/plan-exec-662537-1060912316/archive)\r\n",
  "state": "closed",
  "created_at": "2022-03-22T04:23:10Z",
  "updated_at": "2022-06-22T08:55:22Z",
  "closed_at": "2022-03-23T09:30:25Z",
  "labels": [
    "type/bug",
    "severity/major",
    "affects-5.3",
    "affects-5.4",
    "affects-6.0"
  ],
  "comments_data": [
    {
      "id": 1074963452,
      "user": "you06",
      "created_at": "2022-03-22T09:54:43Z",
      "body": "The panic is caused by call `unwrap` on `Err(...)`, @NingLin-P PTAL.\r\nhttps://github.com/tikv/tikv/blob/9a43faf4da20389a4e2c262ee8ab8b369a3bfec4/components/resolved_ts/src/endpoint.rs#L367-L375"
    },
    {
      "id": 1075020477,
      "user": "NingLin-P",
      "created_at": "2022-03-22T10:52:30Z",
      "body": "The scheduler failed to schedule `Task::ReRegisterRegion` because the store is stopping, and likely the `resolved-ts` worker is stopped thus close the channel. From the logs:\r\n```\r\n[2022/03/21 10:00:43.801 +00:00] [INFO] [signal_handler.rs:19] [\"receive signal 15, stopping server...\"]\r\n...\r\n[2022/03/21 10:00:44.100 +00:00] [FATAL] [lib.rs:468] [\"called `Result::unwrap()` on an `Err` value: channel has been closed\"]\r\n```\r\n\r\nPerhaps we should print a warning log instead of `unwrap` when fail to schedule task /cc @5kbpers "
    }
  ]
}