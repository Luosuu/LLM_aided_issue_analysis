{
  "issue_number": 16623,
  "title": "tikv crash or panic",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\nTiKV \r\nRelease Version:   7.1.3\r\nEdition:           Community\r\nGit Commit Hash:   cd2c94fa9ce310d7342e52678e1bf45ac499c649\r\nGit Commit Branch: heads/refs/tags/v7.1.3\r\nUTC Build Time:    2023-12-18 14:55:09\r\nRust Version:      rustc 1.67.0-nightly (96ddd32c4 2022-11-14)\r\nEnable Features:   pprof-fp jemalloc mem-profiling portable sse test-engine-kv-rocksdb test-engine-raft-raft-engine cloud-aws cloud-gcp cloud-azure\r\nProfile:           dist_release\r\n\r\n### What operating system and CPU are you using?\r\nprocessor       : 15\r\nvendor_id       : AuthenticAMD\r\ncpu family      : 23\r\nmodel           : 49\r\nmodel name      : AMD EPYC 7K62 48-Core Processor\r\nstepping        : 0\r\nmicrocode       : 0x1000065\r\ncpu MHz         : 2595.124\r\ncache size      : 512 KB\r\nphysical id     : 0\r\nsiblings        : 16\r\ncore id         : 27\r\ncpu cores       : 16\r\napicid          : 15\r\ninitial apicid  : 15\r\nfpu             : yes\r\nfpu_exception   : yes\r\ncpuid level     : 13\r\nwp              : yes\r\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm rep_good nopl cpuid extd_apicid amd_dcm tsc_known_freq pni pclmulqdq ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw topoext ibpb vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt sha_ni xsaveopt xsavec xgetbv1 arat\r\nbugs            : fxsave_leak sysret_ss_attrs spectre_v1 spectre_v2 spec_store_bypass\r\nbogomips        : 5190.24\r\nTLB size        : 1024 4K pages\r\nclflush size    : 64\r\ncache_alignment : 64\r\naddress sizes   : 48 bits physical, 48 bits virtual\r\npower management:\r\n\r\n### Steps to reproduce\r\nI don't know how to reproduce .\r\n\r\n### What did you expect?\r\nhow to fix it or how to make tikv to work normally，not to be crash .\r\n### What did happened?\r\nI am not sure how to it happened .\r\nthere are error logs about tikv when it crashed.\r\n`[2024/03/07 17:59:29.043 +08:00] [ERROR] [time.rs:374] [\"monotonic time jumped back, 1581214.068 -> 1581214.057\"]\r\n[2024/03/07 17:59:29.043 +08:00] [ERROR] [time.rs:374] [\"monotonic time jumped back, 1581214.068 -> 1581214.057\"]\r\n[2024/03/07 17:59:29.045 +08:00] [FATAL] [lib.rs:510] [\"elapsed=56976988; when=56976976\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:509:18\\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2032:9\\n      std::panicking::rust_panic_with_hook\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:692:13\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:579:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:137:18\\n   4: rust_begin_unwind\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:575:5\\n   5: core::panicking::panic_fmt\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:65:14\\n   6: tokio_timer::wheel::Wheel<T>::poll\\n   7: tokio_timer::timer::Timer<T,N>::process\\n             at rust/git/checkouts/tokio-8e927faba632ed16/4394380/tokio-timer/src/timer/mod.rs:272:33\\n      <tokio_timer::timer::Timer<T,N> as tokio_executor::park::Park>::park\\n             at rust/git/checkouts/tokio-8e927faba632ed16/4394380/tokio-timer/src/timer/mod.rs:379:9\\n      tokio_timer::timer::Timer<T,N>::turn\\n             at rust/git/checkouts/tokio-8e927faba632ed16/4394380/tokio-timer/src/timer/mod.rs:256:21\\n   8: tikv_util::timer::start_global_steady_timer::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/timer.rs:209:17\\n      <std::thread::Builder as tikv_util::sys::thread::StdThreadBuildWrapper>::spawn_wrapper::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/sys/thread.rs:427:23\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18\\n   9: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:551:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40\\n      std::panicking::try\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19\\n      std::panic::catch_unwind\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:550:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:513:5\\n  10: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\\n  11: start_thread\\n  12: __GI___clone3\\n\"] [location=/rust/git/checkouts/tokio-8e927faba632ed16/4394380/tokio-timer/src/wheel/mod.rs:225] [thread_name=steady-timer]`",
  "state": "open",
  "created_at": "2024-03-11T05:53:32Z",
  "updated_at": "2024-03-12T11:56:01Z",
  "closed_at": null,
  "labels": [
    "type/bug"
  ],
  "comments_data": [
    {
      "id": 1991147484,
      "user": "overvenus",
      "created_at": "2024-03-12T09:27:04Z",
      "body": "The panic indicates a regression in the monotonic clock, which could potentially cause issues for TiKV features that rely on this type of clock.\r\n\r\nThis problem may be caused by hardware or environmental factors; for instance, we have previously observed similar panics in a cluster running on virtual machines. To help us investigate this issue further, could you kindly upload the dmesg of this machine? Thank you.\r\n"
    },
    {
      "id": 1991482806,
      "user": "fvhan",
      "created_at": "2024-03-12T11:56:00Z",
      "body": "> The panic indicates a regression in the monotonic clock, which could potentially cause issues for TiKV features that rely on this type of clock.\r\n> \r\n> This problem may be caused by hardware or environmental factors; for instance, we have previously observed similar panics in a cluster running on virtual machines. To help us investigate this issue further, could you kindly upload the dmesg of this machine? Thank you.\r\n\r\nI'm sorry to tell you，my tikv cluster is deployed in k8s using tidb operator ,the k8s's worker nodes are made up of Tencent super nodes . so I can't get the dmesg of the tikv pod.\r\nDo I need to deploy in a k8s cluster of virtual machines? or can I upload another important information which I can get about this issue ? now I don't know how to find more information about this issue for you to solve it  . thank you !"
    }
  ]
}