{
  "issue_number": 11852,
  "title": "Got unexpected panic during tipocket ledger test",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\nmaster (628937ab656df118b822196f407d837b4599c848)\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\nkubernetes\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\nrun tipocket ledger test.\r\n\r\n### What did you expect?\r\ntikv-server shouldn't panic during the test.\r\n\r\n### What did happened?\r\n\r\ngot unexpected panic from raftstore, the full log can be accessed [here](http://172.16.4.180:31714/artifacts-by-uid/c869dd64-ab43-49fb-a582-f6c8853508f6/tipocket-ledger-tiflash1-1641700800/output).\r\n```\r\n   0: tikv_util::set_panic_hook::{{closure}}\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:464:18\r\n   1: std::panicking::rust_panic_with_hook\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:626:17\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:517:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:141:18\r\n   4: rust_begin_unwind\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:515:5\r\n   5: core::panicking::panic_fmt\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/panicking.rs:92:14\r\n   6: core::panicking::panic\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/panicking.rs:50:5\r\n   7: core::option::Option<T>::unwrap\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/option.rs:722:21\r\n      raftstore::store::peer::Peer<EK,ER>::post_apply\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/peer.rs:2715:26\r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_apply_res\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:1432:39\r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:598:21\r\n   8: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:790:9\r\n   9: batch_system::batch::Poller<N,C,Handler>::poll\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:446:27\r\n  10: batch_system::batch::BatchSystem<N,C>::start_poller::{{closure}}\r\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:572:17\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:125:18\r\n  11: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:476:17\r\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:347:9\r\n      std::panicking::try::do_call\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:401:40\r\n      std::panicking::try\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:365:19\r\n      std::panic::catch_unwind\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:434:14\r\n      std::thread::Builder::spawn_unchecked::{{closure}}\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:475:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/ops/function.rs:227:5\r\n  12: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys/unix/thread.rs:91:17\r\n  13: <unknown>\r\n  14: clone\r\n```\r\n",
  "state": "closed",
  "created_at": "2022-01-12T11:00:05Z",
  "updated_at": "2022-01-20T10:55:47Z",
  "closed_at": "2022-01-20T10:55:47Z",
  "labels": [
    "type/bug",
    "sig/raft",
    "severity/major"
  ],
  "comments_data": [
    {
      "id": 1012000968,
      "user": "NingLin-P",
      "created_at": "2022-01-13T10:28:23Z",
      "body": "The test is panic because `ReadDelegate` can't be found in `StoreMeta` in L2716: \r\nhttps://github.com/tikv/tikv/blob/2c9f5fda36ca2be3f932ac3f4f41bce79d68dec5/components/raftstore/src/store/peer.rs#L2709-L2718\r\n\r\n`ReadDelegate` is only removed from `StoreMeta` in a few places, and only the log of `on_ready_commit_merge` are printed lately:\r\n\r\n```\r\n[2022/01/09 12:40:00.570 +00:00] [INFO] [apply.rs:1387] [\"execute admin command\"] [command=\"cmd_type: PrepareMerge prepare_merge { min_index: 150 target { id: 17034 start_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF0000065DB8000000FC end_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF000049FD64000000FC region_epoch { conf_ver: 5 version: 1564 } peers { id: 17035 store_id: 1 } peers { id: 17036 store_id: 5 } peers { id: 17037 store_id: 6 } } }\"] [index=150] [term=144] [peer_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.688 +00:00] [INFO] [raft.rs:2304] [\"[term 144] received MsgTimeoutNow from 17044 and starts an election to get leadership.\"] [from=17044] [term=144] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.688 +00:00] [INFO] [raft.rs:1517] [\"starting a new election\"] [term=144] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.688 +00:00] [INFO] [raft.rs:1116] [\"became candidate at term 145\"] [term=145] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.688 +00:00] [INFO] [raft.rs:1271] [\"broadcasting vote request\"] [to=\"[17044, 17043]\"] [log_index=150] [log_term=144] [term=145] [type=MsgRequestVote] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.778 +00:00] [INFO] [raft.rs:2175] [\"received votes response\"] [term=145] [type=MsgRequestVoteResponse] [approvals=2] [rejections=0] [from=17044] [vote=true] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.778 +00:00] [INFO] [raft.rs:1200] [\"became leader at term 145\"] [term=145] [raft_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.778 +00:00] [INFO] [peer.rs:4397] [\"require updating max ts\"] [initial_status=622770261050] [region_id=17042]\r\n[2022/01/09 12:40:00.804 +00:00] [INFO] [pd.rs:1426] [\"succeed to update max timestamp\"] [region_id=17042]\r\n[2022/01/09 12:40:00.887 +00:00] [INFO] [apply.rs:2495] [\"asking delegate to stop\"] [source_region_id=17042] [peer_id=17037] [region_id=17034]\r\n[2022/01/09 12:40:00.972 +00:00] [INFO] [apply.rs:3431] [\"source logs are all applied now\"] [peer_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.972 +00:00] [INFO] [apply.rs:3357] [\"remove delegate from apply delegates\"] [peer_id=17045] [region_id=17042]\r\n[2022/01/09 12:40:00.972 +00:00] [INFO] [router.rs:306] [\"[region 17042] shutdown mailbox\"]\r\n[2022/01/09 12:40:00.972 +00:00] [INFO] [apply.rs:2517] [\"execute CommitMerge\"] [source_region=\"id: 17042 start_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF000049FD64000000FC end_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF000098DC37000000FC region_epoch { conf_ver: 6 version: 1565 } peers { id: 17043 store_id: 1 } peers { id: 17044 store_id: 5 } peers { id: 17045 store_id: 6 }\"] [index=159] [term=154] [entries=1] [commit=150] [peer_id=17037] [region_id=17034]\r\n[2022/01/09 12:40:00.978 +00:00] [INFO] [util.rs:1157] [\"reset safe_ts due to merge\"] [safe_ts=430370188544704523] [target_safe_ts=430370192581984259] [source_safe_ts=430370188544704523] [tag=\"[region 17034] 17037\"]\r\n[2022/01/09 12:40:00.978 +00:00] [INFO] [peer.rs:4397] [\"require updating max ts\"] [initial_status=661424966716] [region_id=17034]\r\n[2022/01/09 12:40:00.978 +00:00] [WARN] [endpoint.rs:315] [\"try register unexit region\"] [region=\"id: 17042 start_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF000049FD64000000FC end_key: 7480000000000000FF3F5F698000000000FF0000020003800000FF000098DC37000000FC region_epoch { conf_ver: 6 version: 1565 } peers { id: 17043 store_id: 1 } peers { id: 17044 store_id: 5 } peers { id: 17045 store_id: 6 }\"]\r\n[2022/01/09 12:40:00.979 +00:00] [INFO] [pd.rs:1426] [\"succeed to update max timestamp\"] [region_id=17034]\r\n[2022/01/09 12:40:01.554 +00:00] [FATAL] [lib.rs:465] [\"called `Option::unwrap()` on a `None` value\"] [backtrace=...] [location=/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/peer.rs:2715] [thread_name=raftstore-6-1]\r\n```\r\n\r\nInside `on_ready_commit_merge `:\r\nhttps://github.com/tikv/tikv/blob/8d8be78a632b074555e0d0567b727065f015fcc5/components/raftstore/src/store/fsm/peer.rs#L3353-L3368\r\n\r\nThe timeline of this bug may likely be:\r\n 1. the source peer execute `PrepareMerge`\r\n 2. the source peer become leader, thus proposing a noop entry and may along with other entries (the epoch checker won't work before applied on current term)\r\n 3. the source peer send `LogsUpToDate` to apply thread, which will flush all `apply_res` to store thread, destroy itself, then wake up the target peer to continue executing `CommitMerge`\r\n 4. the target peer handle the `apply_res` of `CommitMerge`, thus removing the source peer's `ReadDelegate`\r\n 5. the source peer may be stuck for some reason, and until then handle the `apply_res`, thus found it just applied on its current term and panic because can't find `ReadDelegate`\r\n"
    },
    {
      "id": 1012017956,
      "user": "NingLin-P",
      "created_at": "2022-01-13T10:48:56Z",
      "body": "/cc @BusyJay @gengliqi "
    },
    {
      "id": 1012059082,
      "user": "BusyJay",
      "created_at": "2022-01-13T11:41:56Z",
      "body": "How about ignoring updates and printing a log if the read delegate is `None` and it's in preparing merge state?"
    },
    {
      "id": 1012066813,
      "user": "NingLin-P",
      "created_at": "2022-01-13T11:53:26Z",
      "body": "> How about ignoring updates and printing a log if the read delegate is `None` and it's in preparing merge state?\r\n\r\nActually, there are other places expect `ReadDelegate` not to be `None` too:\r\nhttps://github.com/tikv/tikv/blob/adfbc8dd64da6a0defdd038cfa851d43a583b15a/components/raftstore/src/store/peer.rs#L2767\r\nhttps://github.com/tikv/tikv/blob/adfbc8dd64da6a0defdd038cfa851d43a583b15a/components/raftstore/src/store/peer.rs#L2772\r\nhttps://github.com/tikv/tikv/blob/adfbc8dd64da6a0defdd038cfa851d43a583b15a/components/raftstore/src/store/fsm/store.rs#L166\r\n"
    },
    {
      "id": 1012089615,
      "user": "BusyJay",
      "created_at": "2022-01-13T12:24:27Z",
      "body": "The first two places is to update lease lease, but the source peer is in merging state, so these two lines can't be executed. When becoming preparing merge, it can't execute any commands that change regions until rollback. So the third line can't be executed either."
    },
    {
      "id": 1012135086,
      "user": "NingLin-P",
      "created_at": "2022-01-13T13:26:40Z",
      "body": "> The first two places is to update lease lease, but the source peer is in merging state, so these two lines can't be executed. When becoming preparing merge, it can't execute any commands that change regions until rollback. So the third line can't be executed either.\r\n\r\nThe first place is possible to reach as it just updates the delegate's term, the third place is also possible through `on_update_region_for_unsafe_recover`.\r\n\r\nPerhaps we should not let a peer remove *other* peer's `ReadDelegate` instead, as people usually expect the `ReadDelegate` will be alive as long as the peer is alive.\r\n\r\nBesides `destroy_peer`, there are other two places `on_ready_commit_merge` and `on_ready_persist_snapshot` that may remove other peer's `ReadDelegate`. And both of them are try to remove the source peer's `ReadDelegate`, but the source peer is already forbidden to serve read after the `PrepareMerge` raft  log is committed (see `on_leader_commit_idx_changed`).\r\n\r\nFor robustness, we could also replace `meta.readers.remove(id)` with something like `meta.readers.get(id).set_pending_remove_flag`, since the local reader is the only place using `ReadDelegate` to serve read, we can treat delegate with `pending_remove_flag` as nonexist.\r\n\r\n\r\n"
    },
    {
      "id": 1012144737,
      "user": "BusyJay",
      "created_at": "2022-01-13T13:38:27Z",
      "body": "> The first place is possible to reach as it just updates the delegate's term\r\n\r\nHow can it pass the following check?\r\n\r\nhttps://github.com/tikv/tikv/blob/adfbc8dd64da6a0defdd038cfa851d43a583b15a/components/raftstore/src/store/peer.rs#L2748-L2758\r\n\r\n> ...replace meta.readers.remove(id) with something like meta.readers.get(id).set_pending_remove_flag..\r\n\r\nA concrete flag lgtm."
    },
    {
      "id": 1012173023,
      "user": "NingLin-P",
      "created_at": "2022-01-13T14:12:18Z",
      "body": "> How can it pass the following check?\r\n\r\nhttps://github.com/tikv/tikv/blob/b9c99282fc33a54d6c21fff9bd235d742e75ed5e/components/raftstore/src/store/peer.rs#L2771-L2780\r\n\r\nThere are `progress` and `read_progress` where `progress` is a parameter"
    }
  ]
}