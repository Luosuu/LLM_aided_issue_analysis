{
  "issue_number": 15739,
  "title": "TiKV panic due to catch up logs during ebs restore",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\nTiKV panic with following backtrace\r\n\r\n<details><summary> [lib.rs:509] [\"unstable.slice[28051, 28055] out of bound[28051, 28051], raft_id: 2010234007, region_id: 2010234004\"] </summary>\r\n<p>\r\n\r\n```\r\n[lib.rs:509] [\"unstable.slice[28051, 28055] out of bound[28051, 28051], raft_id: 2010234007, region_id: 2010234004\"] [backtrace=\"\r\n   0: tikv_util::set_panic_hook::{{closure}}\r\n             at tikv/components/tikv_util/src/lib.rs:508:18\r\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2032:9\r\n      std::panicking::rust_panic_with_hook\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:692:13\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:579:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:137:18\r\n   4: rust_begin_unwind\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:575:5\r\n   5: core::panicking::panic_fmt\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:65:14\r\n   6: raft::log_unstable::Unstable::must_check_outofbounds\r\n             at root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:201:13\r\n   7: raft::log_unstable::Unstable::truncate_and_append\r\n             at root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:169:13\r\n   8: raft::raft_log::RaftLog<T>::append\r\n             at root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/raft_log.rs:377:9\r\n   9: raft::raft_log::RaftLog<T>::maybe_append\r\n             at root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/raft_log.rs:268:17\r\n  10: raftstore::store::peer::Peer<EK,ER>::maybe_append_merge_entries\r\n             at tikv/components/raftstore/src/store/peer.rs:1369:9\r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_catch_up_logs_for_merge\r\n             at tikv/components/raftstore/src/store/fsm/peer.rs:4466:15\r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_significant_msg\r\n             at tikv/components/raftstore/src/store/fsm/peer.rs:1403:17\r\n  11: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\r\n             at tikv/components/raftstore/src/store/fsm/peer.rs:666:49\r\n  12: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\r\n             at tikv/components/raftstore/src/store/fsm/store.rs:971:9\r\n  13: batch_system::batch::Poller<N,C,Handler>::poll\r\n             at tikv/components/batch-system/src/batch.rs:430:27\r\n  14: batch_system::batch::BatchSystem<N,C>::start_poller::{{closure}}\r\n             at tikv/components/batch-system/src/batch.rs:600:17\r\n      <std::thread::Builder as tikv_util::sys::thread::StdThreadBuildWrapper>::spawn_wrapper::{{closure}}\r\n             at tikv/components/tikv_util/src/sys/thread.rs:415:23\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18\r\n  15: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:551:17\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\r\n      std::panicking::try::do_call\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40\r\n      std::panicking::try\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19\r\n      std::panic::catch_unwind\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\r\n      std::thread::Builder::spawn_unchecked_::{{closure}}\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:550:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:513:5\r\n  16: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at root/.rustup/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\r\n  17: start_thread\r\n  18: __clone3\"] [location=/root/.cargo/git/checkouts/raft-rs-42b8049ef2e3af07/2357cb2/src/log_unstable.rs:201] [thread_name=raftstore-1942158-0]\r\n\r\n```\r\n\r\n</p>\r\n</details> \r\n\r\n\r\nThe panic is caused by ebs backup breaks region merge assumption: when proposing commit merge, all source peers must have raft log that is large than or equal to prepare merge min index. But in ebs backup, the snapshot of panic tikv is taken before merge (does not have enough raft logs), and the snapshot of other tikvs is taken after merge. So the target region leader sends CommitMerge raft log to panic tikv, but the source region leader doesn't send the following raft log (because it is merged), which causes the source region panic when handling CatchUpLogs from target region.\r\n\r\n\r\nCc #13554 which has the same panic backtrace but without ebs.\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\n\r\nv6.5.4\r\n\r\n### What did you expect?\r\n\r\nNo panic.\r\n\r\n### What did happened?\r\n\r\nPanic.",
  "state": "closed",
  "created_at": "2023-10-10T03:15:59Z",
  "updated_at": "2024-01-10T06:18:25Z",
  "closed_at": "2024-01-10T06:18:25Z",
  "labels": [
    "type/bug",
    "component/backup-restore",
    "severity/major",
    "affects-6.5",
    "affects-6.6",
    "affects-7.0",
    "affects-7.1",
    "affects-7.2",
    "affects-7.3",
    "affects-7.4",
    "affects-7.5"
  ],
  "comments_data": [
    {
      "id": 1754658816,
      "user": "BornChanger",
      "created_at": "2023-10-10T08:13:29Z",
      "body": "/assign @YuJuncen "
    },
    {
      "id": 1754659558,
      "user": "BornChanger",
      "created_at": "2023-10-10T08:13:49Z",
      "body": "/severity major"
    }
  ]
}