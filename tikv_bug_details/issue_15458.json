{
  "issue_number": 15458,
  "title": "Resolver memory is not reclaimed and may cause OOM",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\nhttps://github.com/tikv/tikv/blob/e5efbe697455bd7814c6979df06a8ccf0189909a/components/resolved_ts/src/resolver.rs#L19-L26\r\n\r\nTiKV does not reclaim the hashmap in resolver even after all locks are removed.\r\nAs a result, memory accumulates over time and may cause OOM, especially for bulk\r\ndelete/insert/update workloads that cover many regions. \r\n\r\nBesides the resolver case, we should check all collection type (eg, hashmap and vec)\r\nusage in TiKV code base, make sure they are reclaimed in time.\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\n\r\n\\> v4.0.0\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\n\r\nLoad a table with many rows, and update all rows in one transaction. \r\n\r\n### What did you expect?\r\n\r\nMemory usage before and after the transaction should be the same.\r\n\r\n### What did happened?\r\n\r\nMemory usage increases.\r\n",
  "state": "closed",
  "created_at": "2023-08-29T02:47:55Z",
  "updated_at": "2023-09-01T02:29:11Z",
  "closed_at": "2023-09-01T02:29:11Z",
  "labels": [
    "type/bug",
    "severity/major",
    "affects-4.0",
    "affects-5.0",
    "affects-5.1",
    "affects-5.2",
    "affects-5.3",
    "affects-5.4",
    "affects-6.0",
    "affects-6.1",
    "affects-6.2",
    "affects-6.3",
    "affects-6.4",
    "affects-6.5",
    "affects-6.6",
    "affects-7.0",
    "affects-7.1",
    "affects-7.2",
    "affects-7.3"
  ],
  "comments_data": [
    {
      "id": 1696692516,
      "user": "tonyxuqqi",
      "created_at": "2023-08-29T02:53:54Z",
      "body": "Is it because HashMap is not shrunk after the size is reduced a lot?"
    },
    {
      "id": 1696739062,
      "user": "overvenus",
      "created_at": "2023-08-29T04:14:32Z",
      "body": "> Is it because HashMap is not shrunk after the size is reduced a lot?\r\n\r\nExactly."
    }
  ]
}