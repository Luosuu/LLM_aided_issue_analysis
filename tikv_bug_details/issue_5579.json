{
  "issue_number": 5579,
  "title": "test pd::tests::test_collect_stats failed ",
  "body": "## Bug Report\r\n\r\n```\r\nthread 'raftstore::store::worker::pd::tests::test_collect_stats' panicked at 'assertion failed: total_cpu_usages > 90', src/raftstore/store/worker/pd.rs:1106:9\r\nstack backtrace:\r\n   0: std::panicking::default_hook::{{closure}}\r\n   1: std::panicking::default_hook\r\n   2: panic_hook::track_hook::{{closure}}\r\n   3: core::num::<impl usize>::overflowing_mul\r\n   4: core::num::<impl usize>::overflowing_mul\r\n   5: panic_hook::track_hook\r\n   6: core::ops::function::Fn::call\r\n   7: <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get\r\n   8: aho_corasick::packed::teddy::runtime::Teddy::verify_bucket::match_from_span\r\n   9: tikv::raftstore::store::worker::pd::tests::test_collect_stats\r\n             at src/raftstore/store/worker/pd.rs:1106\r\n  10: tikv::raftstore::store::worker::pd::tests::test_collect_stats::{{closure}}\r\n             at src/raftstore/store/worker/pd.rs:1092\r\n  11: core::ops::function::FnOnce::call_once\r\n             at /rustc/c6e9c76c59e3c10acd63ca9ec157a8894ea1a068/src/libcore/ops/function.rs:227\r\n  12: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n             at /rustc/c6e9c76c59e3c10acd63ca9ec157a8894ea1a068/src/liballoc/boxed.rs:922\r\n  13: panic_unwind::dwarf::eh::read_encoded_pointer\r\n  14: std::panicking::try\r\n             at /rustc/c6e9c76c59e3c10acd63ca9ec157a8894ea1a068/src/libstd/panicking.rs:275\r\n  15: std::panic::catch_unwind\r\n             at /rustc/c6e9c76c59e3c10acd63ca9ec157a8894ea1a068/src/libstd/panic.rs:394\r\n  16: test::run_test::run_test_inner::{{closure}}\r\n             at src/libtest/lib.rs:1413\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```",
  "state": "closed",
  "created_at": "2019-10-06T12:09:48Z",
  "updated_at": "2020-11-12T05:29:00Z",
  "closed_at": "2020-11-12T05:29:00Z",
  "labels": [
    "type/bug",
    "component/pd-client",
    "priority/low",
    "severity/major"
  ],
  "comments_data": [
    {
      "id": 539294756,
      "user": "nolouch",
      "created_at": "2019-10-08T03:12:33Z",
      "body": "@lhy1024 Can you take a look?"
    },
    {
      "id": 539452675,
      "user": "lhy1024",
      "created_at": "2019-10-08T10:29:22Z",
      "body": "I am very sorry that I didn't find the panic after 2000 times tests by a script. It is difficult to recurrent. \r\nIn theory, It is valid to read `total_cpu_usages` from proc file, and the interval is sufficient to obtain the information. \r\nDo we have more info about the panic?"
    },
    {
      "id": 725213733,
      "user": "MyonKeminta",
      "created_at": "2020-11-11T05:45:00Z",
      "body": "It may easily fail when CPU resource is not enough. For example, I tries to run it in a 1 core VM, while running the shell command `while true; do :; done` in another terminal, then I always got:\r\n```\r\n$ ./raftstore-9068f28701cac9b7  test_collect_stats\r\n\r\nrunning 1 test\r\ntest store::worker::pd::tests::test_collect_stats ... FAILED\r\n\r\nfailures:\r\n\r\n---- store::worker::pd::tests::test_collect_stats stdout ----\r\nthread 'main' panicked at 'expect cpu usage > 90, got 49', components/raftstore/src/store/worker/pd.rs:1408:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n\r\nfailures:\r\n    store::worker::pd::tests::test_collect_stats\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 123 filtered out\r\n```\r\n\r\nI think this is the problem. @lhy1024 \r\n...and I'm not sure if it's really a problem."
    },
    {
      "id": 725214799,
      "user": "MyonKeminta",
      "created_at": "2020-11-11T05:48:08Z",
      "body": "I think if it rarely or never happens in our CI environment, we can just ignore it. I can't come out with any idea to make this test more stable, except to make sure there's enough CPU in CI environment."
    }
  ]
}