{
  "issue_number": 12825,
  "title": "raftstore: tikv panicked due to trying to recover a delayed destroy",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\nmaster\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\nkubernetes\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\nrun jepsen monotonic workload\r\n```\r\nTest options:\r\n{:auto-retry-limit :default,\r\n :ssh-private-key \"jepsen.pem\",\r\n :isolation :repeatable-read,\r\n :concurrency 15,\r\n :predicate-read false,\r\n :tarball-url\r\n \"http://minio.pingcap.net:9000/tp-team/tests/jepsen/tidb-master-failpoint.tar.gz\",\r\n :txn-mode \"optimistic\",\r\n :force-reinstall true,\r\n :update-in-place false,\r\n :ssh\r\n {:username \"root\",\r\n  :password \"root\",\r\n  :strict-host-key-checking false,\r\n  :private-key-path \"jepsen.pem\"},\r\n :nemesis-long-recovery false,\r\n :follower-read false,\r\n :nemesis\r\n {:interval 10,\r\n  :failpoints\r\n  ([\"tidb\" \"tikvclient/twoPCRequestBatchSizeLimit\" \"50%return\"]\r\n   [\"tidb\" \"tikvclient/commitFailedSkipCleanup\" \"50%return\"]\r\n   [\"tidb\" \"tikvclient/rpcFailOnRecv\" \"2%return\"]\r\n   [\"tidb\" \"tikvclient/beforeCommit\" \"2%return(\\\"delay\\\")\"]\r\n   [\"tidb\" \"tikvclient/prewritePrimaryFail\" \"1%return\"]\r\n   [\"tikv\" \"delay_update_max_ts\" \"10%return\"]),\r\n  :failpoint true},\r\n :nodes\r\n [\"node-0.node-peer.jepsen-tps-844741-1-481\"\r\n  \"node-1.node-peer.jepsen-tps-844741-1-481\"\r\n  \"node-2.node-peer.jepsen-tps-844741-1-481\"\r\n  \"node-3.node-peer.jepsen-tps-844741-1-481\"\r\n  \"node-4.node-peer.jepsen-tps-844741-1-481\"],\r\n :test-count 1,\r\n :read-lock nil,\r\n :use-index true,\r\n :os #object[tidb.core.Image 0x8e99809 \"tidb.core.Image@8e99809\"],\r\n :time-limit 300,\r\n :recovery-time 10,\r\n :version \"master\",\r\n :auto-retry :default,\r\n :workload :monotonic,\r\n :init-txn-sql nil,\r\n :init-sql\r\n (\"set @@tidb_enable_mutation_checker=1, @@tidb_txn_assertion_level=strict\")}\r\n```\r\n\r\n### What did you expect?\r\n\r\nNo panic\r\n\r\n### What did happened?\r\n\r\n```\r\n[2022/06/08 20:54:04.957 +00:00] [FATAL] [lib.rs:491] [\"[region 16004] 16008 a delayed destroy should not recover\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:490:18\\n   1: std::panicking::rust_panic_with_hook\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:702:17\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:588:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:138:18\\n   4: rust_begin_unwind\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:584:5\\n   5: core::panicking::panic_fmt\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:143:14\\n   6: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_raft_log_gc_flushed\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3191:21\\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_significant_msg\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:1287:17\\n   7: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:661:49\\n   8: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:894:9\\n   9: batch_system::batch::Poller<N,C,Handler>::poll\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:461:27\\n  10: batch_system::batch::BatchSystem<N,C>::start_poller::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:587:17\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:122:18\\n  11: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:498:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:492:40\\n      std::panicking::try\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:456:19\\n      std::panic::catch_unwind\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:497:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:227:5\\n  12: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1854:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1854:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\\n  13: start_thread\\n  14: clone\\n\"] [location=/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3191] [thread_name=raftstore-6-1]\r\n   0: tikv_util::set_panic_hook::{{closure}}\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:490:18\r\n   1: std::panicking::rust_panic_with_hook\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:702:17\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:588:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:138:18\r\n   4: rust_begin_unwind\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:584:5\r\n   5: core::panicking::panic_fmt\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:143:14\r\n   6: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_raft_log_gc_flushed\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3191:21\r\n      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_significant_msg\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:1287:17\r\n   7: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:661:49\r\n   8: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:894:9\r\n   9: batch_system::batch::Poller<N,C,Handler>::poll\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:461:27\r\n  10: batch_system::batch::BatchSystem<N,C>::start_poller::{{closure}}\r\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/batch-system/src/batch.rs:587:17\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:122:18\r\n  11: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:498:17\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\r\n      std::panicking::try::do_call\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:492:40\r\n      std::panicking::try\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:456:19\r\n      std::panic::catch_unwind\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\r\n      std::thread::Builder::spawn_unchecked_::{{closure}}\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:497:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:227:5\r\n  12: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1854:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1854:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\r\n  13: start_thread\r\n  14: clone\r\n```\r\n\r\n[here](http://minio.pingcap.net:9000/test-infra/2022-06-08/plan-exec-844741/plan-exec-844741-1184710951/archive.tgz) is the full log.\r\n",
  "state": "closed",
  "created_at": "2022-06-15T07:30:29Z",
  "updated_at": "2022-06-20T17:21:57Z",
  "closed_at": "2022-06-20T17:08:37Z",
  "labels": [
    "type/bug",
    "sig/raft",
    "severity/major",
    "affects-5.1",
    "affects-5.2",
    "affects-5.3",
    "affects-5.4",
    "affects-6.0",
    "affects-6.1"
  ],
  "comments_data": [
    {
      "id": 1159812444,
      "user": "BusyJay",
      "created_at": "2022-06-19T21:19:25Z",
      "body": "The panic is caused by an uninitialized peer is being destroyed and split at the same time. When being destroyed, a peer will flush its logs gc task asynchronously first. If the peer is replaced by split, then the response of flushing will be send to a wrong peer, hence cause panic.\r\n\r\nAs there is nothing to be deleted by an uninitialized peer, it's pointless to schedule the task."
    }
  ]
}