{
  "issue_number": 15253,
  "title": "[Dynamic Regions]tikv panic for \"assertion failed: `(left != right)`\\n  left: `51`,\\n right: `51`: id: 1376 start_key\"",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n[2023/07/30 07:33:57.265 +00:00] [INFO] [lib.rs:93] [\"Git Commit Hash:   42882f8bcf4ce52ea93f93d325c000147ac2e137\"]\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\n\r\n### Steps to reproduce\r\njepsen-monotonic-mixed test\r\n\"Establishes a collection of integers identified by keys. Monotonically\r\n  increments individual keys via read-write transactions, and reads keys in\r\n  small groups. We verify that the order of transactions implied by each key\r\n  are mutually consistent; e.g. no transaction can observe key x increase, but\r\n  key y decrease.\"\r\n\r\n### What did you expect?\r\ncase pass\r\n### What did happened?\r\n```\r\n[2023/07/30 07:35:34.281 +00:00] [FATAL] [lib.rs:510] [\"assertion failed: `(left != right)`\\n  left: `51`,\\n right: `51`: id: 1376 start_key: 7480000000000000FF105F698000000000FF0000010162696E6CFF6F675F63FF686563FF6B73756D00FE0000FD end_key: 7480000000000000FF105F698000000000FF0000010162696E6CFF6F675F6DFF61785FFF666C757368FF5F71FF756575655F74FF69FF6D650000000000FAFF0000000000000000F7 region_epoch { conf_ver: 18 version: 51 } peers { id: 1377 store_id: 2 } peers { id: 1378 store_id: 6 } peers { id: 1379 store_id: 7 } peers { id: 2316 store_id: 1 role: Learner } vs id: 1786 start_key: 7480000000000000FF105F698000000000FF0000010162696E6CFF6F675F63FF686563FF6B73756D00FE0000FD end_key: 7480000000000000FF105F698000000000FF0000010162696E6CFF6F675F66FF6F726DFF6174000000FC0000FD region_epoch { conf_ver: 18 version: 51 } peers { id: 1787 store_id: 2 } peers { id: 1788 store_id: 6 } peers { id: 1789 store_id: 7 }\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:509:18\\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2032:9\\n      std::panicking::rust_panic_with_hook\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:692:13\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:579:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:137:18\\n   4: rust_begin_unwind\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:575:5\\n   5: core::panicking::panic_fmt\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:65:14\\n   6: core::panicking::assert_failed_inner\\n   7: core::panicking::assert_failed\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:201:5\\n   8: raftstore::coprocessor::region_info_accessor::RegionCollector::check_region_range\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/coprocessor/region_info_accessor.rs:446:13\\n      raftstore::coprocessor::region_info_accessor::RegionCollector::handle_raftstore_event\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/coprocessor/region_info_accessor.rs:521:17\\n      <raftstore::coprocessor::region_info_accessor::RegionCollector as tikv_util::worker::pool::Runnable>::run\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/raftstore/src/coprocessor/region_info_accessor.rs:556:17\\n   9: tikv_util::worker::pool::Worker::start_with_timer_impl::{{closure}}\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/worker/pool.rs:502:25\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n      yatp::task::future::RawTask<F>::poll\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:59:9\\n  10: yatp::task::future::TaskCell::poll\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:103:9\\n      <yatp::task::future::Runner as yatp::pool::runner::Runner>::handle\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:387:20\\n  11: <tikv_util::yatp_pool::YatpPoolRunner<T> as yatp::pool::runner::Runner>::handle\\n             at /home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/yatp_pool/mod.rs:196:24\\n      yatp::pool::worker::WorkerThread<T,R>::run\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/pool/worker.rs:48:13\\n      yatp::pool::builder::LazyBuilder<T>::build::{{closure}}\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/pool/builder.rs:114:25\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18\\n  12: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:551:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40\\n      std::panicking::try\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19\\n      std::panic::catch_unwind\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:550:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:513:5\\n  13: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at /rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\\n  14: start_thread\\n  15: clone\\n\"] [location=components/raftstore/src/coprocessor/region_info_accessor.rs:446] [thread_name=region-collector-worker-0]\r\n\r\n```",
  "state": "closed",
  "created_at": "2023-08-01T02:48:10Z",
  "updated_at": "2023-09-08T09:00:16Z",
  "closed_at": "2023-09-08T09:00:16Z",
  "labels": [
    "type/bug",
    "severity/major",
    "jepsen"
  ],
  "comments_data": [
    {
      "id": 1659483273,
      "user": "seiya-annie",
      "created_at": "2023-08-01T02:48:32Z",
      "body": "[kv.log](https://github.com/tikv/tikv/files/12224003/kv.log)\r\n"
    },
    {
      "id": 1659483489,
      "user": "seiya-annie",
      "created_at": "2023-08-01T02:48:51Z",
      "body": "/severity major"
    },
    {
      "id": 1711326947,
      "user": "seiya-annie",
      "created_at": "2023-09-08T09:00:09Z",
      "body": "this issue does not occur again in master"
    }
  ]
}