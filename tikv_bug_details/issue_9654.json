{
  "issue_number": 9654,
  "title": "txn record found but not expected",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\nTiUP nightly installed today\r\n\r\n### What operating system and CPU are you using?\r\nUbuntu 20.04 LTS - n2d-standard-16 on GCP\r\n\r\n### Steps to reproduce\r\nTwo TiKV nodes in my cluster are repeatedly failing with\r\n```\r\n[2021/02/15 08:19:45.726 +00:00] [FATAL] [lib.rs:466] [\"txn record found but not expected: SingleRecord { commit_ts: TimeStamp(422927973677793321), write: Write { write_type: Rollback, start_ts: TimeStamp(422927973677793321), short_value: \\\"None\\\", has_overlapped_rollback: false, gc_fence: None } }\"] [backtrace=\"stack backtrace:\\n   0: tikv_util::set_panic_hook::{{closure}}\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/components/tikv_util/src/lib.rs:465\\n   1: std::panicking::rust_panic_with_hook\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/panicking.rs:595\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/panicking.rs:497\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/sys_common/backtrace.rs:141\\n   4: rust_begin_unwind\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/panicking.rs:493\\n   5: std::panicking::begin_panic_fmt\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/panicking.rs:435\\n   6: tikv::storage::mvcc::txn::MvccTxn<S>::check_write_and_rollback_lock\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/mvcc/reader/reader.rs:73\\n   7: tikv::storage::txn::actions::cleanup::cleanup\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/actions/cleanup.rs:37\\n   8: <tikv::storage::txn::commands::resolve_lock::ResolveLock as tikv::storage::txn::commands::WriteCommand<S,L>>::process_write\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/commands/resolve_lock.rs:86\\n      tikv::storage::txn::commands::Command::process_write\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/commands/mod.rs:533\\n   9: tikv::storage::txn::scheduler::Scheduler<E,L>::process_write\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/scheduler.rs:631\\n      tikv::storage::txn::scheduler::Scheduler<E,L>::process_by_worker::{{closure}}::{{closure}}\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/scheduler.rs:575\\n      tikv::storage::kv::with_tls_engine::{{closure}}\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/kv/mod.rs:400\\n      std::thread::local::LocalKey<T>::try_with\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/thread/local.rs:272\\n      std::thread::local::LocalKey<T>::with\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/thread/local.rs:248\\n      tikv::storage::kv::with_tls_engine\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/kv/mod.rs:398\\n      tikv::storage::txn::scheduler::Scheduler<E,L>::process_by_worker::{{closure}}\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/src/storage/txn/scheduler.rs:574\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/core/src/future/mod.rs:80\\n      tikv_util::yatp_pool::future_pool::FuturePool::spawn::{{closure}}\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/components/tikv_util/src/yatp_pool/future_pool.rs:112\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/core/src/future/mod.rs:80\\n  10: <yatp::task::future::Runner as yatp::pool::runner::Runner>::handle\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/6bbea16/src/task/future.rs:261\\n  11: <tikv_util::yatp_pool::YatpPoolRunner<T> as yatp::pool::runner::Runner>::handle\\n             at /home/jenkins/agent/workspace/build_tikv_multi_branch_master/tikv/components/tikv_util/src/yatp_pool/mod.rs:93\\n      yatp::pool::worker::WorkerThread<T,R>::run\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/6bbea16/src/pool/worker.rs:48\\n      yatp::pool::builder::LazyBuilder<T>::build::{{closure}}\\n             at /rust/git/checkouts/yatp-e704b73c3ee279b6/6bbea16/src/pool/builder.rs:91\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/sys_common/backtrace.rs:125\\n  12: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/thread/mod.rs:474\\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/panic.rs:322\\n      std::panicking::try::do_call\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/panicking.rs:379\\n      std::panicking::try\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/panicking.rs:343\\n      std::panic::catch_unwind\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/panic.rs:396\\n      std::thread::Builder::spawn_unchecked::{{closure}}\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/std/src/thread/mod.rs:473\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/core/src/ops/function.rs:227\\n  13: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/alloc/src/boxed.rs:1487\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8/library/alloc/src/boxed.rs:1487\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at /rustc/1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8//library/std/src/sys/unix/thread.rs:71\\n  14: start_thread\\n  15: __clone\\n\"] [location=src/storage/mvcc/reader/reader.rs:73] [thread_name=sched-high-pri-pool-1]\r\n```\r\n\r\nLooks like the assert was added as part of the async commit work in https://github.com/tikv/tikv/pull/8349 - tagging folks that were on that thread: @MyonKeminta @youjiali1995 @sticnarf @nrc \r\n\r\nLet me know if there's additional debugging I can do or if there's a workaround I should pursue",
  "state": "closed",
  "created_at": "2021-02-15T08:31:09Z",
  "updated_at": "2021-02-23T03:40:32Z",
  "closed_at": "2021-02-18T03:35:08Z",
  "labels": [
    "type/bug",
    "sig/transaction",
    "severity/major"
  ],
  "comments_data": [
    {
      "id": 779071216,
      "user": "sticnarf",
      "created_at": "2021-02-15T09:02:36Z",
      "body": "It is something we don't expect to happen. Could you describe your workload that may produce this issue?"
    },
    {
      "id": 779074620,
      "user": "frew",
      "created_at": "2021-02-15T09:07:46Z",
      "body": "Sure - currently the workload is all writes (we're not reading from this cluster yet). It's a combination of:\r\n1) DM replication from a low traffic MySQL server\r\n2) A daemon that does about ~3k/writes/second (almost all INSERTs with a few DELETEs).\r\n3) An index creation in the reorganization step on a ~6 TB, 40 billion row table."
    },
    {
      "id": 779092121,
      "user": "sticnarf",
      "created_at": "2021-02-15T09:34:46Z",
      "body": "I find the assertion may not be always true. I open a PR https://github.com/tikv/tikv/pull/9656 to fix it."
    },
    {
      "id": 779455418,
      "user": "frew",
      "created_at": "2021-02-15T21:27:48Z",
      "body": "Thanks! I was able to get my cluster back happy by deploying the workaround you sent earlier. Will definitely test the fix when it makes it in."
    }
  ]
}