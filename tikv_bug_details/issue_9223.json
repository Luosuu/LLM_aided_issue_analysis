{
  "issue_number": 9223,
  "title": "slow-query information is not accuracy",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\n\r\nConfig: disable the cop-cache in TiDB.\r\n\r\n```toml\r\n[tikv-client.copr-cache]\r\nenable = false\r\n```\r\n\r\n```sql\r\ninformation_schema> select * from cluster_info;\r\n+------+----------------------+-----------------------+--------------+------------------------------------------+---------------------------+--------------+-----------+\r\n| TYPE | INSTANCE             | STATUS_ADDRESS        | VERSION      | GIT_HASH                                 | START_TIME                | UPTIME       | SERVER_ID |\r\n+------+----------------------+-----------------------+--------------+------------------------------------------+---------------------------+--------------+-----------+\r\n| tidb | 192.168.220.171:4000 | 192.168.220.171:10080 | 4.0.0-beta.2 | 0e76bd3f0462f2fb9d877e220c44cdc14a8a907c | 2020-12-11T15:38:45+08:00 | 57.671729s   | 1964616   |\r\n| pd   | 127.0.0.1:2379       | 127.0.0.1:2379        | 4.1.0-alpha  | 3ebd9cb4306a001de1350ca4fd1b1e9875e6c7cd | 2020-12-11T15:38:29+08:00 | 1m13.671734s | 0         |\r\n| tikv | 127.0.0.1:20160      | 127.0.0.1:20180       | 4.1.0-alpha  | 1df1cadad7e0472f5d0f6d7024bcb5102630dc08 | 2020-12-11T15:38:36+08:00 | 1m6.671736s  | 0         |\r\n| tikv | 127.0.0.1:20164      | 127.0.0.1:20184       | 4.1.0-alpha  | 1df1cadad7e0472f5d0f6d7024bcb5102630dc08 | 2020-12-11T15:38:36+08:00 | 1m6.671737s  | 0         |\r\n| tikv | 127.0.0.1:20162      | 127.0.0.1:20182       | 4.1.0-alpha  | 1df1cadad7e0472f5d0f6d7024bcb5102630dc08 | 2020-12-11T15:38:36+08:00 | 1m6.671739s  | 0         |\r\n| tikv | 127.0.0.1:20161      | 127.0.0.1:20181       | 4.1.0-alpha  | 1df1cadad7e0472f5d0f6d7024bcb5102630dc08 | 2020-12-11T15:38:36+08:00 | 1m6.67174s   | 0         |\r\n| tikv | 127.0.0.1:20163      | 127.0.0.1:20183       | 4.1.0-alpha  | 1df1cadad7e0472f5d0f6d7024bcb5102630dc08 | 2020-12-11T15:38:36+08:00 | 1m6.671742s  | 0         |\r\n+------+----------------------+-----------------------+--------------+------------------------------------------+---------------------------+--------------+-----------+\r\n```\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\n\r\nAMD 3900, macos \r\n\r\n### Steps to reproduce\r\n\r\n1.  Prepare test data. Create folowing table and insert 1000000 rows.\r\n```sql\r\nstress_test> show create table t_cop\\G\r\n***************************[ 1. row ]***************************\r\nTable        | t_cop\r\nCreate Table | CREATE TABLE `t_cop` (\r\n  `id` int(11) NOT NULL,\r\n  `name` varchar(10) DEFAULT NULL,\r\n  `count` bigint(20) DEFAULT NULL,\r\n  `age` int(11) DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin\r\n1 row in set\r\nTime: 0.005s\r\nstress_test> select * from t_cop limit 3;\r\n+----+------------+-------+-----+\r\n| id | name       | count | age |\r\n+----+------------+-------+-----+\r\n| 0  | aaaaaaaaaa | 0     | 0   |\r\n| 1  | bbbbbbbbbb | 1     | 1   |\r\n| 2  | cccccccccc | 2     | 2   |\r\n+----+------------+-------+-----+\r\n3 rows in set\r\nTime: 0.020s\r\nstress_test> select count(*) from t_cop; --total rows is 1000000\r\n+----------+\r\n| count(*) |\r\n+----------+\r\n| 1000000  |\r\n+----------+\r\n1 row in set\r\nTime: 0.067s\r\nstress_test>\r\n```\r\n\r\n2. use 100 clients to concurrently execute the following SQL:\r\n\r\n```sql\r\nselect sum(id*count*age) from t_cop;\r\n```\r\n\r\nThen check the TiKV log to find `slow-query` such as below:\r\n\r\n```sql\r\n[2020/12/11 15:40:24.667 +08:00] [INFO] [tracker.rs:221] [slow-query] [perf_stats.internal_delete_skipped_count=5625] [perf_stats.internal_key_skipped_count=105625] [perf_stats.block_read_byte=0] [perf_stats.block_read_count=0] [perf_stats.block_cache_hit_count=86] [scan.range.first=\"Some(start: 7480000000000000335F72800000000007A120 end: 7480000000000000335F7280000000000927C0)\"] [scan.ranges=1] [scan.total=100001] [scan.processed=100000] [scan.is_desc=false] [tag=select] [table_id=51] [txn_start_ts=421441679422128130] [total_process_time=107ms] [handler_build_time=0ns] [wait_time.snapshot=0ns] [wait_time.schedule=0ns] [wait_time=0ns] [total_lifetime=2.035s] [remote_host=ipv4:127.0.0.1:60754] [region_id=137]\r\n```\r\n\r\nAs you can see:\r\n\r\n```sql\r\n[total_process_time=107ms] \r\n[handler_build_time=0ns] \r\n[wait_time.snapshot=0ns] \r\n[wait_time.schedule=0ns] \r\n[wait_time=0ns] \r\n[total_lifetime=2.035s] \r\n```\r\n\r\n`total_lifetime` is 2.035s, `total_process_time` is `107ms`, **Where is rest time?**\r\n",
  "state": "closed",
  "created_at": "2020-12-11T07:52:52Z",
  "updated_at": "2020-12-15T07:22:25Z",
  "closed_at": "2020-12-15T07:22:24Z",
  "labels": [
    "type/bug",
    "severity/moderate"
  ],
  "comments_data": [
    {
      "id": 743035592,
      "user": "crazycs520",
      "created_at": "2020-12-11T07:53:22Z",
      "body": "@zhongzc PTAL"
    }
  ]
}