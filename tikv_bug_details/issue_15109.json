{
  "issue_number": 15109,
  "title": "Tikv panic for assertion failed: estimated_versions_to_last_change > 0",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\nTiKV\r\nRelease Version:   7.3.0-alpha\r\nEdition:           Community\r\nGit Commit Hash:   88bd7f1fe2cbcac31d516f76b10f1f213375a06f\r\nGit Commit Branch: heads/refs/tags/v7.3.0-alpha\r\nUTC Build Time:    2023-07-11 11:13:57\r\nRust Version:      rustc 1.67.0-nightly (96ddd32c4 2022-11-14)\r\nEnable Features:   pprof-fp jemalloc mem-profiling portable sse test-engine-kv-rocksdb test-engine-raft-raft-engine cloud-aws cloud-gcp cloud-azure\r\nProfile:           dist_release\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\ncluster with tiflash\r\nsome random dml and select count(*)\r\n### What did you expect?\r\n\r\n### What did happened?\r\n```\r\n[2023/07/12 05:34:33.712 +08:00] [FATAL] [lib.rs:497] [\"assertion failed: estimated_versions_to_last_change > 0\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:496:18\\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2032:9\\n      std::panicking::rust_panic_with_hook\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:692:13\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:577:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:137:18\\n   4: rust_begin_unwind\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:575:5\\n   5: core::panicking::panic_fmt\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:65:14\\n   6: core::panicking::panic\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:114:5\\n   7: tikv::storage::txn::actions::common::next_last_change_info\\n   8: tikv::storage::txn::actions::acquire_pessimistic_lock::acquire_pessimistic_lock\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/actions/acquire_pessimistic_lock.rs:317:23\\n   9: <tikv::storage::txn::commands::acquire_pessimistic_lock::AcquirePessimisticLock as tikv::storage::txn::commands::WriteCommand<S,L>>::process_write\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/commands/acquire_pessimistic_lock.rs:95:19\\n      tikv::storage::txn::commands::Command::process_write\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/commands/mod.rs:686:51\\n  10: tikv::storage::txn::scheduler::TxnScheduler<E,L>::process_write::{{closure}}::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/scheduler.rs:1245:21\\n      tikv::storage::metrics::with_perf_context::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/metrics.rs:360:19\\n      std::thread::local::LocalKey<T>::try_with\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:446:16\\n      std::thread::local::LocalKey<T>::with\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:422:9\\n      tikv::storage::metrics::with_perf_context\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/metrics.rs:351:5\\n      tikv::storage::txn::scheduler::TxnScheduler<E,L>::process_write::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/scheduler.rs:1244:17\\n  11: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n      tikv::storage::txn::scheduler::TxnScheduler<E,L>::process::{{closure}}::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/scheduler.rs:1152:71\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n      <resource_metering::InTags<T> as core::future::future::Future>::poll\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/resource_metering/src/lib.rs:266:9\\n      tikv::storage::txn::scheduler::TxnScheduler<E,L>::process::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/scheduler.rs:1166:9\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n      tikv::storage::txn::scheduler::TxnScheduler<E,L>::execute::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/storage/txn/scheduler.rs:735:54\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n  12: <tracker::tls::TrackedFuture<F> as core::future::future::Future>::poll::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tracker/src/tls.rs:64:23\\n      std::thread::local::LocalKey<T>::try_with\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:446:16\\n      std::thread::local::LocalKey<T>::with\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:422:9\\n      <tracker::tls::TrackedFuture<F> as core::future::future::Future>::poll\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tracker/src/tls.rs:62:9\\n      tikv_util::yatp_pool::future_pool::PoolInner::spawn::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/yatp_pool/future_pool.rs:173:27\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:91:19\\n      yatp::task::future::RawTask<F>::poll\\n             at rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:59:9\\n  13: yatp::task::future::TaskCell::poll\\n             at rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:103:9\\n      <yatp::task::future::Runner as yatp::pool::runner::Runner>::handle\\n             at rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/task/future.rs:387:20\\n  14: <tikv_util::yatp_pool::YatpPoolRunner<T> as yatp::pool::runner::Runner>::handle\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/yatp_pool/mod.rs:196:24\\n  15: yatp::pool::worker::WorkerThread<T,R>::run\\n             at rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/pool/worker.rs:48:13\\n      yatp::pool::builder::LazyBuilder<T>::build::{{closure}}\\n             at rust/git/checkouts/yatp-e704b73c3ee279b6/5572a78/src/pool/builder.rs:114:25\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:121:18\\n  16: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:551:17\\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:271:9\\n      std::panicking::try::do_call\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:483:40\\n      std::panicking::try\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:447:19\\n      std::panic::catch_unwind\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:137:14\\n      std::thread::Builder::spawn_unchecked_::{{closure}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:550:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:513:5\\n  17: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2000:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at rust/toolchains/nightly-2022-11-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\\n  18: start_thread\\n  19: __clone3\\n\"] [location=components/txn_types/src/types.rs:612] [thread_name=sched-worker-pool-3]\r\n```\r\n",
  "state": "closed",
  "created_at": "2023-07-12T07:26:11Z",
  "updated_at": "2023-07-28T09:28:37Z",
  "closed_at": "2023-07-28T09:28:37Z",
  "labels": [
    "type/bug",
    "severity/critical",
    "affects-7.2"
  ],
  "comments_data": [
    {
      "id": 1651306157,
      "user": "tonyxuqqi",
      "created_at": "2023-07-26T09:09:57Z",
      "body": "it seems related to the PR #14803"
    },
    {
      "id": 1655286396,
      "user": "MyonKeminta",
      "created_at": "2023-07-28T08:41:33Z",
      "body": "We found that the panic might be caused by us assuming that reading RocksDB's snapshot should be repeatable. However, the assumption is not true when using compaction filter for GC.\r\n\r\nThe function [`next_last_change_info`](https://github.com/tikv/tikv/blob/0ad33d428e85cb59d7381f791f47428713ce16e5/src/storage/txn/actions/common.rs#L11) is called with a write and its commit_ts, and it when it executes to [here](https://github.com/tikv/tikv/blob/0ad33d428e85cb59d7381f791f47428713ce16e5/src/storage/txn/actions/common.rs#L41), we assume it must first find the same write record as we passed into `next_last_change_info`, and since it's a `Rollback` or a `Lock`, it should then call `next` internally at least once to get the actual data of the key. However, if there's a compaction happens before calling the `get_write_with_commit_ts`,  the `Rollback` or `Lock` may disappear, so that the `get_write_with_commit_ts` call might then directly find a valid version without calling `next`."
    }
  ]
}