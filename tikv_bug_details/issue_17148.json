{
  "issue_number": 17148,
  "title": "In-memory Engine: entered unreachable code in `next_to_match`",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\nTiKV panic when preparing 1000 tpcc warehouses in a 4-node cluster.\r\n\r\n```log\r\n[2024/06/11 09:06:26.437 +00:00] [FATAL] [lib.rs:477] [\"internal error: entered unreachable code\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\r\n             at home/stn/tikv/components/tikv_util/src/lib.rs:476:18\r\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2029:9\r\n      std::panicking::rust_panic_with_hook\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:783:13\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:649:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:171:18\r\n   4: rust_begin_unwind\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:645:5\r\n   5: core::panicking::panic_fmt\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:72:14\r\n   6: core::panicking::panic\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:144:5\r\n   7: region_cache_memory_engine::background::next_to_match\r\n             at home/stn/tikv/components/region_cache_memory_engine/src/background.rs:1001:13\r\n   8: <region_cache_memory_engine::background::BackgroundRunner as tikv_util::worker::pool::Runnable>::run::{{closure}}\r\n             at home/stn/tikv/components/region_cache_memory_engine/src/background.rs:1143:33\r\n      yatp::task::future::RawTask<F>::poll\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:59:9\r\n   9: yatp::task::future::TaskCell::poll\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:103:9\r\n      <yatp::task::future::Runner as yatp::pool::runner::Runner>::handle\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:387:20\r\n  10: <tikv_util::yatp_pool::YatpPoolRunner<T> as yatp::pool::runner::Runner>::handle\r\n             at home/stn/tikv/components/tikv_util/src/yatp_pool/mod.rs:199:24\r\n  11: yatp::pool::worker::WorkerThread<T,R>::run\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/pool/worker.rs:48:13\r\n  12: yatp::pool::builder::LazyBuilder<T>::build::{{closure}}\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/pool/builder.rs:114:25\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:155:18\r\n  13: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:529:17\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:272:9\r\n      std::panicking::try::do_call\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:552:40\r\n      std::panicking::try\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:516:19\r\n      std::panic::catch_unwind\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:142:14\r\n      std::thread::Builder::spawn_unchecked_::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:528:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\r\n  14: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2015:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2015:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\r\n  15: start_thread\r\n  16: __clone3\r\n\"] [location=components/region_cache_memory_engine/src/background.rs:1001] [thread_name=audit-worker-0] [thread_id=32]\r\n```\r\n\r\n### What version of TiKV are you using?\r\n<!-- You can run `tikv-server --version` -->\r\n\r\nNightly, built on https://github.com/tikv/tikv/pull/16868 83a419d\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\n\r\n### Steps to reproduce\r\n<!-- If possible, provide a recipe for reproducing the error. A complete runnable program is good. -->\r\n\r\nTiKV Config\r\n\r\n```toml\r\n[range-cache-engine]\r\n  enabled = true\r\n  hard-limit-threshold = \"8GB\"\r\n  soft-limit-threshold = \"5GB\"\r\n```\r\n\r\nTPCC commands\r\n\r\n```bash\r\n/root/.tiup/components/bench/v1.12.0/go-tpc \\\r\n    tpcc prepare \\\r\n    -H $HOST -P $PORT \\\r\n    -D tpcc1000 --warehouses 1000 -T 50\r\n```\r\n\r\n### What did you expect?\r\n\r\nNo such error.\r\n",
  "state": "closed",
  "created_at": "2024-06-14T08:49:57Z",
  "updated_at": "2024-10-30T04:24:15Z",
  "closed_at": "2024-10-30T04:24:15Z",
  "labels": [
    "type/bug"
  ],
  "comments_data": [
    {
      "id": 2167571252,
      "user": "SpadeA-Tang",
      "created_at": "2024-06-14T08:55:43Z",
      "body": "There would be a \"next inconsistent, disk iterator next failed\" before the panic."
    },
    {
      "id": 2167654644,
      "user": "overvenus",
      "created_at": "2024-06-14T09:42:08Z",
      "body": "The last 4 lines before panic.\r\n\r\n```log\r\n[2024/06/11 09:06:26.041 +00:00] [INFO] [background.rs:1103] [\"audit range\"] [range=\"CacheRange { tag: \\\"[region_id=78999]\\\", range_start: 7A7480000000000000FF285F728000000000FF0101CB0000000000FA, range_end: 7A7480000000000001FF6400000000000000F8 }\"] [thread_id=32]\r\n[2024/06/11 09:06:26.083 +00:00] [INFO] [background.rs:1472] [\"range types\"] [range_deleting=0] [range_evictions=0] [loading_range=0] [cached_range=13] [pending_range=73] [thread_id=27]\r\n[2024/06/11 09:06:26.103 +00:00] [INFO] [trend.rs:273] [\"history window flipping: end\"] [flipping_duration=1] [increasing_rate=0] [time_based_multiple=0.00029993703107215343] [flip_margin_error=527.922792488755] [delta=1518.9384061725868] [name=L1] [thread_id=40]\r\n[2024/06/11 09:06:26.395 +00:00] [ERROR] [background.rs:992] [\"next inconsistent, disk iterator next failed\"] [cf=\"\\\"write\\\"\"] [seqno=17136717646] [upper=7A7480000000000001FF6400000000000000F8] [lower=7A7480000000000000FF285F728000000000FF0101CB0000000000FA] [cache_val=509480C083DFCDFD9F06766B8000080000000203040506070809090019002C0036003800410045004D0055796348704F544639716C4B657537737133694E5330353836366A5A67415348645354755774774C524A5A3147424A47736A54415A3354503330353731313131310404830C0C0280000493E000] [cache_key=7A7480000000000001FF565F728000000000FF0000010000000000FAF9C009920F8FFFEA] [thread_id=32]\r\n```"
    },
    {
      "id": 2167787349,
      "user": "overvenus",
      "created_at": "2024-06-14T11:03:51Z",
      "body": "Found a different panic, it's about \"audit range\".\r\n\r\n```\r\n[2024/06/11 22:09:47.654 +00:00] [INFO] [background.rs:1103] [\"audit range\"] [range=\"CacheRange { tag: \\\"[region_id=162870]\\\", range_start: 7A7480000000000001FF885F720380000000FF000000D603800000FF0000000004038000FF0000000009610000FD, range_end: 7A7480000000000001FF885F720380000000FF000000EA03800000FF0000000005038000FF000000000DCA0000FD }\"] [thread_id=37]\r\n[2024/06/11 22:09:48.090 +00:00] [INFO] [background.rs:1163] [\"audit range done\"] [range=\"CacheRange { tag: \\\"[region_id=162870]\\\", range_start: 7A7480000000000001FF885F720380000000FF000000D603800000FF0000000004038000FF0000000009610000FD, range_end: 7A7480000000000001FF885F720380000000FF000000EA03800000FF0000000005038000FF000000000DCA0000FD }\"] [thread_id=37]\r\n[2024/06/11 22:09:48.090 +00:00] [INFO] [background.rs:1103] [\"audit range\"] [range=\"CacheRange { tag: \\\"[region_id=156798]\\\", range_start: 7A7480000000000001FF885F720380000000FF000000F403800000FF0000000007038000FF000000000EA20000FD, range_end: 7A7480000000000001FF885F720380000000FF0000010403800000FF0000000003038000FF000000000AFD0000FD }\"] [thread_id=37]\r\n[2024/06/11 22:09:48.090 +00:00] [ERROR] [background.rs:1123] [\"seek_to_first result not equal\"] [cf=\"\\\"lock\\\"\"] [seqno=20939126398] [cache_key=7A7480000000000001FF885F720380000000FF000000F503800000FF0000000004038000FF00000000139D0000FD] [upper=7A7480000000000001FF885F720380000000FF0000010403800000FF0000000003038000FF000000000AFD0000FD] [lower=7A7480000000000001FF885F720380000000FF000000F403800000FF0000000007038000FF000000000EA20000FD] [thread_id=37]\r\n[2024/06/11 22:09:48.127 +00:00] [FATAL] [lib.rs:477] [\"internal error: entered unreachable code\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\r\n             at home/stn/tikv/components/tikv_util/src/lib.rs:476:18\r\n   1: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2029:9\r\n      std::panicking::rust_panic_with_hook\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:783:13\r\n   2: std::panicking::begin_panic_handler::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:649:13\r\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:171:18\r\n   4: rust_begin_unwind\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:645:5\r\n   5: core::panicking::panic_fmt\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:72:14\r\n   6: core::panicking::panic\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs:144:5\r\n   7: <region_cache_memory_engine::background::BackgroundRunner as tikv_util::worker::pool::Runnable>::run::{{closure}}\r\n             at home/stn/tikv/components/region_cache_memory_engine/src/background.rs:1131:33\r\n      yatp::task::future::RawTask<F>::poll\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:59:9\r\n   8: yatp::task::future::TaskCell::poll\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:103:9\r\n      <yatp::task::future::Runner as yatp::pool::runner::Runner>::handle\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/task/future.rs:387:20\r\n   9: <tikv_util::yatp_pool::YatpPoolRunner<T> as yatp::pool::runner::Runner>::handle\r\n             at home/stn/tikv/components/tikv_util/src/yatp_pool/mod.rs:199:24\r\n  10: yatp::pool::worker::WorkerThread<T,R>::run\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/pool/worker.rs:48:13\r\n  11: yatp::pool::builder::LazyBuilder<T>::build::{{closure}}\r\n             at home/stn/.cargo/git/checkouts/yatp-e704b73c3ee279b6/793be4d/src/pool/builder.rs:114:25\r\n      std::sys_common::backtrace::__rust_begin_short_backtrace\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:155:18\r\n  12: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:529:17\r\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/unwind_safe.rs:272:9\r\n      std::panicking::try::do_call\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:552:40\r\n      std::panicking::try\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:516:19\r\n   std::panic::catch_unwind\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:142:14\r\n      std::thread::Builder::spawn_unchecked_::{{closure}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/mod.rs:528:30\r\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\r\n  13: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2015:9\r\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:2015:9\r\n      std::sys::unix::thread::Thread::new::thread_start\r\n             at home/stn/.rustup/toolchains/nightly-2023-12-28-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/thread.rs:108:17\r\n  14: start_thread\r\n  15: __clone3\r\n\"] [location=components/region_cache_memory_engine/src/background.rs:1131] [thread_name=audit-worker-0] [thread_id=37]\r\n```"
    },
    {
      "id": 2167791381,
      "user": "SpadeA-Tang",
      "created_at": "2024-06-14T11:06:26Z",
      "body": "It's in prepare or normal run?"
    },
    {
      "id": 2168599095,
      "user": "afeinberg",
      "created_at": "2024-06-14T19:04:04Z",
      "body": "What's the status on these? should the two panics be separate issues? "
    },
    {
      "id": 2172710295,
      "user": "overvenus",
      "created_at": "2024-06-17T08:45:04Z",
      "body": "> What's the status on these? should the two panics be separate issues?\r\n\r\nWe suspect that they share the same root cause. The unreachable panic means it detects data inconsistency between in-memory engine and rocksdb.  \r\nWe think they might be caused by `DROP TABLE` as in-memory engine does not handle `UnsafeDestroyRange` (for GC dropped table) properly. \r\n\r\nhttps://github.com/tikv/tikv/blob/8903f2a5d9b7b1c7d9f6ab453accab90a5088bf3/src/server/gc_worker/gc_worker.rs#L1023-L1040"
    },
    {
      "id": 2445812990,
      "user": "overvenus",
      "created_at": "2024-10-30T04:24:15Z",
      "body": "Since the first report, we've done several refactors, and the issue hasn't been reproduced for months."
    }
  ]
}