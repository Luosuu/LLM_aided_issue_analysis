{
  "issue_number": 3764,
  "title": "test_div_mod cannot pass Valgrind memcheck",
  "body": "## Bug Report\r\n\r\n```\r\nvalgrind --tool=memcheck target/debug/deps/tikv-0ad0136b98d90239 test_div_mod\r\n==69317== Memcheck, a memory error detector\r\n==69317== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==69317== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\r\n==69317== Command: target/debug/deps/tikv-0ad0136b98d90239 test_div_mod\r\n==69317== \r\n\r\nrunning 1 test\r\n==69317== Thread 2 coprocessor::cod:\r\n==69317== Invalid write of size 1\r\n==69317==    at 0x234B917: core::ptr::write (ptr.rs:363)\r\n==69317==    by 0x234832A: <alloc::vec::Vec<T>>::push (vec.rs:1070)\r\n==69317==    by 0x1838218: tikv::coprocessor::codec::mysql::decimal::Decimal::to_string (decimal.rs:1010)\r\n==69317==    by 0x1868232: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3233)\r\n==69317==    by 0x1348E9D: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BB2: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==    by 0x1AD9C24: {{closure}}<closure,()> (mod.rs:409)\r\n==69317==    by 0x1AD9C24: call_once<(),closure> (panic.rs:313)\r\n==69317==    by 0x1AD9C24: _ZN3std9panicking3try7do_call17h753b561d689539bbE.llvm.5787307664676049432 (panicking.rs:310)\r\n==69317==  Address 0x65338fc is 0 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 2\r\n==69317==    at 0x4CE1113: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:1022)\r\n==69317==    by 0x3064837: core::slice::<impl [T]>::copy_from_slice (mod.rs:1657)\r\n==69317==    by 0x306527E: spec_extend<u8> (vec.rs:1955)\r\n==69317==    by 0x306527E: extend_from_slice<u8> (vec.rs:1396)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:168)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:369)\r\n==69317==    by 0x306527E: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (slice.rs:613)\r\n==69317==    by 0x30649A1: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:206)\r\n==69317==    by 0x18684E4: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3234)\r\n==69317==    by 0x1361A8F: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BD1: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==  Address 0x653394c is 0 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4E31: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 1\r\n==69317==    at 0x4CE1283: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:1022)\r\n==69317==    by 0x3064837: core::slice::<impl [T]>::copy_from_slice (mod.rs:1657)\r\n==69317==    by 0x306527E: spec_extend<u8> (vec.rs:1955)\r\n==69317==    by 0x306527E: extend_from_slice<u8> (vec.rs:1396)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:168)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:369)\r\n==69317==    by 0x306527E: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (slice.rs:613)\r\n==69317==    by 0x30649A1: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:206)\r\n==69317==    by 0x18684E4: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3234)\r\n==69317==    by 0x1361A8F: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BD1: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==  Address 0x653394e is 2 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4E31: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid read of size 1\r\n==69317==    at 0x4CE26C0: __memcmp_sse4_1 (vg_replace_strmem.c:1099)\r\n==69317==    by 0x1B24323: <[A] as core::slice::SlicePartialEq<A>>::equal (mod.rs:4068)\r\n==69317==    by 0x1B22F90: core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq (mod.rs:4001)\r\n==69317==    by 0x1B1732A: core::cmp::impls::<impl core::cmp::PartialEq<&'b B> for &'a A>::eq (cmp.rs:931)\r\n==69317==    by 0x6F8C37: core::str::traits::<impl core::cmp::PartialEq for str>::eq (mod.rs:1609)\r\n==69317==    by 0x169463E: <alloc::string::String as core::cmp::PartialEq>::eq (string.rs:1810)\r\n==69317==    by 0x13AEA13: <core::option::Option<T> as core::cmp::PartialEq>::eq (option.rs:166)\r\n==69317==    by 0x14F4C28: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==  Address 0x65338fc is 0 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid read of size 1\r\n==69317==    at 0x4CE26C5: __memcmp_sse4_1 (vg_replace_strmem.c:1099)\r\n==69317==    by 0x1B24323: <[A] as core::slice::SlicePartialEq<A>>::equal (mod.rs:4068)\r\n==69317==    by 0x1B22F90: core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq (mod.rs:4001)\r\n==69317==    by 0x1B1732A: core::cmp::impls::<impl core::cmp::PartialEq<&'b B> for &'a A>::eq (cmp.rs:931)\r\n==69317==    by 0x6F8C37: core::str::traits::<impl core::cmp::PartialEq for str>::eq (mod.rs:1609)\r\n==69317==    by 0x169463E: <alloc::string::String as core::cmp::PartialEq>::eq (string.rs:1810)\r\n==69317==    by 0x13AEA13: <core::option::Option<T> as core::cmp::PartialEq>::eq (option.rs:166)\r\n==69317==    by 0x14F4C28: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==  Address 0x653394c is 0 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4E31: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 1\r\n==69317==    at 0x234B917: core::ptr::write (ptr.rs:363)\r\n==69317==    by 0x234832A: <alloc::vec::Vec<T>>::push (vec.rs:1070)\r\n==69317==    by 0x1838218: tikv::coprocessor::codec::mysql::decimal::Decimal::to_string (decimal.rs:1010)\r\n==69317==    by 0x18682D2: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3236)\r\n==69317==    by 0x134F93D: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4E48: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==    by 0x1AD9C24: {{closure}}<closure,()> (mod.rs:409)\r\n==69317==    by 0x1AD9C24: call_once<(),closure> (panic.rs:313)\r\n==69317==    by 0x1AD9C24: _ZN3std9panicking3try7do_call17h753b561d689539bbE.llvm.5787307664676049432 (panicking.rs:310)\r\n==69317==  Address 0x65338fc is 0 bytes after a block of size 12 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Conditional jump or move depends on uninitialised value(s)\r\n==69317==    at 0x4CE2686: __memcmp_sse4_1 (vg_replace_strmem.c:1099)\r\n==69317==    by 0x1B24323: <[A] as core::slice::SlicePartialEq<A>>::equal (mod.rs:4068)\r\n==69317==    by 0x1B22F90: core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq (mod.rs:4001)\r\n==69317==    by 0x1B1732A: core::cmp::impls::<impl core::cmp::PartialEq<&'b B> for &'a A>::eq (cmp.rs:931)\r\n==69317==    by 0x6F8C37: core::str::traits::<impl core::cmp::PartialEq for str>::eq (mod.rs:1609)\r\n==69317==    by 0x169463E: <alloc::string::String as core::cmp::PartialEq>::eq (string.rs:1810)\r\n==69317==    by 0x13AEA13: <core::option::Option<T> as core::cmp::PartialEq>::eq (option.rs:166)\r\n==69317==    by 0x14F4C28: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317== \r\n==69317== Invalid read of size 1\r\n==69317==    at 0x4CE26A5: __memcmp_sse4_1 (vg_replace_strmem.c:1099)\r\n==69317==    by 0x1B24323: <[A] as core::slice::SlicePartialEq<A>>::equal (mod.rs:4068)\r\n==69317==    by 0x1B22F90: core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq (mod.rs:4001)\r\n==69317==    by 0x1B1732A: core::cmp::impls::<impl core::cmp::PartialEq<&'b B> for &'a A>::eq (cmp.rs:931)\r\n==69317==    by 0x6F8C37: core::str::traits::<impl core::cmp::PartialEq for str>::eq (mod.rs:1609)\r\n==69317==    by 0x169463E: <alloc::string::String as core::cmp::PartialEq>::eq (string.rs:1810)\r\n==69317==    by 0x13AEA13: <core::option::Option<T> as core::cmp::PartialEq>::eq (option.rs:166)\r\n==69317==    by 0x14F4EBE: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3237)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==  Address 0x6533ee8 is 4 bytes after a block of size 20 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4E31: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid read of size 1\r\n==69317==    at 0x4CE26A8: __memcmp_sse4_1 (vg_replace_strmem.c:1099)\r\n==69317==    by 0x1B24323: <[A] as core::slice::SlicePartialEq<A>>::equal (mod.rs:4068)\r\n==69317==    by 0x1B22F90: core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq (mod.rs:4001)\r\n==69317==    by 0x1B1732A: core::cmp::impls::<impl core::cmp::PartialEq<&'b B> for &'a A>::eq (cmp.rs:931)\r\n==69317==    by 0x6F8C37: core::str::traits::<impl core::cmp::PartialEq for str>::eq (mod.rs:1609)\r\n==69317==    by 0x169463E: <alloc::string::String as core::cmp::PartialEq>::eq (string.rs:1810)\r\n==69317==    by 0x13AEA13: <core::option::Option<T> as core::cmp::PartialEq>::eq (option.rs:166)\r\n==69317==    by 0x14F4EBE: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3237)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==  Address 0x6533e88 is 4 bytes after a block of size 20 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 8\r\n==69317==    at 0x4CE10C3: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:1022)\r\n==69317==    by 0x3064837: core::slice::<impl [T]>::copy_from_slice (mod.rs:1657)\r\n==69317==    by 0x306527E: spec_extend<u8> (vec.rs:1955)\r\n==69317==    by 0x306527E: extend_from_slice<u8> (vec.rs:1396)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:168)\r\n==69317==    by 0x306527E: to_vec<u8> (slice.rs:369)\r\n==69317==    by 0x306527E: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (slice.rs:613)\r\n==69317==    by 0x30649A1: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:206)\r\n==69317==    by 0x18684E4: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3234)\r\n==69317==    by 0x1361A8F: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BD1: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3234)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==  Address 0x6534600 is 16 bytes inside a block of size 20 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4E31: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3236)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 1\r\n==69317==    at 0x234B917: core::ptr::write (ptr.rs:363)\r\n==69317==    by 0x5B6A75: <alloc::vec::Vec<T>>::extend_with (vec.rs:1478)\r\n==69317==    by 0x5EF66C: <alloc::vec::Vec<T>>::resize (vec.rs:1369)\r\n==69317==    by 0x1837B6D: tikv::coprocessor::codec::mysql::decimal::Decimal::to_string (decimal.rs:990)\r\n==69317==    by 0x1868232: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3233)\r\n==69317==    by 0x1348E9D: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BB2: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==  Address 0x6534c34 is 0 bytes after a block of size 68 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 1\r\n==69317==    at 0x234B917: core::ptr::write (ptr.rs:363)\r\n==69317==    by 0x5B6AF5: <alloc::vec::Vec<T>>::extend_with (vec.rs:1486)\r\n==69317==    by 0x5EF66C: <alloc::vec::Vec<T>>::resize (vec.rs:1369)\r\n==69317==    by 0x1837B6D: tikv::coprocessor::codec::mysql::decimal::Decimal::to_string (decimal.rs:990)\r\n==69317==    by 0x1868232: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3233)\r\n==69317==    by 0x1348E9D: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BB2: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==  Address 0x6534c3d is 9 bytes after a block of size 68 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Invalid write of size 1\r\n==69317==    at 0x1837DF0: tikv::coprocessor::codec::mysql::decimal::Decimal::to_string (decimal.rs:996)\r\n==69317==    by 0x1868232: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod::{{closure}} (decimal.rs:3233)\r\n==69317==    by 0x1348E9D: <core::option::Option<T>>::map (option.rs:414)\r\n==69317==    by 0x14F4BB2: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1AD91EF: try<(),std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>> (panicking.rs:289)\r\n==69317==    by 0x1AD91EF: catch_unwind<std::panic::AssertUnwindSafe<alloc::boxed::Box<FnBox<()>>>,()> (panic.rs:392)\r\n==69317==    by 0x1AD91EF: {{closure}} (lib.rs:1409)\r\n==69317==    by 0x1AD91EF: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\r\n==69317==    by 0x1AD9C24: {{closure}}<closure,()> (mod.rs:409)\r\n==69317==    by 0x1AD9C24: call_once<(),closure> (panic.rs:313)\r\n==69317==    by 0x1AD9C24: _ZN3std9panicking3try7do_call17h753b561d689539bbE.llvm.5787307664676049432 (panicking.rs:310)\r\n==69317==    by 0x3039FA9: __rust_maybe_catch_panic (lib.rs:106)\r\n==69317==    by 0x1ACD6F6: try<(),std::panic::AssertUnwindSafe<closure>> (panicking.rs:289)\r\n==69317==    by 0x1ACD6F6: catch_unwind<std::panic::AssertUnwindSafe<closure>,()> (panic.rs:392)\r\n==69317==    by 0x1ACD6F6: {{closure}}<closure,()> (mod.rs:408)\r\n==69317==    by 0x1ACD6F6: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317==  Address 0x6534c3d is 9 bytes after a block of size 68 alloc'd\r\n==69317==    at 0x4CDE9B5: calloc (vg_replace_malloc.c:711)\r\n==69317==    by 0x2355C0A: alloc::alloc::alloc_zeroed (alloc.rs:116)\r\n==69317==    by 0x2355A91: <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed (alloc.rs:143)\r\n==69317==    by 0x2352B85: <alloc::raw_vec::RawVec<T, A>>::allocate_in (raw_vec.rs:104)\r\n==69317==    by 0x2352687: <alloc::raw_vec::RawVec<T>>::with_capacity_zeroed (raw_vec.rs:156)\r\n==69317==    by 0x234EDE6: <T as alloc::vec::SpecFromElem>::from_elem (vec.rs:1609)\r\n==69317==    by 0x2350DB1: alloc::vec::from_elem (vec.rs:1570)\r\n==69317==    by 0x1831852: tikv::coprocessor::codec::mysql::decimal::do_div_mod (decimal.rs:615)\r\n==69317==    by 0x14F4B93: tikv::coprocessor::codec::mysql::decimal::tests::test_div_mod (decimal.rs:3232)\r\n==69317==    by 0xE929C9: tikv::__test::TESTS::{{closure}} (decimal.rs:3061)\r\n==69317==    by 0x81EBDD: core::ops::function::FnOnce::call_once (function.rs:223)\r\n==69317==    by 0x1AB7EBE: {{closure}} (lib.rs:1454)\r\n==69317==    by 0x1AB7EBE: call_once<closure,()> (function.rs:223)\r\n==69317==    by 0x1AB7EBE: <F as alloc::boxed::FnBox<A>>::call_box (boxed.rs:640)\r\n==69317== \r\n==69317== Conditional jump or move depends on uninitialised value(s)\r\n==69317==    at 0x306036C: je_tcache_bin_flush_small (tcache.c:132)\r\n==69317==    by 0x3061180: tcache_destroy (tcache.c:371)\r\n==69317==    by 0x3060FA4: je_tcache_cleanup (tcache.c:410)\r\n==69317==    by 0x30618FB: je_tsd_cleanup (tsd.c:82)\r\n==69317==    by 0x5687C21: __nptl_deallocate_tsd (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5687E32: start_thread (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5BB1BAC: clone (in /usr/lib64/libc-2.17.so)\r\n==69317== \r\n==69317== Use of uninitialised value of size 8\r\n==69317==    at 0x5689C80: pthread_mutex_lock (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x3060314: je_malloc_mutex_lock (mutex.h:101)\r\n==69317==    by 0x3060314: je_tcache_bin_flush_small (tcache.c:119)\r\n==69317==    by 0x3061180: tcache_destroy (tcache.c:371)\r\n==69317==    by 0x3060FA4: je_tcache_cleanup (tcache.c:410)\r\n==69317==    by 0x30618FB: je_tsd_cleanup (tsd.c:82)\r\n==69317==    by 0x5687C21: __nptl_deallocate_tsd (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5687E32: start_thread (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5BB1BAC: clone (in /usr/lib64/libc-2.17.so)\r\n==69317== \r\n==69317== Invalid read of size 4\r\n==69317==    at 0x5689C80: pthread_mutex_lock (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x3060314: je_malloc_mutex_lock (mutex.h:101)\r\n==69317==    by 0x3060314: je_tcache_bin_flush_small (tcache.c:119)\r\n==69317==    by 0x3061180: tcache_destroy (tcache.c:371)\r\n==69317==    by 0x3060FA4: je_tcache_cleanup (tcache.c:410)\r\n==69317==    by 0x30618FB: je_tsd_cleanup (tsd.c:82)\r\n==69317==    by 0x5687C21: __nptl_deallocate_tsd (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5687E32: start_thread (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5BB1BAC: clone (in /usr/lib64/libc-2.17.so)\r\n==69317==  Address 0xa38 is not stack'd, malloc'd or (recently) free'd\r\n==69317== \r\n==69317== Can't extend stack to 0x40d9138 during signal delivery for thread 2:\r\n==69317==   no stack segment\r\n==69317== \r\n==69317== Process terminating with default action of signal 11 (SIGSEGV): dumping core\r\n==69317==  Access not within mapped region at address 0x40D9138\r\n==69317==    at 0x5689C80: pthread_mutex_lock (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x3060314: je_malloc_mutex_lock (mutex.h:101)\r\n==69317==    by 0x3060314: je_tcache_bin_flush_small (tcache.c:119)\r\n==69317==    by 0x3061180: tcache_destroy (tcache.c:371)\r\n==69317==    by 0x3060FA4: je_tcache_cleanup (tcache.c:410)\r\n==69317==    by 0x30618FB: je_tsd_cleanup (tsd.c:82)\r\n==69317==    by 0x5687C21: __nptl_deallocate_tsd (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5687E32: start_thread (in /usr/lib64/libpthread-2.17.so)\r\n==69317==    by 0x5BB1BAC: clone (in /usr/lib64/libc-2.17.so)\r\n==69317==  If you believe this happened as a result of a stack\r\n==69317==  overflow in your program's main thread (unlikely but\r\n==69317==  possible), you can try to increase the size of the\r\n==69317==  main thread stack using the --main-stacksize= flag.\r\n==69317==  The main thread stack size used in this run was 10485760.\r\n==69317== Invalid write of size 8\r\n==69317==    at 0x4AD7720: _vgnU_freeres (vg_preloaded.c:59)\r\n==69317==  Address 0x40d9ff8 is on thread 2's stack\r\n==69317== \r\n==69317== \r\n==69317== Process terminating with default action of signal 11 (SIGSEGV)\r\n==69317==  Access not within mapped region at address 0x40D9FF8\r\n==69317==    at 0x4AD7720: _vgnU_freeres (vg_preloaded.c:59)\r\n==69317==  If you believe this happened as a result of a stack\r\n==69317==  overflow in your program's main thread (unlikely but\r\n==69317==  possible), you can try to increase the size of the\r\n==69317==  main thread stack using the --main-stacksize= flag.\r\n==69317== \r\n==69317== HEAP SUMMARY:\r\n==69317==     in use at exit: 1,950,751 bytes in 27,308 blocks\r\n==69317==   total heap usage: 27,319 allocs, 11 frees, 1,952,751 bytes allocated\r\n==69317== \r\n==69317== LEAK SUMMARY:\r\n==69317==    definitely lost: 0 bytes in 0 blocks\r\n==69317==    indirectly lost: 0 bytes in 0 blocks\r\n==69317==      possibly lost: 592 bytes in 1 blocks\r\n==69317==    still reachable: 1,950,159 bytes in 27,307 blocks\r\n==69317==                       of which reachable via heuristic:\r\n==69317==                         stdstring          : 1,395,203 bytes in 25,958 blocks\r\n==69317==         suppressed: 0 bytes in 0 blocks\r\n==69317== Rerun with --leak-check=full to see details of leaked memory\r\n==69317== \r\n==69317== For counts of detected and suppressed errors, rerun with: -v\r\n==69317== Use --track-origins=yes to see where uninitialised values come from\r\n==69317== ERROR SUMMARY: 198 errors from 17 contexts (suppressed: 0 from 0)\r\n[1]    69317 segmentation fault  valgrind --tool=memcheck target/debug/deps/tikv-0ad0136b98d90239 test_div_mod\r\n```",
  "state": "closed",
  "created_at": "2018-11-09T09:26:02Z",
  "updated_at": "2019-03-27T05:13:48Z",
  "closed_at": "2019-03-27T05:13:48Z",
  "labels": [
    "type/bug",
    "component/test-bench"
  ],
  "comments_data": [
    {
      "id": 437799972,
      "user": "breezewish",
      "created_at": "2018-11-12T08:44:05Z",
      "body": "Seems that this is a false-positive because the code comes from native rust."
    },
    {
      "id": 476828764,
      "user": "Hoverbear",
      "created_at": "2019-03-26T20:11:41Z",
      "body": "@breeswish Seems this can be closed then?"
    },
    {
      "id": 476978872,
      "user": "breezewish",
      "created_at": "2019-03-27T05:13:48Z",
      "body": "Yes! @Hoverbear "
    }
  ]
}