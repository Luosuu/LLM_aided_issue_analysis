{
  "issue_number": 8248,
  "title": "cases::test_conf_change::test_destroy_local_reader not work",
  "body": "## Bug Report\r\n\r\n<!-- Thanks for your bug report! Don't worry if you can't fill out all the sections. -->\r\n\r\n### What version of TiKV are you using?\r\nMaster\r\n\r\n### What operating system and CPU are you using?\r\n<!-- If you're using Linux, you can run `cat /proc/cpuinfo` -->\r\n\r\n### Steps to reproduce\r\ncargo test --package tests --features failpoints --test failpoints -- cases::test_conf_change::test_destroy_local_reader --exact --nocapture\r\n\r\n### What did you expect?\r\nfailpoint code executes after `fail::cfg(reader_has_delegate, \"panic\").unwrap();` but indeed it not, so failpoint config is invalid.\r\n",
  "state": "closed",
  "created_at": "2020-07-14T13:07:37Z",
  "updated_at": "2020-08-26T07:26:54Z",
  "closed_at": "2020-08-26T07:26:54Z",
  "labels": [
    "type/bug"
  ],
  "comments_data": [
    {
      "id": 680707566,
      "user": "NingLin-P",
      "created_at": "2020-08-26T07:22:58Z",
      "body": "> failpoint code executes after fail::cfg(reader_has_delegate, \"panic\").unwrap(); but indeed it not.\r\n\r\nThis is expected, the test case testing that the `ReadDelegate` should be destroyed after the peer removed, and the failpoint will panic if the `ReadDelegate` still exists."
    },
    {
      "id": 680709242,
      "user": "hunterlxt",
      "created_at": "2020-08-26T07:26:54Z",
      "body": "Ok, I didnâ€™t expect failpoint to be used as `assert`, closed this issue."
    }
  ]
}