{
  "issue_number": 11156,
  "title": "Panic when activating heap profiling",
  "body": "## Bug Report\r\n\r\nIf heap profiling exited accidentally, panic would happen when activating heap profiling again because `on_end` was not called.\r\n\r\n```\r\n[2021/10/24 12:11:41.287 +00:00] [INFO] [profile.rs:132] [\"periodical heap profiling is started\"]\r\n[2021/10/24 12:12:41.288 +00:00] [WARN] [profile.rs:148] [\"the heap profiling dump loop shouldn't break\"]\r\n```\r\n```\r\n[2021/10/25 07:00:28.381 +00:00] [FATAL] [lib.rs:465] [\"assertion failed: activate.is_none()\"] [backtrace=\"   0: tikv_util::set_panic_hook::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/components/tikv_util/src/lib.rs:464:18\\n   1: std::panicking::rust_panic_with_hook\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:626:17\\n   2: std::panicking::begin_panic_handler::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:517:13\\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:141:18\\n   4: rust_begin_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:515:5\\n   5: core::panicking::panic_fmt\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/panicking.rs:92:14\\n   6: core::panicking::panic\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/panicking.rs:50:5\\n   7: tikv::server::status_server::profile::activate_heap_profile::{{closure}}::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/server/status_server/profile.rs:128:9\\n      tikv::server::status_server::profile::ProfileGuard<I,T>::new\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/server/status_server/profile.rs:68:20\\n      tikv::server::status_server::profile::activate_heap_profile::{{closure}}\\n             at home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/server/status_server/profile.rs:154:5\\n      <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/future/mod.rs:80:19\\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:161:17\\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/loom/std/unsafe_cell.rs:14:9\\n      tokio::runtime::task::core::CoreStage<T>::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:151:13\\n      tokio::runtime::task::harness::poll_future::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:461:19\\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:347:9\\n      std::panicking::try::do_call\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:401:40\\n      std::panicking::try\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:365:19\\n      std::panic::catch_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:434:14\\n      tokio::runtime::task::harness::poll_future\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:449:18\\n   8: tokio::runtime::task::harness::Harness<T,S>::poll_inner\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:98:27\\n      tokio::runtime::task::harness::Harness<T,S>::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:53:15\\n      tokio::runtime::task::raw::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/raw.rs:113:5\\n   9: tokio::runtime::task::raw::RawTask::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/raw.rs:70:18\\n      tokio::runtime::task::LocalNotified<S>::run\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/mod.rs:343:9\\n      tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:443:21\\n      tokio::coop::with_budget::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/coop.rs:106:9\\n      std::thread::local::LocalKey<T>::try_with\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/local.rs:399:16\\n      std::thread::local::LocalKey<T>::with\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/local.rs:375:9\\n      tokio::coop::with_budget\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/coop.rs:99:5\\n      tokio::coop::budget\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/coop.rs:76:5\\n      tokio::runtime::thread_pool::worker::Context::run_task\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:419:9\\n  10: tokio::runtime::thread_pool::worker::Context::run\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:386:24\\n      tokio::runtime::thread_pool::worker::run::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:371:17\\n      tokio::macros::scoped_tls::ScopedKey<T>::set\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/macros/scoped_tls.rs:61:9\\n      tokio::runtime::thread_pool::worker::run\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:368:5\\n      tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:347:45\\n      <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/blocking/task.rs:42:21\\n      tokio::runtime::task::core::CoreStage<T>::poll::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:161:17\\n      tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/loom/std/unsafe_cell.rs:14:9\\n      tokio::runtime::task::core::CoreStage<T>::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:151:13\\n      tokio::runtime::task::harness::poll_future::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:461:19\\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:347:9\\n      std::panicking::try::do_call\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:401:40\\n      std::panicking::try\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:365:19\\n      std::panic::catch_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:434:14\\n      tokio::runtime::task::harness::poll_future\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:449:18\\n      tokio::runtime::task::harness::Harness<T,S>::poll_inner\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:98:27\\n      tokio::runtime::task::harness::Harness<T,S>::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/harness.rs:53:15\\n      tokio::runtime::task::raw::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/raw.rs:113:5\\n  11: tokio::runtime::task::raw::RawTask::poll\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/raw.rs:70:18\\n      tokio::runtime::task::UnownedTask<S>::run\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/mod.rs:379:9\\n      tokio::runtime::blocking::pool::Inner::run\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/blocking/pool.rs:265:17\\n      tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}\\n             at rust/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/blocking/pool.rs:245:17\\n      std::sys_common::backtrace::__rust_begin_short_backtrace\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys_common/backtrace.rs:125:18\\n  12: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:476:17\\n      <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:347:9\\n      std::panicking::try::do_call\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:401:40\\n      std::panicking::try\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panicking.rs:365:19\\n      std::panic::catch_unwind\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/panic.rs:434:14\\n      std::thread::Builder::spawn_unchecked::{{closure}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/thread/mod.rs:475:30\\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/core/src/ops/function.rs:227:5\\n  13: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/alloc/src/boxed.rs:1572:9\\n      std::sys::unix::thread::Thread::new::thread_start\\n             at rustc/2faabf579323f5252329264cc53ba9ff803429a3/library/std/src/sys/unix/thread.rs:91:17\\n  14: <unknown>\\n  15: clone\\n\"] [location=/home/jenkins/agent/workspace/build-common/go/src/github.com/pingcap/tikv/src/server/status_server/profile.rs:128] [thread_name=status-server]\r\n```\r\n",
  "state": "closed",
  "created_at": "2021-10-27T09:33:14Z",
  "updated_at": "2021-10-27T12:50:50Z",
  "closed_at": "2021-10-27T12:50:50Z",
  "labels": [
    "type/bug"
  ],
  "comments_data": []
}