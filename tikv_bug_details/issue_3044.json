{
  "issue_number": 3044,
  "title": "thread 'raftstore::store::util::tests::test_lease' panicked at 'assertion failed",
  "body": "```\r\nthread 'raftstore::store::util::tests::test_lease' panicked at 'assertion failed: `(left == right)`    left: `Valid`,   right: `Expired`', src/raftstore/store/util.rs:450:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\nCc https://github.com/pingcap/tikv/pull/2993#issuecomment-386187785",
  "state": "closed",
  "created_at": "2018-05-09T04:48:13Z",
  "updated_at": "2020-12-04T09:34:47Z",
  "closed_at": "2020-12-04T09:34:47Z",
  "labels": [
    "type/bug",
    "sig/raft",
    "priority/high",
    "severity/major"
  ],
  "comments_data": [
    {
      "id": 387626164,
      "user": "overvenus",
      "created_at": "2018-05-09T05:41:24Z",
      "body": "The backtrace:\r\n\r\n```\r\ntest raftstore::store::util::tests::test_lease ... thread 'raftstore::store::util::tests::test_lease' panicked at 'assertion failed: `(left == right)`\r\n  left: `Valid`,\r\n right: `Expired`', src/raftstore/store/util.rs:450:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:207\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:223\r\n   4: tikv::util::panic_hook::track_hook::{{closure}}\r\n             at src/util/panic_hook.rs:59\r\n   5: <std::thread::local::LocalKey<T>>::try_with\r\n             at /checkout/src/libstd/thread/local.rs:290\r\n   6: <std::thread::local::LocalKey<T>>::with\r\n             at /checkout/src/libstd/thread/local.rs:244\r\n   7: tikv::util::panic_hook::track_hook\r\n             at src/util/panic_hook.rs:53\r\n   8: core::ops::function::Fn::call\r\n             at /checkout/src/libcore/ops/function.rs:73\r\n   9: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:403\r\n  10: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:349\r\n  11: tikv::raftstore::store::util::tests::test_lease\r\n             at src/raftstore/store/util.rs:450\r\n  12: tikv::__test::TESTS::{{closure}}\r\n             at src/raftstore/store/util.rs:429\r\n  13: core::ops::function::FnOnce::call_once\r\n             at /checkout/src/libcore/ops/function.rs:223\r\n  14: <F as alloc::boxed::FnBox<A>>::call_box\r\n             at libtest/lib.rs:1453\r\n             at /checkout/src/libcore/ops/function.rs:223\r\n             at /checkout/src/liballoc/boxed.rs:635\r\n  15: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\nFAILED\r\n```\r\n\r\nAnd the link: https://circleci.com/gh/Librazy/tikv/27?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link"
    },
    {
      "id": 387981792,
      "user": "overvenus",
      "created_at": "2018-05-10T07:58:42Z",
      "body": "Okay, after I applied the patch,\r\n\r\n```diff\r\ndiff --git a/src/raftstore/store/util.rs b/src/raftstore/store/util.rs\r\nindex 332f821..e8f7f32 100644\r\n--- a/src/raftstore/store/util.rs\r\n+++ b/src/raftstore/store/util.rs\r\n@@ -446,10 +446,14 @@ mod tests {\r\n         assert_eq!(lease.inspect(None), LeaseState::Valid);\r\n\r\n         // After lease expired time.\r\n+        let start = monotonic_raw_now();\r\n         thread::sleep(duration.to_std().unwrap());\r\n+        let end = monotonic_raw_now();\r\n         assert_eq!(\r\n-            lease.inspect(Some(monotonic_raw_now())),\r\n-            LeaseState::Expired\r\n+            lease.inspect(Some(end)),\r\n+            LeaseState::Expired,\r\n+            \"sleep: {:?}\",\r\n+            end - start\r\n         );\r\n         assert_eq!(lease.inspect(None), LeaseState::Expired);\r\n```\r\n\r\nI got a panicking message:\r\n\r\n```\r\ntest raftstore::store::util::tests::test_lease ... thread 'raftstore::store::util::tests::test_lease' panicked at 'assertion failed: `(left == right)`\r\n  left: `Valid`,\r\n right: `Expired`: sleep: Duration { secs: 1, nanos: 499984399 }', src/raftstore/store/util.rs:452:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n...\r\n```\r\n\r\nThe `duration` is 1.5s (the lease is 1.5s too), so the thread is put to sleep\r\nat least 1.5s [0], but the message says it only slept 1.49s. It smells like\r\nclock jumps back. The clocksource is `kvm-clock` in the circle VM.\r\n\r\n[0] http://pubs.opengroup.org/onlinepubs/9699919799/functions/nanosleep.html\r\n"
    },
    {
      "id": 409125907,
      "user": "overvenus",
      "created_at": "2018-07-31T07:38:20Z",
      "body": "Another failed test:\r\n\r\n```\r\ntest raftstore::store::util::tests::test_lease ... thread 'raftstore::store::util::tests::test_lease' panicked at 'assertion failed: `(left == right)`\r\n  left: `Valid`,\r\n right: `Expired`: elapsed monotonic_raw: Duration { secs: 1, nanos: 499637189 }, monotonic: Duration { secs: 1, nanos: 500149657 }', src/raftstore/store/util.rs:627:13\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: tikv::util::panic_hook::track_hook::{{closure}}\r\n             at src/util/panic_hook.rs:59\r\n   5: <std::thread::local::LocalKey<T>>::try_with\r\n             at /checkout/src/libstd/thread/local.rs:294\r\n   6: <std::thread::local::LocalKey<T>>::with\r\n             at /checkout/src/libstd/thread/local.rs:248\r\n   7: tikv::util::panic_hook::track_hook\r\n             at src/util/panic_hook.rs:53\r\n   8: core::ops::function::Fn::call\r\n             at /checkout/src/libcore/ops/function.rs:73\r\n   9: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n  10: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n  11: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:345\r\n  12: tikv::raftstore::store::util::tests::test_lease::sleep_test\r\n             at src/raftstore/store/util.rs:627\r\n  13: tikv::raftstore::store::util::tests::test_lease\r\n             at src/raftstore/store/util.rs:656\r\n  14: tikv::__test::TESTS::{{closure}}\r\n             at src/raftstore/store/util.rs:617\r\n  15: core::ops::function::FnOnce::call_once\r\n             at /checkout/src/libcore/ops/function.rs:223\r\n  16: <F as alloc::boxed::FnBox<A>>::call_box\r\n             at libtest/lib.rs:1454\r\n             at /checkout/src/libcore/ops/function.rs:223\r\n             at /checkout/src/liballoc/boxed.rs:640\r\n  17: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:106\r\nFAILED\r\n```\r\n\r\nhttps://github.com/pingcap/tikv/blob/c24136a6eb62388ab15a35e2f683d07fae171cad/src/raftstore/store/util.rs#L619-L635\r\n\r\nhttps://circleci.com/gh/overvenus/tikv/674?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\r\n\r\n"
    }
  ]
}