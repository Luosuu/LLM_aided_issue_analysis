{
  "issue_number": 7141,
  "title": "unexpected behavior for bytes column in where clause",
  "body": "## Bug Report\r\n\r\nRun one SQL (from copr-test) but different results.\r\n\r\n```sql\r\nSELECT EXP( `col_set` ) AS field1, `col_timestamp_key` % '2013-03-22' AS field2, DEGREES( '15:00:34.037137' ) AS field3 FROM `table1_int_autoinc` WHERE `col_binary_8_key` AND '2006-04-04 16:25:30.047980'\r\n```\r\n\r\nRight after tidb starts, this SQL query will generate an IndexScan op (as `col_binary_8_key` is an index). Because `col_set` is too big, this SQL query will return an error.\r\n\r\nBut after several minutes, the execution plan will change. TiDB will generate Selection op to fully scan this table. While the filter `col_binary_8_key` is a `Bytes`, TiKV will convert it to int (with str2int rule) and compare it will 0.\r\n\r\n```rust\r\nimpl AsMySQLBool for Bytes {\r\n    #[inline]\r\n    fn as_mysql_bool(&self, context: &mut EvalContext) -> Result<bool> {\r\n        Ok(!self.is_empty() && self.to_int(context, FieldTypeTp::LongLong)? != 0)\r\n    }\r\n}\r\n```\r\n\r\nActually this column is string \"lyashfuw\" so converting it to int will get a zero, and no row is returned. As a result, this query doesn't get an error.\r\n\r\n### What version of TiKV are you using?\r\n\r\n```\r\nRelease Version:   4.1.0-alpha\r\nGit Commit Hash:   18b87012ac3450e8037baaa61ea26a73c40ef33e\r\nGit Commit Branch: master\r\nUTC Build Time:    2020-03-18 07:46:43\r\nRust Version:      rustc 1.42.0-nightly (0de96d37f 2019-12-19)\r\nEnable Features:   jemalloc portable sse protobuf-codec\r\nProfile:           debug\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nSee copr-test\r\n\r\n### What did you expect?\r\n\r\nReturn no rows.\r\n\r\n### What did happened?\r\n\r\nSometimes return an error but after several times no row is returned.\r\n",
  "state": "closed",
  "created_at": "2020-03-18T08:27:30Z",
  "updated_at": "2020-03-18T08:58:49Z",
  "closed_at": "2020-03-18T08:49:32Z",
  "labels": [
    "type/bug",
    "sig/coprocessor"
  ],
  "comments_data": [
    {
      "id": 600497340,
      "user": "YangKeao",
      "created_at": "2020-03-18T08:49:32Z",
      "body": "As the expected behavior is to return no rows. It seems like a bug in tidb. Exclude 48 (\"0\") is not enough\r\n\r\n```\r\n+---------------------------------+---------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n| id                              | estRows | task      | operator info                                                                                                                                                                                                                      |\r\n+---------------------------------+---------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n| Projection_4                    | 6656.67 | root      | exp(cast(test.table1_int_autoinc.col_set, double BINARY))->Column#62, mod(cast(test.table1_int_autoinc.col_timestamp_key, double BINARY), 2013)->Column#63, 859.4366926962349->Column#64, test.table1_int_autoinc.col_binary_8_key |\r\n|   IndexLookUp_10                | 6656.67 | root      |                                                                                                                                                                                                                                    |\r\n|     IndexRangeScan_8(Build)     | 6656.67 | cop[tikv] | table:table1_int_autoinc, index:col_binary_8_key, range:[-inf,\"[48]\"), (\"[48]\",+inf], keep order:false, stats:pseudo                                                                                                               |\r\n|     TableRowIDScan_9(Probe)     | 6656.67 | cop[tikv] | table:table1_int_autoinc, keep order:false, stats:pseudo                                                                                                                                                                           |\r\n+---------------------------------+---------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\r\n```"
    }
  ]
}