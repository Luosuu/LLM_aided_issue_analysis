[
  {
    "bug_location": "Redis Sentinel Authentication/ACL System",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Insufficient ACL permissions for sentinel nodes to perform failover detection and master down verification, specifically missing the 'sentinel|is-master-down-by-addr' permission which prevents failover mechanism from triggering",
    "issue_number": 9772.0,
    "title": "[BUG] no failover with aclfile and different sentinel users/passwords"
  },
  {
    "bug_location": "tests/unit/memefficiency.tcl",
    "severity": 2,
    "categories": [
      "Performance"
    ],
    "root_cause": "Timing-related test failure where max latency exceeded expected threshold of 30ms, likely due to system resource constraints or test environment variability",
    "issue_number": 11868.0,
    "title": "[BUG] [err]: Active defrag in tests/unit/memefficiency.tcl"
  },
  {
    "bug_location": "scripting.c, sort command handling in Lua",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect conditional logic in luaRedisGenericCommand() that causes unintended sorting of results when using 'nosort' parameter in Lua scripts, specifically breaking the expected order of interleaved sort results",
    "issue_number": 545.0,
    "title": "2.6RC4 sort command is broken in Lua due to automatic resorting of output"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to diagnose the specific bug or crash",
    "issue_number": 13162.0,
    "title": "[CRASH] <short description>"
  },
  {
    "bug_location": "Lua Scripting Engine / Memory Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or segmentation fault during Lua function call (luaD_call) on Mac OSX Big Sur with Rosetta 2 translation layer",
    "issue_number": 8201.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Cluster Component (raxRecursiveFree function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference in the radix tree (rax) recursive free function during cluster synchronization",
    "issue_number": 8400.0,
    "title": "[CRASH]  Redis 5.0.5 crashed by signal: 11"
  },
  {
    "bug_location": "RedisJSON module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent return value behavior for JSON.GET command when retrieving single field, returning an array instead of a direct value",
    "issue_number": 13028.0,
    "title": "[BUG] json.get default behavior is dumb and unintuitive"
  },
  {
    "bug_location": "Transaction/WATCH Command",
    "severity": 3,
    "categories": [
      "Transaction",
      "CodeBug"
    ],
    "root_cause": "Current implementation of WATCH command does not properly handle key expiration, causing unexpected behavior where expired keys are silently ignored during transaction validation",
    "issue_number": 7918.0,
    "title": "[BUG] WATCH ignores keys which has expired"
  },
  {
    "bug_location": "List Command (LINDEX)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or stack buffer overflow during LINDEX command execution, likely triggered by a listpack operation with unexpected memory state",
    "issue_number": 13203.0,
    "title": "[CRASH] Redis 7.2.4 crashed by signal: 6, si_code: -6"
  },
  {
    "bug_location": "Redis Documentation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Inconsistent documentation about maximum string value size between different pages, originally caused by a change from 1GB to 512MB limit to support 32-bit bitmap addressing",
    "issue_number": 210.0,
    "title": "Binary string as value max size"
  },
  {
    "bug_location": "Redis SSCAN command implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "SSCAN count parameter does not strictly limit returned elements for small integer sets (intset encoding), returning all elements instead of respecting the specified count",
    "issue_number": 11872.0,
    "title": "[BUG] redis version 6.2.3 sscan count is not work for int number"
  },
  {
    "bug_location": "Redis Kernel Detection Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Inability to detect ARM64 Copy-on-Write (COW) kernel bug due to missing /proc/self/smaps support, which prevents Redis from safely determining kernel compatibility",
    "issue_number": 13107.0,
    "title": "[BUG] Faied to test for arm64 COW bug"
  },
  {
    "bug_location": "Redis CLI Info Reporting",
    "severity": 1,
    "categories": [
      "CodeBug",
      "Monitoring"
    ],
    "root_cause": "Misreporting of Redis mode in standalone configuration, which does not accurately reflect the Sentinel-managed replication setup",
    "issue_number": 8656.0,
    "title": "[BUG] Redis-cli INFO says its running in standalone mode even though it is running with Sentinel (6.0.10)"
  },
  {
    "bug_location": "Redis Module Replication System",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "RM_ReplicateVerbatim fails when called in a reply callback or from a different thread, likely due to improper client context handling during thread-safe context generation",
    "issue_number": 4458.0,
    "title": "[Module][Bug] Replication does not work if called in different thread "
  },
  {
    "bug_location": "RDB Loading/Persistence Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Memory corruption during RDB file loading, likely related to architecture compatibility issue between ARM (M2 Mac) and x86_64 Linux environment in Docker",
    "issue_number": 12806.0,
    "title": "[CRASH] My Redis server is crashing. Im on a Mac Book Pro, M2, using docker"
  },
  {
    "bug_location": "Redis Shutdown Script",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "The shutdown script does not properly parse TLS port configuration from the Redis configuration file, causing incorrect port detection when TLS is enabled",
    "issue_number": 9355.0,
    "title": "[BUG] redis-shutdown doesn't use tls-port"
  },
  {
    "bug_location": "Redis Module Loading System",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Security"
    ],
    "root_cause": "Null pointer dereference during module unloading when invalid configuration is provided, causing server crash",
    "issue_number": 13650.0,
    "title": "[CRASH] MODULE LOADEX invalid config"
  },
  {
    "bug_location": "Redis Database Persistence Layer",
    "severity": 3,
    "categories": [
      "Storage",
      "Recovery",
      "Config"
    ],
    "root_cause": "Potential RDB file corruption or invalid database file signature during Redis startup, likely caused by improper file handling, mixed volume configurations, or incomplete/corrupted persistence files",
    "issue_number": 10973.0,
    "title": "[CRASH] Fatal error loading the DB: Invalid argument. Exiting."
  },
  {
    "bug_location": "Redis core memory management (dictAddRaw function)",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential memory allocation or dictionary manipulation issue during SADD command execution, possibly related to set type operations",
    "issue_number": 8861.0,
    "title": "[CRASH] Redis 6.2.1 crashed."
  },
  {
    "bug_location": "evict.c in Redis 5.0 memory eviction mechanism",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "The keys_freed variable in freeMemoryIfNeeded() function is not correctly tracking or incrementing the number of keys freed during memory eviction, potentially limiting memory reclamation effectiveness",
    "issue_number": 8760.0,
    "title": "[BUG] The keys_freed variable in the freeMemoryIfNeeded(void) function of evict.c in redis5.0 does not work, it is always less than or equal to 1"
  },
  {
    "bug_location": "Redis Lua scripting and key expiration mechanism",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Race condition in key expiration during Lua script execution where master and slave nodes handle key existence and increments differently, causing inconsistent state across nodes",
    "issue_number": 1525.0,
    "title": "EVAL replicated + conditionals about key existence = replication bug."
  },
  {
    "bug_location": "Module Pipe Handling Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Failure to consistently call moduleHandleBlockedClients when modulePipeReadable is invoked, leading to potential missed client unblock requests during background thread operations",
    "issue_number": 12369.0,
    "title": "[BUG] Background threads are unable to reliably wakeup blocked clients."
  },
  {
    "bug_location": "Redis ACL (Access Control List) module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "The `reset` operation for ACL users implicitly adds the `sanitize-payload` configuration, which is not part of the true default user state. This was introduced in a code change (commit #7807) where `sanitize-payload` was explicitly added during the reset process, deviating from the expected complete reset behavior.",
    "issue_number": 11278.0,
    "title": "[BUG] `ACL SETUSER ... reset` doesn't revert to true defaults"
  },
  {
    "bug_location": "dict.c, hash function (dictGenHashFunction)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Unaligned memory access causing bus error on SPARC architecture when reading 4-byte values from non-4-byte aligned memory addresses",
    "issue_number": 3618.0,
    "title": "Redis 3.2.0 - Crash in hash function caused by access to misaligned memory on Sparc"
  },
  {
    "bug_location": "Build System / Compilation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Missing explicit linking to libatomic for 32-bit architectures where atomic operations require runtime library support",
    "issue_number": 13535.0,
    "title": "[BUG] Some 32-bit archs need linking to libatomic, otherwise build fails with undefined `___atomic_load_8` etc."
  },
  {
    "bug_location": "Key Validation/Type Handling",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Existing key with different type prevents zadd operation on keys starting with '5f' prefix",
    "issue_number": 7660.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Command Implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing timeout parameter in BLMOVE command, which is required but not clearly documented initially",
    "issue_number": 9288.0,
    "title": "[BUG] Either the blmove documentation is incorrect, or the blmove implementation is broken"
  },
  {
    "bug_location": "Redis Set and Scripting Engine",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Non-deterministic element ordering in set commands when used within Lua scripts, which can cause inconsistent script execution results across different runs",
    "issue_number": 165.0,
    "title": "Modify SMEMBERS behavior when the client is a Lua script"
  },
  {
    "bug_location": "server.c (Replication and Command Processing)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Assertion failure during client pause when a replica attempts to send a mutating command (like SET) during a failover process, violating an internal consistency check in the Redis server",
    "issue_number": 8712.0,
    "title": "[CRASH]The psync command will crash redis"
  },
  {
    "bug_location": "node-redis client",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Potential compatibility issue with SET command expiry parameter in node-redis client version, causing unexpected behavior when setting key expiration",
    "issue_number": 13029.0,
    "title": "[BUG]Expiry value not working in client.SET() i.e EX attribute"
  },
  {
    "bug_location": "Redis Build System",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Missing pkg-config dependency detection causes silent build configuration changes without proper error handling or user notification when systemd support cannot be properly determined",
    "issue_number": 8059.0,
    "title": "[BUG] If pkg-config is missing, redis is silently built without systemd support"
  },
  {
    "bug_location": "Redis Semantic Cache / RediSearch Module",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade",
      "Performance"
    ],
    "root_cause": "Missing RediSearch module (version >= 2.4) required for vector database functionality in Redis, with potential version compatibility issue between Redis, RediSearch, and LangChain library",
    "issue_number": 13356.0,
    "title": "[BUG]ValueError: Redis failed to connect: Redis cannot be used as a vector database without RediSearch >=2.4Please head to https://redis.io/docs/stack/search/quick_start/to know more about installing the RediSearch module within Redis Stack."
  },
  {
    "bug_location": "server.c latency measurement",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Using gettimeofday() which can be affected by system clock adjustments, potentially causing inaccurate latency measurements compared to monotonic time sources like clock_gettime(CLOCK_MONOTONIC)",
    "issue_number": 5225.0,
    "title": "[BUG] why use gettimeofday to measure latency"
  },
  {
    "bug_location": "Redis Floating Point Arithmetic",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Platform-specific floating point precision differences between macOS and Linux, causing rounding errors in floating point increment operations due to variations in floating point representation and computation",
    "issue_number": 12651.0,
    "title": "[BUG] Rounding errors on macOS"
  },
  {
    "bug_location": "Redis Lua scripting engine",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory leak or inconsistent memory management in Lua scripting stack during repeated script executions, possibly related to garbage collection behavior or script context retention",
    "issue_number": 11960.0,
    "title": "[BUG] 'EVAL does not leak in the Lua stack' (scripting.tcl) seems to be a flakey test"
  },
  {
    "bug_location": "Redis Server Core",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Unknown"
    ],
    "root_cause": "Potential architecture-specific compatibility issue with ARM-based Mac M1 chip, likely related to binary compilation or low-level system interactions",
    "issue_number": 8992.0,
    "title": "[CRASH] ARM based Mac with m1 chip"
  },
  {
    "bug_location": "RedisGraph module (redisgraph.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Memory corruption or null pointer dereference in ShortestPath_Clone function during graph query execution, specifically when attempting to compute the shortest path between nodes",
    "issue_number": 10571.0,
    "title": "[CRASH] redisgraph.so (ShortestPath_Clone+0x20)"
  },
  {
    "bug_location": "Replication/Replica Sync",
    "severity": 4,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect handling of EVAL command during replica synchronization when replica-serve-stale-data is disabled, likely due to improper command flag management introduced in Redis 7",
    "issue_number": 10508.0,
    "title": "[CRASH] Replication crashes on EVAL when replica-serve-stale-data=no (introduced in Redis 7)"
  },
  {
    "bug_location": "ziplist memory management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Memory corruption likely caused by faulty RAM, resulting in segmentation fault during ziplist deletion operation",
    "issue_number": 8637.0,
    "title": "[CRASH] redis crash with exit code 11,"
  },
  {
    "bug_location": "Redis Quicklist Iterator Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory management issue with iterator release mechanism where `zfree` is used instead of `quicklistReleaseIterator`, which might prevent proper node compression and lead to iterator state inconsistency",
    "issue_number": 8993.0,
    "title": "[QUESTION] using iterators when insert to a list"
  },
  {
    "bug_location": "Unix Socket Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Security"
    ],
    "root_cause": "Lack of granular permission control for Unix socket file permissions that could inadvertently affect other Redis-created files when process umask is changed",
    "issue_number": 85.0,
    "title": "configurable umask for unix socket"
  },
  {
    "bug_location": "Memory Management / RediSearch Module",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Potential memory tracking issue with RediSearch's ft.aggregate command, causing inconsistent memory reporting across Redis instances",
    "issue_number": 12526.0,
    "title": "[BUG] used_memory is seemingly incorrect, larger than the server's capacity"
  },
  {
    "bug_location": "Redis signal handling and crash reporting system",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Recovery",
      "Monitoring"
    ],
    "root_cause": "A code change related to crash reporting appears to have inadvertently disabled simultaneous generation of core files and crash reports, preventing developers from obtaining both diagnostic artifacts during a crash",
    "issue_number": 9522.0,
    "title": "[BUG] can't get both core file and crash report"
  },
  {
    "bug_location": "Redis ziplist integer encoding",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Incorrect byte manipulation when saving 24-bit integers, potentially causing incorrect memory representation during integer encoding in the ziplist data structure",
    "issue_number": 10666.0,
    "title": "[BUG] ziplist for 24bits  zipSaveInteger() functions"
  },
  {
    "bug_location": "Redis Replication System",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Incorrect replica client output buffer usage calculation when handling large keys, causing potential disconnection and synchronization issues during replication",
    "issue_number": 11667.0,
    "title": "[BUG] big keys can trigger replica buffer overrun/psync loops"
  },
  {
    "bug_location": "db.c (database component)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential data corruption or invalid RDB file during server startup, with an assertion failure in database object addition process (dbAdd function)",
    "issue_number": 9036.0,
    "title": "[CRASH] Windows 10 - Redis Server gives an error when trying to start, and Redis-cli cannot make connection with target machine."
  },
  {
    "bug_location": "Redis Server Configuration Binding Module",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Redis server does not strictly validate network bind addresses during startup, allowing partial configuration with unintended fallback behavior instead of failing completely when specified addresses are unavailable",
    "issue_number": 7933.0,
    "title": "[BUG] Redis-server should refuse to start with wrong bind address"
  },
  {
    "bug_location": "redis-check-aof.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Security"
    ],
    "root_cause": "Potential integer overflow when reading string length without proper bounds checking, which could lead to memory allocation issues or buffer overflows",
    "issue_number": 9668.0,
    "title": "[BUG] Missing check for string length in redis-check-aof.c leads to integer overflow."
  },
  {
    "bug_location": "Replication/Sorted Set Implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or race condition during database synchronization, specifically in the sorted set object deletion process during slave replication",
    "issue_number": 659.0,
    "title": "segfault in readSyncBulkPayload on redis 2.4.15"
  },
  {
    "bug_location": "Redis Core - Dictionary/Zset Operations",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access during dictionary/zset operation in Redis 6.2.6, likely triggered during data loading process",
    "issue_number": 11633.0,
    "title": "[CRASH] <short description>"
  },
  {
    "bug_location": "RedisGraph Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory access violation or segmentation fault in RedisGraph module during graph query execution, likely related to QEMU/ARM64 compatibility issue",
    "issue_number": 10734.0,
    "title": "[CRASH] Redis 6.2.6 crashed by signal: 11, si_code: 1"
  },
  {
    "bug_location": "Redis Replication System",
    "severity": 3,
    "categories": [
      "Performance",
      "Replication"
    ],
    "root_cause": "Inefficient traversal and preparation of replica write handlers during replication, causing high CPU overhead when feeding data to multiple slaves",
    "issue_number": 10428.0,
    "title": "[BUG]replicationFeedSlaves  still high CPU utilization in redis7.0 when it Replication backlog and replicas use one global shared replication buffer"
  },
  {
    "bug_location": "Persistence Layer (RDB/AOF)",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery"
    ],
    "root_cause": "Unable to move temporary RDB file to final destination due to missing file or directory permissions",
    "issue_number": 12780.0,
    "title": "[CRASH] Replica was unable to write command to disk"
  },
  {
    "bug_location": "Redis Sorted Set (ZSET) Implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect handling of dictionary value retrieval when using ZRANDMEMBER with a count of 1, causing an invalid score to be returned due to incorrect pointer dereferencing in the implementation",
    "issue_number": 9160.0,
    "title": "[BUG] `ZRANDMEMBER \u2026 1` returns invalid score"
  },
  {
    "bug_location": "Redis Benchmark Client / Cluster Protocol Handler",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network",
      "Transaction"
    ],
    "root_cause": "Incorrect protocol handling during multi-key MSET command in authenticated Redis cluster environment, specifically related to staging pointer management in the benchmark client",
    "issue_number": 8477.0,
    "title": "[BUG] redis 6.0 benchmark test redis-cluster mset with requirepass"
  },
  {
    "bug_location": "ContainerD Runtime",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "LoadBalance"
    ],
    "root_cause": "Image size validation mismatch between pulled image and expected image size during containerd runtime image commit process",
    "issue_number": 13156.0,
    "title": "[BUG] docker.io/library/redis:7.2.4-alpine not worked in containerd"
  },
  {
    "bug_location": "Redis Sentinel Configuration Management",
    "severity": 4,
    "categories": [
      "Security",
      "Config"
    ],
    "root_cause": "During configuration rewrite, Redis Sentinel creates a new temporary file and renames it, which bypasses original file permissions and umask settings, resulting in world-readable configuration files with sensitive credentials",
    "issue_number": 8369.0,
    "title": "[BUG] security: config rewrites of sentinel.conf set insecure file permissions"
  },
  {
    "bug_location": "RESP3 Protocol Specification",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Specification documentation does not match actual implementation behavior for floating point number representation in exponential format",
    "issue_number": 11891.0,
    "title": "[BUG] RESP3 spec \"Exponential format is invalid\" but redis returns them"
  },
  {
    "bug_location": "Memory Management / Core Runtime",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Potential memory access violation during pointer manipulation or memory allocation, likely caused by incompatible Windows build or unsupported compilation environment",
    "issue_number": 10336.0,
    "title": "[CRASH] Exception: STATUS_ACCESS_VIOLATION at rip=001801C7908"
  },
  {
    "bug_location": "Dictionary Scanning Component (dictScanCount2)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory access violation or segmentation fault in custom scanlimit command implementation during dictionary scanning, likely caused by buffer overflow or invalid memory pointer in a modified Redis version",
    "issue_number": 13613.0,
    "title": "[BUG]There is an error on redis:6.0 redis server frequently restart "
  },
  {
    "bug_location": "Redis-Benchmark Tool",
    "severity": 2,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Inconsistent data size handling and key management in benchmark tool, where GET test behavior depends on pre-existing database state and SET operations, causing non-deterministic benchmark results",
    "issue_number": 11328.0,
    "title": "[BUG] Bug in Redis-Benchmark"
  },
  {
    "bug_location": "object.c",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Unknown list encoding type encountered during object freeing process, causing a segmentation fault in the freeListObject function",
    "issue_number": 11430.0,
    "title": "[CRASH]  Guru Meditation: Unknown list encoding type #object.c:291"
  },
  {
    "bug_location": "RedisTimeSeries module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "TS.INFO command incorrectly uses REDISMODULE_WRITE flag when opening key, causing unnecessary invalidation messages even for read-only operations on non-existing or unchanged keys",
    "issue_number": 12772.0,
    "title": "[BUG] TS.INFO causes __redis__:invalidate"
  },
  {
    "bug_location": "Redis Scripting Engine",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Lack of distinct error prefixes for different SCRIPT KILL scenarios, causing potential ambiguity in error handling",
    "issue_number": 715.0,
    "title": "SCRIPT KILL should return a different error prefix for the two possible errors."
  },
  {
    "bug_location": "ReJSON module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Memory"
    ],
    "root_cause": "Memory corruption or invalid string handling during RDB save operation in ReJSON module, specifically in JSON serialization process",
    "issue_number": 11250.0,
    "title": "[CRASH] "
  },
  {
    "bug_location": "Redis Core/Background Tasks",
    "severity": 1,
    "categories": [
      "Performance",
      "Config"
    ],
    "root_cause": "Normal background periodic tasks (cron events) causing minimal CPU usage, which is expected behavior for Redis even when idle",
    "issue_number": 11165.0,
    "title": "[BUG] 2% CPU usage with no active clients"
  },
  {
    "bug_location": "Replication Protocol Handler",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Incompatibility between Redis 2.6.14 master's inline protocol and Redis 6.0.7 slave's protocol handling, specifically around SELECT command transmission",
    "issue_number": 7740.0,
    "title": "[BUG] Failure of 6.0.7 slave to replicate a 2.6.14 master"
  },
  {
    "bug_location": "Redis Blocking Operations (bzpopmin)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Potential floating-point precision issue causing incorrect timeout calculation in blocking pop operation, preventing expected non-blocking behavior when a very small timeout is specified",
    "issue_number": 11901.0,
    "title": "[BUG] bzpopmin foo 0.001 blocks forever"
  },
  {
    "bug_location": "Test Suite / Protocol Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Timing-related test instability, likely due to race condition or insufficient synchronization in protocol desync regression test",
    "issue_number": 350.0,
    "title": "test failure in 2.4.8"
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 4,
    "categories": [
      "Performance",
      "Transaction",
      "Memory"
    ],
    "root_cause": "Potential race condition or deadlock during index deletion and key expiration in RediSearch module, likely triggered by concurrent client operations and temporary index creation",
    "issue_number": 13480.0,
    "title": "[BUG] Redis Server Freeze"
  },
  {
    "bug_location": "Redis License",
    "severity": 4,
    "categories": [
      "Config",
      "Human"
    ],
    "root_cause": "License change from open source to a restrictive proprietary license that limits usability and community contribution",
    "issue_number": 13179.0,
    "title": "[BUG] Usability regression due to commit 0b34396"
  },
  {
    "bug_location": "db.c dictionary handling",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption or invalid key access during dictionary lookup in Redis database operations, specifically in the dictFind() function at line 868 of db.c",
    "issue_number": 8380.0,
    "title": "[CRASH]dictFind(db->dict,key->ptr) != NULL"
  },
  {
    "bug_location": "Build System/Makefile",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Potential suboptimal Makefile dependency declaration that triggers false positive dependency detection in static analysis",
    "issue_number": 11604.0,
    "title": "[BUG]dependency errors"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 2,
    "categories": [
      "Config",
      "Human"
    ],
    "root_cause": "Multiple Redis instances running simultaneously, causing configuration confusion and unexpected behavior",
    "issue_number": 10255.0,
    "title": "[BUG] requirepass just doesn't work"
  },
  {
    "bug_location": "Redis Cluster Rebalancing CLI",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Upgrade"
    ],
    "root_cause": "Inconsistent handling of slot rebalancing during node state transitions, specifically when masters are converted to replicas and encounter loading or state change errors during slot redistribution",
    "issue_number": 11104.0,
    "title": "[BUG] Slot rebalancing can stop due to loading error"
  },
  {
    "bug_location": "hiredis.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential NULL pointer dereference in sdsempty() function where return value is not checked before being used, which could lead to a segmentation fault when calling sdslen() on a NULL pointer",
    "issue_number": 9332.0,
    "title": "[BUG]A potential bug of NULL pointer dereference"
  },
  {
    "bug_location": "ae_select.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Bad file descriptor error in event loop polling mechanism, likely related to Cygwin's file descriptor handling incompatibility with Redis event loop implementation",
    "issue_number": 13597.0,
    "title": "[CRASH] crash on cygwin"
  },
  {
    "bug_location": "Redis TLS Configuration Management",
    "severity": 3,
    "categories": [
      "Config",
      "Security"
    ],
    "root_cause": "Redis does not automatically detect or reload TLS certificate files when they are updated, requiring manual intervention or server restart to use new certificates",
    "issue_number": 8756.0,
    "title": "[BUG] Redis Does Not Automatically Reload Certificates When Certificate File Updates"
  },
  {
    "bug_location": "redis-benchmark tool",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Lack of authentication validation before running benchmark tests, causing misleading performance metrics when authentication is required",
    "issue_number": 2337.0,
    "title": "redis-benchmark does not report error when no auth is provided "
  },
  {
    "bug_location": "Active Defragmentation (Active Defrag) Component",
    "severity": 4,
    "categories": [
      "Performance",
      "Replication",
      "Memory"
    ],
    "root_cause": "Potential memory defragmentation process causing performance degradation or resource contention during replica active defrag, leading to primary node unresponsiveness and subsequent cluster failover",
    "issue_number": 8706.0,
    "title": "[BUG] Active defrag may cause cluster node failover"
  },
  {
    "bug_location": "Redis ACL (Access Control List) module",
    "severity": 3,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "Incomplete error reporting mechanism for subcommands that lack proper context when access is denied, resulting in missing parent command information in error messages and ACL log entries",
    "issue_number": 10094.0,
    "title": "[BUG] Subcommands blocked by ACL are reported without parent context"
  },
  {
    "bug_location": "Geo Commands (GEOSEARCHSTORE)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent command implementation where GEOSEARCHSTORE does not support WITHCOORD, WITHDIST, and WITHHASH options, despite documentation suggesting otherwise",
    "issue_number": 8864.0,
    "title": "[BUG] GEOSEARCHSTORE shows error when using WITHDIST, WITHHASH or WITHCOORD"
  },
  {
    "bug_location": "Redis test suite / CLI testing framework",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Likely an argument parsing issue in the Tcl test client script, specifically related to channel/file descriptor closing mechanism",
    "issue_number": 7727.0,
    "title": "[CRASH] Executing test client: wrong # args: should be \"close channelId\""
  },
  {
    "bug_location": "hiredis library (sds.c and hiredis.c)",
    "severity": 2,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential memory allocation and deallocation issues in string manipulation functions, specifically in sdscatvprintf and sdsMakeRoomFor functions",
    "issue_number": 9412.0,
    "title": "[BUG]several potential bugs of Memory Leak"
  },
  {
    "bug_location": "Redis Server Startup/PID File Creation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Compatibility issue with Apple Silicon M1 architecture and Rosetta 2 translation layer, causing segmentation fault during PID file creation",
    "issue_number": 8195.0,
    "title": "[BUG] Mac Air Big Sur 11.1 Apple Silicon M1"
  },
  {
    "bug_location": "Sorted Set (t_zset.c) implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or numerical precision issue in sorted set rank calculation, possibly related to large sorted sets with complex score distributions",
    "issue_number": 243.0,
    "title": "Crash with ASSERTION FAILED after longer uptime"
  },
  {
    "bug_location": "Redis SET command parser/implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incompatible command parameters NX and GET cannot be used simultaneously in a single SET command, as they represent mutually exclusive operations",
    "issue_number": 8838.0,
    "title": "[BUG] SET with NX and GET parameters"
  },
  {
    "bug_location": "adlist.c (List manipulation component)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or list manipulation error causing list->tail to become NULL unexpectedly, even when list length is non-zero",
    "issue_number": 11302.0,
    "title": "[CRASH] <crash at listRotateTailToHead+0x12 >"
  },
  {
    "bug_location": "Redis Cluster Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "SORT command with BY and GET options not properly disabled in Redis Cluster mode, which could lead to unexpected behavior or potential command routing issues",
    "issue_number": 206.0,
    "title": "Disallow SORT options BY and GET when cluster is enabled"
  },
  {
    "bug_location": "Redis Command Table",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Insufficient command flag configuration preventing proper script isolation and preventing potential script execution of inappropriate commands",
    "issue_number": 195.0,
    "title": "Set the no scripting flag to all the commands needing it"
  },
  {
    "bug_location": "debug.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Compiler-specific preprocessor macro handling causing incorrect code path selection for ARM 32-bit architecture when using CLANG, leading to compilation errors related to context register access",
    "issue_number": 8092.0,
    "title": "[BUG] CLANG compiler error on armv5 and armv7"
  },
  {
    "bug_location": "Redis CLI/Server Compatibility",
    "severity": 2,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Version mismatch between Redis CLI (v7.0) and Redis Server (v6.0), causing unrecognized REPLCONF option 'rdb-only'",
    "issue_number": 12341.0,
    "title": "[BUG] REPLCONF rdb-only error: ERR Unrecognized REPLCONF option: rdb-only"
  },
  {
    "bug_location": "src/acl.c, ACLAppendUserForLoading function",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Memory leak during user configuration loading in Redis configuration parsing, specifically in the ACLAppendUserForLoading function when processing user configurations from redis.conf",
    "issue_number": 12293.0,
    "title": "[BUG]There is a memory leak in ACLAppendUserForLoading  function"
  },
  {
    "bug_location": "src/replication.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Compiler fortification checks exposed a memory allocation size inconsistency in Redis's replication buffer allocation mechanism, specifically related to using malloc_usable_size() with GCC 13 and _FORTIFY_SOURCE=3",
    "issue_number": 11965.0,
    "title": "[CRASH] 7.0.10 memcpy sigabrt due to buffer overflow in replication.c line 367"
  },
  {
    "bug_location": "Redis systemd service initialization",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Potential permission or ownership issues with Redis data directories (/var/lib/redis, /var/log/redis, /var/run/redis) preventing proper systemd service startup",
    "issue_number": 8443.0,
    "title": "[BUG] Can't initialize Redis as a systemd service (supervised systemd) on Ubuntu Server 20.04.2"
  },
  {
    "bug_location": "Redis Cluster Component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Null pointer dereference in cluster packet processing, likely during cluster communication or node synchronization",
    "issue_number": 12972.0,
    "title": "[CRASH] Redis 7.0.4 crash"
  },
  {
    "bug_location": "Redis Connection Handling Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Potential unhandled file descriptor (-1) scenarios in connection management functions, which could lead to unexpected behavior or crashes if connection establishment fails",
    "issue_number": 12619.0,
    "title": "[BUG]P otential error handling bugs"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during Lua script execution, specifically in an EVAL command processing a job queue",
    "issue_number": 11859.0,
    "title": "[CRASH] <short description>"
  },
  {
    "bug_location": "Redis Event Loop (ae.c)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference in aeCreateTimeEvent() if aeCreateEventLoop() fails and returns NULL, without proper null check before accessing eventLoop->timeEventNextId",
    "issue_number": 7999.0,
    "title": "[BUG]Possible NULL pointer dereference on eventLoop->timeEventNextId++??"
  },
  {
    "bug_location": "Redis Test Suite / BLMPOP Command Handler",
    "severity": 2,
    "categories": [
      "Network",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Test case assumes deterministic network packet ordering and command processing sequence, which is not guaranteed in distributed systems with potential network delays or reordering",
    "issue_number": 9850.0,
    "title": "[BUG] One BLMPOP test case may fail on external server"
  },
  {
    "bug_location": "Redis Cluster Configuration Parser",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Replication"
    ],
    "root_cause": "Incompatible cluster configuration parsing between Redis 7.0 and 7.2 versions, specifically related to parsing the 'shard-id' field during cluster node configuration file loading",
    "issue_number": 12761.0,
    "title": "[BUG]\"corrupted cluster config file\" on redis 7.2.3 error when running redis cluster with mixed 7.0 and 7.2 nodes"
  },
  {
    "bug_location": "sds.c (String Dynamic Size handling)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Security"
    ],
    "root_cause": "Integer overflow vulnerability in memory allocation calculation when dynamically resizing SDS (Simple Dynamic Strings) buffers, potentially allowing buffer overflow or memory corruption",
    "issue_number": 9557.0,
    "title": "[BUG] Possible integer overflow in sds.c"
  },
  {
    "bug_location": "Redis logging/warning message system",
    "severity": 2,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "URL parsing issue in Windows Terminal when a warning message contains a URL ending with a period, causing incorrect link detection and browser opening behavior",
    "issue_number": 13360.0,
    "title": "[BUG] Clicking URL with period ( . ) at end of the URL in WSL opens the URL with period in browser"
  },
  {
    "bug_location": "Redis keyspace events handling in t_list.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect order of keyspace event notifications during LMOVE/RPOPLPUSH operations, where push events are generated before pop events, contrary to documented behavior",
    "issue_number": 11412.0,
    "title": "[BUG] RPOPLPUSH, LMOVE keyspace events produced in wrong order"
  },
  {
    "bug_location": "Redis Command Parsing/Validation",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Inconsistent error handling in command parameter validation when a key is missing, leading to different behavior based on key existence instead of enforcing strict syntax validation",
    "issue_number": 11731.0,
    "title": "[BUG] Bitcount doesn't return error for missing end parameter if key is missing"
  },
  {
    "bug_location": "Redis RDB Background Save (BGSAVE) Process",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption causing invalid string object length (sdslen) during background save, leading to segmentation fault when attempting to allocate memory or access data structures",
    "issue_number": 13649.0,
    "title": "[CRASH] redis crashes due to corrupted in-memory data structure"
  },
  {
    "bug_location": "zmalloc.h",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Platform-specific header inclusion issue where FreeBSD uses <stdlib.h> instead of <malloc.h>, causing compilation failure",
    "issue_number": 8601.0,
    "title": "[BUG] redis 6.2.1 build failed on FreeBSD 11.4, both amd64 and i386"
  },
  {
    "bug_location": "Redis client handling code",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Type mismatch between flag definition (uint64_t) and function parameter (int), which could potentially cause issues with high-bit flags",
    "issue_number": 9648.0,
    "title": "[BUG] client flags type with call() function, version >= 6.0"
  },
  {
    "bug_location": "Redis Scripting (Lua) Component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "In RESP3 map reply implementation, the key and value are being returned in an inverted order during Lua script execution, which breaks expected map/dictionary behavior and could potentially cause data interpretation errors",
    "issue_number": 8253.0,
    "title": "[BUG] RESP3 map reply in scripts have key and value inverted"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential compatibility issue with Lua globals during OS upgrade from OpenBSD 7.1 to 7.4, causing a key '__redis__compare_helper' to be added to Lua globals outside of allowed configuration",
    "issue_number": 12945.0,
    "title": "[CRASH] redis crashed at start"
  },
  {
    "bug_location": "redis-trib.rb cluster allocation algorithm",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "The cluster allocation algorithm does not effectively prevent master and slave instances from being allocated on the same physical host, which can reduce cluster availability and resilience",
    "issue_number": 2204.0,
    "title": "redis-trib.rb may allocate the slave and master in the same host"
  },
  {
    "bug_location": "Stream Trimming (XTRIM) Command",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "The `limit` option in the XTRIM command was not correctly implemented, causing all entries to be removed instead of respecting the specified limit during stream trimming",
    "issue_number": 9046.0,
    "title": "[BUG] The limit option of the xtrim command is invalid?"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Transaction",
      "Recovery"
    ],
    "root_cause": "Sentinel fails to properly track and elect a new master when the original master node is forcefully deleted and recreated with a different IP address, causing a potential race condition in master election and slave tracking",
    "issue_number": 9625.0,
    "title": "[BUG] Sentinels are not able to elect a new master"
  },
  {
    "bug_location": "Redis Stream XREADGROUP command processing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Timeout reset mechanism incorrectly resets blocking time when another client adds a message to the stream, causing the blocking time to extend beyond the specified timeout",
    "issue_number": 12998.0,
    "title": "[BUG] XREADGROUP block longer than timeout"
  },
  {
    "bug_location": "RDB (Redis Database) Persistence Module",
    "severity": 4,
    "categories": [
      "Storage",
      "CodeBug",
      "Recovery"
    ],
    "root_cause": "Duplicated key detected during RDB file loading, causing a segmentation fault in the rdbLoadRio function at rdb.c:2324",
    "issue_number": 12729.0,
    "title": "[BUG] Updated to new docker, can't start redis 6.0.8"
  },
  {
    "bug_location": "RDB (Redis Database) persistence module",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery",
      "CodeBug"
    ],
    "root_cause": "Potential memory corruption or invalid object type during RDB background save process in Redis 6.0.16, specifically in rdb.c at line 669, causing a segmentation fault during object serialization",
    "issue_number": 13127.0,
    "title": "[CRASH] Guru Meditation: Unknown object type #rdb.c:669"
  },
  {
    "bug_location": "Redis Database (db.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Likely a dictionary insertion failure during RDB file loading, specifically an assertion failure when attempting to add a key to the database with a return value that was not DICT_OK",
    "issue_number": 7793.0,
    "title": "[BUG] Redis-server service keeps crashing and restarting each 1-2 seconds"
  },
  {
    "bug_location": "Redis Cluster Radix Tree (rax) Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or use-after-free issue in the raxRecursiveFree function during radix tree memory deallocation, likely triggered during RDB loading or cluster state synchronization",
    "issue_number": 7719.0,
    "title": "Redis 5.0.3 crashed by signal: 11"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 13307.0,
    "title": "[CRASH] Redis 7.2.x crashes in activeDefragCycle when activedefrag disabled while running and re-enabled"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 9996.0,
    "title": "[BUG] `XREADGROUP` with no results does not reset `XINFO CONSUMERS` idle timer"
  },
  {
    "bug_location": "Redis Cluster Client Redirection Logic",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Network"
    ],
    "root_cause": "The `clusterRedirectBlockedClientIfNeeded` function does not correctly handle blocking read operations on replica nodes in readonly mode, causing unintended redirects to master nodes",
    "issue_number": 7877.0,
    "title": "[BUG] Blocking reads don't work on Redis Cluster replica nodes"
  },
  {
    "bug_location": "Build System / TLS Configuration",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Redis build system expects OpenSSL from Homebrew, but macOS uses LibreSSL by default, causing header file inclusion failure on macOS with Apple Silicon (arm64)",
    "issue_number": 12405.0,
    "title": "[BUG] build with TLS on macOS fails"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Sentinel caches IP addresses after hostname resolution and fails to dynamically update connection information when pod/instance IP changes, preventing proper failover when using DNS/hostnames",
    "issue_number": 9103.0,
    "title": "[BUG] Failover not happening after enabling announce-hostnames & resolve-hostnames in sentinel"
  },
  {
    "bug_location": "Redis Documentation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Documentation error where the error message format is incorrectly represented, showing backticks in the example when the actual implementation returns a plain string prefix",
    "issue_number": 9286.0,
    "title": "[BUG] EVALSHA's documented NOSCRIPT error return value differs from implementation?"
  },
  {
    "bug_location": "Redis Cluster Key Parsing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect key parsing mechanism in Redis Cluster that attempts to extract increment value from the key string instead of using the provided argument",
    "issue_number": 8986.0,
    "title": "[BUG] RedisCluster `INCRBY` parses key for incrementation value"
  },
  {
    "bug_location": "RediSearch module (vector index computation)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access during vector index inner product computation in RediSearch's SIMD vector similarity search implementation",
    "issue_number": 12199.0,
    "title": "[CRASH] <Crashed when search vector index,>"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Replication"
    ],
    "root_cause": "DNS resolution issue causing Sentinel communication failures between nodes",
    "issue_number": 13034.0,
    "title": "[BUG] Replica Sentinels become unresponsive shortly after startup"
  },
  {
    "bug_location": "src/cluster.c - clusterCron function",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential use-after-free vulnerability where a cluster link is freed but might still be referenced before being set to NULL, which could lead to memory access issues",
    "issue_number": 8798.0,
    "title": "[BUG] A potential use after free bug in clusterCron"
  },
  {
    "bug_location": "Redis Client Protocol Handler",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "The client reply mode (off/skip) incorrectly suppresses push notifications in addition to command replies, which is not the expected behavior of the protocol",
    "issue_number": 11874.0,
    "title": "[BUG] CLIENT REPLY OFF|SKIP would disable push notifications"
  },
  {
    "bug_location": "Redis ACL/Module Call Execution Context",
    "severity": 4,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "Insufficient user context propagation during script/function execution with RM_Call, allowing unauthorized command execution by bypassing ACL checks",
    "issue_number": 11231.0,
    "title": "[BUG] RM_Call for scripts/functions with \"C\" ACL check flag, doesn't acl check within script execution"
  },
  {
    "bug_location": "Redis Streams (XAUTOCLAIM command)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Potential issue with message retrieval mechanism in XAUTOCLAIM when handling very old pending messages, causing nil returns despite messages existing in the Pending Entry List (PEL)",
    "issue_number": 10198.0,
    "title": "[BUG] XAUTOCLAIM returns nil for old messages in PEL"
  },
  {
    "bug_location": "Redis Background Jobs Initialization",
    "severity": 4,
    "categories": [
      "Performance",
      "Config",
      "Unknown"
    ],
    "root_cause": "Unable to initialize background threads, possibly due to system configuration or resource constraints",
    "issue_number": 11527.0,
    "title": "[CRASH] Fatal: Can't initialize Background Jobs."
  },
  {
    "bug_location": "Redis Sentinel Configuration Rewrite",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent configuration file rewrite mechanism where dynamically updated configuration lines can appear both above and below the 'Generated by CONFIG REWRITE' comment, potentially causing confusion about which configurations are static versus dynamically modified",
    "issue_number": 9802.0,
    "title": "[BUG] Sentinel Config rewrite comment not ordered"
  },
  {
    "bug_location": "redis-cli command-line tool",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Redis CLI is adding an unintended newline character during the DUMP operation, which corrupts the serialized data payload and prevents successful RESTORE",
    "issue_number": 12631.0,
    "title": "[BUG] `redis-cli DUMP` add an extra `\\n` that breaks the DUMP"
  },
  {
    "bug_location": "Lua Script Conversion/Redis Core",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "A change in number conversion logic in Redis 7.2 (specifically in fpconv_dtoa function) causes incorrect handling of numeric values around 100,000,000 when converting from Lua script arguments to integers",
    "issue_number": 13113.0,
    "title": "[BUG] hIncrBy from lua \"ERR value is not an integer or out of range\" with numeric values of the form n * 100,000,000 in redis 7.2, but not 6.2 or 7.0"
  },
  {
    "bug_location": "Set operations (t_set.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential infinite loop in SRANDMEMBER command during dictionary rehashing, likely caused by a combination of dictionary resize prevention and uneven key distribution during background save operations",
    "issue_number": 12200.0,
    "title": "[BUG] Hang in SRANDMEMBER call during CoW fork saving"
  },
  {
    "bug_location": "Redis Module System - moduleCreateArgvFromUserFormat function",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Integer overflow vulnerability caused by potential sign truncation and unsafe size calculation when processing variable length arguments, which could lead to incorrect memory allocation",
    "issue_number": 9653.0,
    "title": "[BUG] Potential integer overflow in moduleCreateArgvFromUserFormat"
  },
  {
    "bug_location": "Redis Streams Component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "XDEL operation fails to update the stream's last_id when deleting the last entry, causing unexpected behavior with XREAD STREAMS command",
    "issue_number": 13628.0,
    "title": "[BUG] Unexpected behavior of XREAD STREAMS stream +"
  },
  {
    "bug_location": "Redis Client Protocol Handler",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Lack of proper handling for repeated MONITOR command, causing silent no-response behavior when already in monitor mode",
    "issue_number": 12425.0,
    "title": "[BUG] MONITOR gets no reply when already in monitor mode"
  },
  {
    "bug_location": "Redis Authentication/ACL System",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "The HELLO command authentication logic does not properly handle scenarios where the default user is secured or disabled, causing unexpected permission restrictions for authenticated users attempting to use the HELLO command with explicit authentication",
    "issue_number": 8558.0,
    "title": "[BUG] HELLO AUTH command changes behaviour when default user is secured"
  },
  {
    "bug_location": "Version Initialization/Reporting Component",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Likely an issue with version string generation in the build or initialization process of the unstable Redis version, causing an invalid maximum value (255.255.255) to be displayed instead of the expected version number",
    "issue_number": 9213.0,
    "title": "[BUG] redis-server display incorrect version `Redis 255.255.255` "
  },
  {
    "bug_location": "Test Suite / Integration Testing Framework",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Testing"
    ],
    "root_cause": "Potential issue with crash reporting mechanism during test suite execution, possibly related to system-specific toolchain or debugging configuration",
    "issue_number": 9790.0,
    "title": "[CRASH] make test crashed when trying to install redis-6.2.6"
  },
  {
    "bug_location": "redis-cli",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Potential configuration or compilation issue affecting redis-cli auto-completion functionality after custom configuration modifications",
    "issue_number": 12997.0,
    "title": "[BUG]redis-cli command auto-completion fails"
  },
  {
    "bug_location": "Redis Server Shutdown Handler",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Recovery",
      "Storage"
    ],
    "root_cause": "Redis attempts to save RDB snapshot during shutdown, but fails when configured directory does not exist, preventing graceful termination",
    "issue_number": 10330.0,
    "title": "[BUG] Redis doesn't shut down on a SIGTERM if its directory doesn't exist"
  },
  {
    "bug_location": "Redis ZINTERSTORE command implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Potential algorithmic error in handling mixed set types (regular sets and sorted sets) during intersection operation, causing inconsistent or incorrect results when using ZINTERSTORE with different set types and weight configurations",
    "issue_number": 519.0,
    "title": "ZINTERSTORE mixing sets and sorted sets may produce wrong results."
  },
  {
    "bug_location": "Active Defragmentation (activedefrag) module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Potential memory management issue during active defragmentation on Redis replica in cluster mode, specifically related to dictionary entry replacement and linked list manipulation",
    "issue_number": 12677.0,
    "title": "[CRASH] <Redis7.2.1, replica crashes when set activedefrag to yes.>"
  },
  {
    "bug_location": "Lua scripting engine",
    "severity": 4,
    "categories": [
      "Security",
      "CodeBug",
      "Denial of Service"
    ],
    "root_cause": "Unrestricted file access via loadfile() function in Lua scripting, allowing potential system resource exhaustion and file enumeration",
    "issue_number": 436.0,
    "title": "2.6 Denial of Service via EVAL loadfile()"
  },
  {
    "bug_location": "t_zset.c (Sorted Set Implementation)",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential issue with handling NaN (Not a Number) scores in sorted sets, causing memory corruption and potential server crash during zadd/zincr operations",
    "issue_number": 108.0,
    "title": "Sorted sets can contain elements with a NaN score under unknown conditions (was: Redis crash)"
  },
  {
    "bug_location": "Redis Cluster PubSub/Gossip Protocol",
    "severity": 3,
    "categories": [
      "Performance",
      "Network",
      "CodeBug"
    ],
    "root_cause": "Excessive metadata overhead during cluster message propagation, where PubSub messages are broadcasted with large cluster state information across all nodes, causing network traffic to be significantly higher than the actual published data size",
    "issue_number": 12196.0,
    "title": "[BUG] In redis cluster, the traffic delivered to each node during publish exceeds 10 \"multiply\"."
  },
  {
    "bug_location": "Redis Replication/AOF Subsystem",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Storage"
    ],
    "root_cause": "In the rewriteAppendOnlyFile() function, when using RDB preamble mode, the last parameter passed to rdbSaveRio() is NULL, which prevents saving replica-specific information needed for partial replication after restart",
    "issue_number": 10686.0,
    "title": "[BUG] Once start aof-use-rdb-preamble, redis does not use partial REPLICA after restarted"
  },
  {
    "bug_location": "connSocketBlockingConnect function",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Missing error return (C_ERR) when aeWait fails or times out, potentially allowing incorrect connection state propagation",
    "issue_number": 12900.0,
    "title": "[BUG] Potential Error Handling Bug in connSocketBlockingConnect When aeWait Fails"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Config",
      "Recovery"
    ],
    "root_cause": "Sentinel failover mechanism fails to correctly identify and resolve multiple master node scenarios during cluster restart, potentially causing a split-brain situation where multiple nodes incorrectly claim master status",
    "issue_number": 13424.0,
    "title": "[BUG]Sentinels doesn't select one master node when all nodes are declared as master node"
  },
  {
    "bug_location": "ZADD command implementation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Inconsistent handling of empty string score between different libc implementations (libc vs musl), with different validation of numeric conversion for ZADD command scores",
    "issue_number": 4391.0,
    "title": "Different results for ZADD alpine/debian docker container"
  },
  {
    "bug_location": "Build System/Makefile",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Overly broad 'make clean' target that unnecessarily recompiles all dependencies, causing extended compilation times during development",
    "issue_number": 190.0,
    "title": "Relax make clean (unstable branch.)"
  },
  {
    "bug_location": "Test Suite / Test Client",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Unknown"
    ],
    "root_cause": "Issue with tail command execution in test client script, specifically unable to open file with '+30' parameter, likely a test suite scripting error",
    "issue_number": 7614.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Protocol (RESP3) Response Handling",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent return value type between ZPOPMAX/ZRANGE commands in RESP3, where nested array structures differ unexpectedly",
    "issue_number": 8824.0,
    "title": "confused return value type(ZPOPMAX/ZPOPMIN--ZRANGE)"
  },
  {
    "bug_location": "Redis Configuration/Persistence Module",
    "severity": 3,
    "categories": [
      "Config",
      "Storage"
    ],
    "root_cause": "Change in default snapshotting behavior where an empty config file now enables default save configuration instead of disabling it, contrary to previous versions' behavior",
    "issue_number": 8318.0,
    "title": "Snapshotting enabled with no save directive in config file (redis 6.2-rc1) [BUG]"
  },
  {
    "bug_location": "Redis Cluster Module (cluster.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Null pointer dereference in cluster state management when processing delayed cluster messages, specifically when a node changes role and receives stale cluster configuration messages",
    "issue_number": 12441.0,
    "title": "[CRASH] Redis cluster.c:1946 crashed by signal 11, si_code: 1"
  },
  {
    "bug_location": "Redis Memory Management/Defragmentation Component",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Redis uses `ustime()` which relies on system time, causing memory defragmentation to fail when system time is artificially set back to 1990, preventing proper memory purge and leading to increasing memory fragmentation ratio",
    "issue_number": 12595.0,
    "title": "[BUG]No memory purge with time back to 1990"
  },
  {
    "bug_location": "Replica Buffer Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Replica buffer memory management not correctly triggering eviction mechanism during test scenarios, preventing expected memory pressure behavior",
    "issue_number": 12066.0,
    "title": "[BUG] [err]: replica buffer don't induce eviction in tests/unit/maxmemory.tcl"
  },
  {
    "bug_location": "Redis Cluster Component (cluster.c)",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Inconsistent shard ID handling during mixed version cluster upgrade from 7.0.11 to 7.2.2, causing slot information tracking to exceed allocated memory and trigger an assertion failure",
    "issue_number": 12695.0,
    "title": "[CRASH] Assertion Failed when running rebalance command when upgrading from 7.0.11 to 7.2.2"
  },
  {
    "bug_location": "RediSearch/RedisJSON Integration",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Potential indexing synchronization issue between JSON.MERGE and RediSearch index updates, causing stale search results",
    "issue_number": 12240.0,
    "title": "[BUG] RediSearch with JSON.MERGE"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Non-deterministic functions in Lua scripts can cause inconsistent state between master and slave Redis instances during replication, as random or time-dependent operations may produce different results across servers",
    "issue_number": 95.0,
    "title": "Lua scripting: determinism, replication, AOF"
  },
  {
    "bug_location": "Redis Connection Configuration",
    "severity": 3,
    "categories": [
      "Network",
      "Config"
    ],
    "root_cause": "Potential network/DNS resolution issue between Docker containers, with Redis hostname not being correctly resolved in the Spring Boot application container",
    "issue_number": 13634.0,
    "title": "[BUG] Unable to connect to Redis"
  },
  {
    "bug_location": "Redis Transaction/Watch Mechanism",
    "severity": 3,
    "categories": [
      "Transaction",
      "Performance"
    ],
    "root_cause": "Redis watch mechanism does not trigger when a non-existent key is deleted, causing potential race conditions in optimistic locking scenarios",
    "issue_number": 11704.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Server Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Performance"
    ],
    "root_cause": "Incorrect handling of file descriptor limits when ulimit is set to a low value, causing maxclients to become a negative number due to reserved file descriptors",
    "issue_number": 356.0,
    "title": "server.maxclients could be minus!"
  },
  {
    "bug_location": "Redis Packaging/Init System",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Recent packaging changes disabled daemonization by default, causing Redis service to not properly background itself when started on non-systemd systems like WSL2",
    "issue_number": 8669.0,
    "title": "[BUG] Redis installed from the Redis Labs PPA fails to daemonize on WSL2"
  },
  {
    "bug_location": "Redis Client Connection",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Authentication"
    ],
    "root_cause": "Potential authentication configuration mismatch or Redis server authentication requirements not properly configured in the client connection settings",
    "issue_number": 9473.0,
    "title": "[BUG]Unable to connect to Redis at 127.0.0.1:6379."
  },
  {
    "bug_location": "Website Infrastructure",
    "severity": 2,
    "categories": [
      "Config",
      "Security"
    ],
    "root_cause": "Missing SSL/HTTPS configuration for antirez.com domain",
    "issue_number": 13647.0,
    "title": "[BUG] https://antirez.com throws SSL error in Chrome"
  },
  {
    "bug_location": "redis-cli cluster creation command",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent error handling when insufficient nodes are provided for cluster creation, with different error messages based on the number of nodes",
    "issue_number": 12891.0,
    "title": "[BUG] `redis-cli --cluster create` reports different errors when trying to create a cluster with lesser than 3 master nodes"
  },
  {
    "bug_location": "Lua Scripting Interface",
    "severity": 1,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Expected behavior of RESP2 protocol type conversion in Lua, where null bulk replies are converted to Lua boolean false, which is not a bug but a documented feature",
    "issue_number": 12615.0,
    "title": "[BUG] LPOP respond with `false` inside lua"
  },
  {
    "bug_location": "redis-benchmark tool",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "The SADD benchmark implementation uses a fixed 'element:__rand_int__' pattern instead of generating random data members with the specified data size (-d parameter)",
    "issue_number": 10607.0,
    "title": "[BUG] redis-benchmark `SADD` not using data for member elements"
  },
  {
    "bug_location": "redis-cli client component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Incorrect URL parsing logic for TLS (rediss://) scheme in redis-cli, causing improper handling of connection URL with TLS prefix",
    "issue_number": 8704.0,
    "title": "[BUG] redis-cli does not handle rediss:// in URL properly"
  },
  {
    "bug_location": "Redis Configuration Parser",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Breaking change in configuration argument parsing in Redis 7.0.2 that prevents passing configuration parameters with quotes or combined arguments, causing configuration parsing to fail when arguments are not strictly separated",
    "issue_number": 10865.0,
    "title": "[CRASH] 7.0.2 crash loop with parameter provide from k8s deployment"
  },
  {
    "bug_location": "Transaction Command Handler",
    "severity": 3,
    "categories": [
      "Transaction",
      "CodeBug"
    ],
    "root_cause": "Inconsistent error handling for UNWATCH command within MULTI/EXEC transaction block, allowing a no-op command that should be rejected similar to WATCH",
    "issue_number": 11686.0,
    "title": "[BUG] UNWATCH should be rejected within a MULTI/EXEC transaction just like WATCH is"
  },
  {
    "bug_location": "Documentation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect documentation example showing incorrect LIMIT offset for ZRANGEBYLEX command, which could mislead users about proper lexicographical range query syntax",
    "issue_number": 8738.0,
    "title": "[BUG] Documentation issue"
  },
  {
    "bug_location": "Redis Transaction/Pub-Sub Module",
    "severity": 3,
    "categories": [
      "Transaction",
      "CodeBug"
    ],
    "root_cause": "Redis allows `SUBSCRIBE` commands inside a `MULTI` transaction block, which breaks the expected transaction response protocol by injecting additional subscription responses that disrupt the transaction's response array structure",
    "issue_number": 12207.0,
    "title": "[BUG] Should `SUBSCRIBE/UNSUBSCRIBE` be rejected in `MULTI`?"
  },
  {
    "bug_location": "Redis Service Configuration / Systemd Integration",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Redis configuration incompatibility with systemd notification mechanism after Arch Linux package upgrade, requiring explicit 'supervised systemd' configuration to properly notify systemd of service readiness",
    "issue_number": 8021.0,
    "title": "[CRASH] Redis Terminates the moment an app (Nextcloud) starts using it."
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 4,
    "categories": [
      "Config",
      "Security",
      "Storage"
    ],
    "root_cause": "Potential configuration manipulation vulnerability where Redis unexpectedly resets the data directory to a system directory, possibly due to external interference or configuration hijacking",
    "issue_number": 9515.0,
    "title": "[BUG] redis resets \"dir\" parameter to \"/etc\""
  },
  {
    "bug_location": "Redis Module Loading (RedisGears)",
    "severity": 4,
    "categories": [
      "Memory",
      "Upgrade",
      "CodeBug"
    ],
    "root_cause": "Potential memory leak or module initialization error during RedisGears module loading, causing segmentation fault",
    "issue_number": 13182.0,
    "title": "[BUG] Potential Memory leak? "
  },
  {
    "bug_location": "CrystalTransaction Redis Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential memory corruption or invalid memory access in Lua script execution within CrystalTransaction module thread, causing segmentation fault at lua_rawseti function",
    "issue_number": 9466.0,
    "title": "[CRASH] in CrystalTransaction module thread calling Lua"
  },
  {
    "bug_location": "Build System/Compilation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect linker flag usage during compilation with custom LLVM/Clang environment, specifically an invalid combination of linker flags that prevents successful Redis server compilation",
    "issue_number": 10047.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "hiredis.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference after calling redisContextInit() without proper null check before usage",
    "issue_number": 9331.0,
    "title": "[BUG]A potential bug of NULL pointer dereference"
  },
  {
    "bug_location": "Memory Management (jemalloc)",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential memory corruption or use-after-free in an old, unsupported Redis development version (3.9.102) with jemalloc memory allocator",
    "issue_number": 13019.0,
    "title": "[CRASH] Crashed running the instuction at: 0x4b4377"
  },
  {
    "bug_location": "Redis Cluster Management CLI",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "In Redis 7.0.3+, a code change in redis_cli.c incorrectly uses `first->ip` instead of `first_ip` when creating a cluster, causing invalid node address resolution during cluster creation",
    "issue_number": 11148.0,
    "title": "[BUG] cannot create cluster with docker compose service name"
  },
  {
    "bug_location": "Redis Function Load Command",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Mismatch between documentation and implementation of the FUNCTION LOAD command, where the help text suggests 'DESC' but the actual implementation expects 'description'",
    "issue_number": 10225.0,
    "title": "[BUG]function load can't use attribute `desc` in redis 7.0"
  },
  {
    "bug_location": "Redis Modules (ReJSON and RediSearch)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential memory corruption or incompatibility between ReJSON and RediSearch modules during JSON document indexing, specifically when processing numeric values in JSON paths",
    "issue_number": 11551.0,
    "title": "[CRASH] Redis sentinel crash on inserting json"
  },
  {
    "bug_location": "Redis source code compilation (src/redis.c)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing platform-specific macro definition for SA_ONSTACK in Cygwin environment, causing compilation failure due to undefined symbol",
    "issue_number": 232.0,
    "title": "Cannot build on cygwin: \u2018SA_ONSTACK\u2019 undeclared "
  },
  {
    "bug_location": "server.c tracking mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction",
      "Memory"
    ],
    "root_cause": "Potential race condition or memory management issue in Redis client tracking system, likely related to multi-exec transactions and tracking table size approaching limits (tracking_total_keys near 1 million)",
    "issue_number": 11715.0,
    "title": "[CRASH] server.c:2442 'listLength(server.tracking_pending_keys) == 0' is not true"
  },
  {
    "bug_location": "Redis Cluster Component (slotToKeyUpdateKey function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access during key removal in cluster slot management, causing a segmentation fault in the raxRemove function",
    "issue_number": 8254.0,
    "title": "[CRASH]5.0.4 crashed in slotToKeyUpdateKey"
  },
  {
    "bug_location": "Redis Event Loop (ae.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Struct definition mismatch in AIX platform, specifically with 'reqevents' member which does not exist in the aeEventLoop structure, causing compilation errors",
    "issue_number": 9521.0,
    "title": "[BUG] error: 'aeEventLoop' has no member named 'reqevents'; did you mean 'events'? on AIX"
  },
  {
    "bug_location": "Redis Cluster Failover Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Transaction"
    ],
    "root_cause": "Connection not properly refreshed or aborted during master node failover, causing unexpected connection abort error during cluster state transition",
    "issue_number": 11932.0,
    "title": "[BUG] 03-failover-loop.tcl failed with connection abort  "
  },
  {
    "bug_location": "Redis Cluster Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Shard ID tracking mechanism fails to update correctly when a node is deleted and re-added as a new master, causing inconsistent cluster metadata representation in CLUSTER SHARDS command",
    "issue_number": 13362.0,
    "title": "[BUG] Deleted node when added againg as master doesn't get new shardid (CLUSTER SHARDS becomes wrong)"
  },
  {
    "bug_location": "redis-cli cluster mode scanning",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Replication"
    ],
    "root_cause": "Redis CLI in cluster mode does not consistently scan keys across all nodes or provide clear guidance on node-specific scanning behavior",
    "issue_number": 12314.0,
    "title": "[BUG] redis-cli SCAN command in cluster mode picks nodes in random "
  },
  {
    "bug_location": "Replication/Client Memory Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid client state during role change and memory usage calculation in getClientMemoryUsage() function, specifically when accessing c->querybuf after a role transition",
    "issue_number": 13025.0,
    "title": "[CRASH] When role change occurs, if the new master causes a write, it crashes"
  },
  {
    "bug_location": "async.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Unchecked memory allocation return value leading to potential null pointer dereference during memcpy operation",
    "issue_number": 9337.0,
    "title": "[BUG]A potential bug of unchecked return value to nULL pointer dereference"
  },
  {
    "bug_location": "Redis Test Suite / Logging Component",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Sporadic test case failure with inconsistent stack trace generation during SIGABRT signal handling, likely related to timing or signal processing race condition",
    "issue_number": 10692.0,
    "title": "[BUG] Redis 6.2.7 test case failure"
  },
  {
    "bug_location": "Redis Stream Persistence/RDB Loading",
    "severity": 3,
    "categories": [
      "Storage",
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Potential memory management or stream state corruption when loading streams with maxlen configuration from RDB files, causing client-side crashes during subsequent XADD operations",
    "issue_number": 9754.0,
    "title": "[BUG] loading redis streams with maxlen from .rdb"
  },
  {
    "bug_location": "Redis CLI/Server Command Parsing",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Version mismatch - Redis 5.0.7 does not support TYPE argument in SCAN command, which was introduced in later versions (6.2+)",
    "issue_number": 9252.0,
    "title": "[BUG] Scan type returning syntax error"
  },
  {
    "bug_location": "Redis Replication/Lua Script Execution",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "PUBLISH command in Lua scripts not being consistently replicated due to server.dirty flag not being incremented automatically",
    "issue_number": 873.0,
    "title": "PUBLISH is not replicated from EVAL unless other commands in script increment server.dirty"
  },
  {
    "bug_location": "RedisGraph Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Segmentation fault during graph query execution, likely due to memory access violation or module compatibility issue",
    "issue_number": 10803.0,
    "title": "[CRASH] RedisGraph CRASH report."
  },
  {
    "bug_location": "Redis Cluster Message Handling (cluster.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Assertion failure when attempting to add a node to the blacklist that might already exist, causing a crash during cluster node message processing",
    "issue_number": 12701.0,
    "title": "[CRASH] Cluster CLUSTERMSG_EXT_TYPE_FORGOTTEN_NODE"
  },
  {
    "bug_location": "Memory Allocation (zmalloc/jemalloc)",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential memory fragmentation or allocation limit near system's shared memory segment limit (4096), causing malloc to fail when attempting to allocate 122916 bytes",
    "issue_number": 10319.0,
    "title": "[CRASH] redis 6.2.6 on centos7 - out of memory allocating 120kb"
  },
  {
    "bug_location": "redis-cli command-line interface",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Missing argument validation for --memkeys-samples flag, causing potential segmentation fault when no sample count is provided",
    "issue_number": 11267.0,
    "title": "[BUG] redis-cli --memkeys-samples not checking lastarg"
  },
  {
    "bug_location": "Website Frontend/UI Layout",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent CSS positioning or responsive design implementation causing uneven scrolling behavior across page elements",
    "issue_number": 13290.0,
    "title": "[BUG] Layout/Responsiveness Issue: Page Elements Not Scrolling Consistently"
  },
  {
    "bug_location": "Redis Core Command Implementation (LPOP)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect reply type handling when using LPOP with count argument for non-existent lists, returning Null Bulk reply instead of Null array reply as specified in documentation",
    "issue_number": 10089.0,
    "title": "[BUG] LPOP key [count] returns Null Bulk reply instead of Null array reply."
  },
  {
    "bug_location": "Redis Cluster Management CLI",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Redis CLI fails to handle cluster state with disconnected/failed nodes during node addition, causing indefinite hanging instead of gracefully managing node addition process",
    "issue_number": 9957.0,
    "title": "[BUG] redis-cli add new node hanging forever when a node is in a connected failure state"
  },
  {
    "bug_location": "syscheck.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect conditional logic in overcommit memory check, causing warning message to be incorrectly triggered or suppressed",
    "issue_number": 10926.0,
    "title": "[BUG] 7.0.1, 7.0.2  syscheck.c  checkOvercommit()  if (atoi(buf)) {  \"msg\" } -> Not working"
  },
  {
    "bug_location": "Redis RDB child process (rdb.c)",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Child process fails to detect parent process termination and continues running indefinitely, leading to potential memory leaks and resource consumption",
    "issue_number": 11935.0,
    "title": "[BUG] Child process `redis-rdb-to-slaves` is running continuously forever when parent process is restarted"
  },
  {
    "bug_location": "Redis Set Scanning (SSCAN) Implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Changes in encoding mechanism for sets in Redis 7.2, specifically the introduction of listpack encoding, which affects the SSCAN cursor behavior for sets with more than a certain number of elements",
    "issue_number": 12499.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Cluster Failover Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Regression in write client handling during manual failover, causing extended pause for write operations compared to read operations",
    "issue_number": 10985.0,
    "title": "[BUG] [CLUSTER] Redis 6.2 don't unpause write clients after manual failover immediately"
  },
  {
    "bug_location": "ziplist/quicklist component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during list manipulation operations, specifically during LRANGE and LSET commands involving lists with sparse or inconsistent data",
    "issue_number": 3860.0,
    "title": "Redis 3.2.8 segfault"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 13082.0,
    "title": "[BUG] Client Side Caching and Redirect inconsistency"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 13021.0,
    "title": "[BUG] Build fails due to undefined reference to `backtrace_symbols_fd': 6.0.13"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 10828.0,
    "title": "[CRASH] Redis 6.2.6 crashed by signal: 11, si_code: 1 | redislabs/redismod:latest | Intel Mac"
  },
  {
    "bug_location": "Docker Image / Background Jobs Initialization",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Potential compatibility issue with AWS instance environment preventing background job initialization, specifically with Debian Bookworm-based Docker image",
    "issue_number": 12319.0,
    "title": "[CRASH] Redis Docker image 7.0.11 crashes on startup in AWS"
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "TIME function was modified in commit #10300 to freeze time during script execution, removing the ability to track elapsed time within a Lua script",
    "issue_number": 12699.0,
    "title": "[BUG] TIME is now freezed in script and there is no way to know the elapsed time inside script during his execution."
  },
  {
    "bug_location": "Redis Cluster Node ID Generation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or race condition during node ID generation and tracking in large Redis cluster configurations",
    "issue_number": 9476.0,
    "title": "[BUG] strange nodeID is generated."
  },
  {
    "bug_location": "t_zset.c (Sorted Set Implementation)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Storage"
    ],
    "root_cause": "Potential encoding handling issue in an outdated Redis version (3.0.6) related to sorted set operations, likely resolved by upgrading to a newer Redis version",
    "issue_number": 11049.0,
    "title": "[CRASH] \"Unknown sorted set encoding\" #t_zset.c:1350"
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Version compatibility issue during cluster upgrade, likely related to replication ID mismatch and potential incompatibility between Redis 5.0.4 and 7.2.4 during rolling upgrade process",
    "issue_number": 13128.0,
    "title": "[BUG] Redis Upgrading from version 5.0.4 to 7.2.4 failed in Redis cluster"
  },
  {
    "bug_location": "Redis Cluster Defragmentation Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Race condition in active defragmentation when disabling and re-enabling the feature, causing potential null database pointer access during defragmentation cycle",
    "issue_number": 13205.0,
    "title": "[CRASH] Redis 7.2.3 crashed in slotToKeyReplaceEntry"
  },
  {
    "bug_location": "Redis Module System",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Incorrect memory management of module type methods, specifically passing a non-pointer RedisModuleTypeMethods by reference which becomes invalid after initial scope",
    "issue_number": 10836.0,
    "title": "[CRASH] Custom module works in debug but not release mode"
  },
  {
    "bug_location": "redis-cli",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Improper argument escaping in redis-cli when handling complex passwords containing special characters like quotes and backslashes",
    "issue_number": 10672.0,
    "title": "[BUG] Some passwords cannot be entered in `redis-cli`"
  },
  {
    "bug_location": "Redis Test Suite / Integration Tests",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential issue with test script file handling, specifically a problem with tail command and file reading during test execution",
    "issue_number": 7662.0,
    "title": "[BUG] make test failed"
  },
  {
    "bug_location": "Configuration File Parsing",
    "severity": 2,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Incorrect sed regex modification causing space removal between 'supervised' and 'systemd' configuration directive, leading to an invalid configuration line",
    "issue_number": 12478.0,
    "title": "[BUG] Error in default redis.conf"
  },
  {
    "bug_location": "sds.c (Simple Dynamic Strings library)",
    "severity": 2,
    "categories": [
      "Performance",
      "Memory"
    ],
    "root_cause": "Inefficient memory pre-allocation strategy for large strings, causing unnecessary memory overhead when appending to strings larger than 1MB",
    "issue_number": 252.0,
    "title": "More judicious pre-allocation in sds.c"
  },
  {
    "bug_location": "Redis Cluster (cluster.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Race condition during cluster state update and node query resolution, where node lookup fails during cluster reconfiguration due to inconsistent cluster state",
    "issue_number": 2288.0,
    "title": "[2.9.102] Assertion failed: cluster.c:4641 'n != NULL' is not true"
  },
  {
    "bug_location": "Redis networking.c and memory management",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inefficient memory allocation strategy in processMultibulkBuffer() function, where Redis pre-allocates memory for potential future arguments without considering the current argument's size, causing memory allocation beyond configured maxmemory limits",
    "issue_number": 11830.0,
    "title": "[BUG] fat argv caused oom reply even redis had enough memory"
  },
  {
    "bug_location": "utils/lru/lfu-simulation.c",
    "severity": 2,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential memory leak in main function where 'entries' variable is not explicitly freed before program termination",
    "issue_number": 12294.0,
    "title": "[BUG] The main function has memory leak in utils\\lru\\lfu-simulation.c  "
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Network",
      "Performance"
    ],
    "root_cause": "Potential race condition or memory management issue in client handling during multi-threaded I/O processing, specifically in the networking component where a linked list node (ln) becomes unexpectedly NULL during client connection management",
    "issue_number": 8220.0,
    "title": "[CRASH]  networking.c:1124 'ln != NULL' is not true"
  },
  {
    "bug_location": "Redis Pub/Sub Transaction Handling",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Redis allows Pub/Sub commands inside transactions without proper validation, leading to unexpected response formatting and potential inconsistent behavior when executing multi-stage commands like subscribe/publish/unsubscribe",
    "issue_number": 2967.0,
    "title": "Badly formatted result when using pubsub in a transaction"
  },
  {
    "bug_location": "Redis ziplist and intset components",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Lack of big-endian compatibility in memory byte order manipulation functions (memrev16, memrev32, memrev64) for PowerPC (ppc64) architecture, causing undefined references during build process",
    "issue_number": 400.0,
    "title": "build fails on ppc64"
  },
  {
    "bug_location": "redis-cli.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential divide by zero error when no master nodes are found in a Redis cluster, caused by using `master_count` as a divisor without prior validation",
    "issue_number": 9383.0,
    "title": "[BUG] A possible divide by zero bug in redis-cli.c"
  },
  {
    "bug_location": "Memory Allocation/Fragmentation Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Time manipulation appears to trigger memory allocation/deallocation behavior that causes unexpected memory fragmentation, likely related to jemalloc's memory management strategy when system time is modified",
    "issue_number": 12597.0,
    "title": "[BUG]When setback system time back, the fragmentation is going high"
  },
  {
    "bug_location": "db.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Storage"
    ],
    "root_cause": "Assertion failure in key lookup, suggesting potential memory corruption or inconsistent dictionary state during key expiration/lookup process",
    "issue_number": 12967.0,
    "title": "[CRASH] Redis 5.0.7 assertion failure 'dictFind(db->dict,key->ptr) != NULL'"
  },
  {
    "bug_location": "Redis Streams Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Performance"
    ],
    "root_cause": "Incorrect lag calculation for consumer groups on slave nodes, causing continuous lag growth that does not reflect actual stream state",
    "issue_number": 13336.0,
    "title": "[BUG] Stream lag seems to not be correctly replicated on slave"
  },
  {
    "bug_location": "Redis Cluster Configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Network",
      "CodeBug"
    ],
    "root_cause": "Redis server listening on all network interfaces, including VIP (load balancer) interface, causing IP address configuration corruption in nodes.conf",
    "issue_number": 8402.0,
    "title": "[BUG] We are seeing a wrong IP in nodes.conf being used to reach a cluster node"
  },
  {
    "bug_location": "Redis Replication and Persistence Subsystem",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Single fork lock mechanism prevents persistence operations when continuous replication sync requests are made, causing persistence mechanisms to be starved by a faulty slave continuously requesting full synchronization",
    "issue_number": 9991.0,
    "title": "[BUG] Slave continuously issuing a full sync can starve persistence related forks on master"
  },
  {
    "bug_location": "quicklist.c data structure implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Node size not being updated correctly in quicklist implementation, potentially causing memory tracking or allocation inconsistencies",
    "issue_number": 12613.0,
    "title": "[BUG] quicklist forgot update node size"
  },
  {
    "bug_location": "Test Suite Execution",
    "severity": 3,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "Potential compatibility issue with WSL 1 environment causing test suite execution failure",
    "issue_number": 7704.0,
    "title": "[BUG] `make test` fails: [exception]: Executing test client: error writing \"file70\": broken pipe. "
  },
  {
    "bug_location": "hiredis Makefile",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Hard-coded OpenSSL include and library paths that do not account for Apple Silicon (M1) Homebrew installation paths",
    "issue_number": 9342.0,
    "title": "[BUG] hiredis Makefile needs similar SSL detection as found in src/Makefile"
  },
  {
    "bug_location": "RediSearch Module (redisearch.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory corruption or invalid memory access in SearchResult_Clear function within RediSearch module, likely caused by a memory management issue during search result processing",
    "issue_number": 10327.0,
    "title": "[CRASH] redisearch container is crashing time to time (redislabs/redisearch:2.2.7)"
  },
  {
    "bug_location": "Redis Stack / FT.SEARCH",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential sorting inconsistency when updating elements with identical field values during SORT operation",
    "issue_number": 12523.0,
    "title": "[BUG] [REDIS STACK] SORT function does not return the same ordering of the list "
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or memory management issue in Redis 4.0.10 on ARM64 architecture, possibly related to jemalloc or memory allocation handling",
    "issue_number": 12251.0,
    "title": "[CRASH] <Crashed after running at a few days>"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Config",
      "Network"
    ],
    "root_cause": "Race condition during Redis cluster initialization causing inconsistent master election and sentinel state synchronization, potentially due to rapid startup sequence and network/timing issues",
    "issue_number": 13335.0,
    "title": "[BUG] Master getting down while bootup but switch does not take place and sentinel keeps on referring the same master"
  },
  {
    "bug_location": "Redis Server Core / Embedded Redis",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Platform"
    ],
    "root_cause": "Compatibility issue with Apple M1 architecture, likely related to signal handling or process initialization in Redis 2.8.19",
    "issue_number": 9174.0,
    "title": "[CRASH] embedded-redis 0.7.3 crashes on apple m1"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Transaction"
    ],
    "root_cause": "Potential race condition or state synchronization issue during sentinel recovery where incorrect master information is published during switch-master event, especially when one sentinel was temporarily offline during failover",
    "issue_number": 12798.0,
    "title": "[BUG] Sentinel publishing wrong master switch info on switch-master event, whereas the sentinel logs shows the correct master switch info."
  },
  {
    "bug_location": "Redis TLS Connection Handling",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Transaction"
    ],
    "root_cause": "Potential misconfiguration in connection keepalive mechanism when TLS is enabled, causing premature connection termination",
    "issue_number": 12463.0,
    "title": "[BUG] Redis server with TLS enabled does not keep connections alive"
  },
  {
    "bug_location": "Redis Eviction Algorithm",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "LRU eviction algorithm samples keys per database, causing uneven and potentially unexpected key evictions across multiple databases, especially when database sizes are unbalanced",
    "issue_number": 2647.0,
    "title": "Unexpected evictions with LRU policy"
  },
  {
    "bug_location": "Redis Network Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "IPv6 binding configuration issue preventing successful socket creation on ::1 address",
    "issue_number": 8832.0,
    "title": "[BUG] log warning: Cannot assign requested address"
  },
  {
    "bug_location": "Redis Data Recovery/Persistence",
    "severity": 2,
    "categories": [
      "Storage",
      "Recovery",
      "Unknown"
    ],
    "root_cause": "Inconclusive - User initially suspected automatic expiration setting during data recovery, but later acknowledged it was likely from their own application thread setting expiration times",
    "issue_number": 10919.0,
    "title": "[BUG]  redis \u6062\u590d\u6570\u636e  \u81ea\u52a8\u7ed9\u4e00\u4e9b\u6ca1\u6709\u8fc7\u671f\u65f6\u95f4\u7684key\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4,key\u7684\u540d\u79f0\u4ee5login_tokens:\u5f00\u5934"
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 4,
    "categories": [
      "Replication",
      "Transaction",
      "Upgrade"
    ],
    "root_cause": "During a master failover, the newly attached slave node fails to correctly update its replication target, potentially remaining attached to the old master node instead of the new master node",
    "issue_number": 12999.0,
    "title": "[BUG] Slave node attached to a slave node instead of a master node during upgrade. "
  },
  {
    "bug_location": "ReJSON module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or serialization error in ReJSON module during RDB save operation, specifically in the JSON serialization process",
    "issue_number": 11277.0,
    "title": "[CRASH] periodical crash after Lightroom starts exporting (maybe RAM issue)"
  },
  {
    "bug_location": "db.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Possible data corruption during RDB loading, specifically an assertion failure when attempting to add an object to the database dictionary with an invalid state",
    "issue_number": 9874.0,
    "title": "[CRASH] redis crash,can not restart"
  },
  {
    "bug_location": "Redis Cluster Import Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Replication"
    ],
    "root_cause": "Potential compatibility issue during data migration between Redis v4.0.2 and v6.2.4 clusters, causing memory access violation leading to segmentation fault during cluster import operation",
    "issue_number": 9257.0,
    "title": "[BUG] Segmentation fault error on importing data from old cluster"
  },
  {
    "bug_location": "Redis Stream Processing / Blocking Client Handling",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Transaction"
    ],
    "root_cause": "An infinite loop in client blocking mechanism where clients are repeatedly re-added to the blocked clients list without proper termination condition, causing server to get stuck processing the same blocked clients repeatedly",
    "issue_number": 12290.0,
    "title": "[BUG] Deadlock with streams on redis 7.2"
  },
  {
    "bug_location": "Redis Message Listener Container",
    "severity": 3,
    "categories": [
      "Network",
      "Replication",
      "Recovery"
    ],
    "root_cause": "Potential connection instability in Redis cluster configuration with HAProxy and Redis Sentinel, causing repeated subscription task restarts",
    "issue_number": 7610.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Modules API",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "RM_Call creates a new client which incorrectly resets MULTI/Lua context flags, causing incorrect state tracking when module commands are nested",
    "issue_number": 8104.0,
    "title": "[BUG] Modules: MULTI and Lua states change because of RM_Call"
  },
  {
    "bug_location": "Replication Module",
    "severity": 3,
    "categories": [
      "Performance",
      "Storage",
      "Replication"
    ],
    "root_cause": "Kernel page cache blocking during large file transfer and synchronization, causing main thread to halt when flushing cached data to disk during RDB file replication",
    "issue_number": 539.0,
    "title": "Main thread stuck during replication of large files"
  },
  {
    "bug_location": "RDB (Redis Database) Saving Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Memory"
    ],
    "root_cause": "Potential memory corruption during Copy-on-Write (CoW) process on ARM64 platforms, likely due to kernel-level interaction with jemalloc's MADV_FREE mechanism",
    "issue_number": 8124.0,
    "title": "[BUG] [6.0.9] RDB generated from cluster replica is intermittently invalid, crashes redis-check-rdb or redis-server if used"
  },
  {
    "bug_location": "redis-check-rdb utility",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Lack of handling for RDB_OPCODE_MODULE_AUX type during RDB file validation, causing an error when processing module auxiliary data",
    "issue_number": 7808.0,
    "title": "[BUG] redis-check-rdb is broken for module .rdb files with auxiliary "
  },
  {
    "bug_location": "Memory Allocation/jemalloc",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incompatibility of jemalloc memory allocation with 16kb memory pages on aarch64 architecture, causing Redis startup failure",
    "issue_number": 12607.0,
    "title": "[BUG] Redis fails to start on aarch64 with 16kb pages"
  },
  {
    "bug_location": "RedisJSON Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential null pointer dereference or memory access error in JSON path handling during JSON.SET operation, likely triggered by an unexpected JSON structure or module interaction",
    "issue_number": 12038.0,
    "title": "[CRASH] DB crash on JSON.SET"
  },
  {
    "bug_location": "networking.c (isLocalClient function)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Network"
    ],
    "root_cause": "Incomplete implementation of loopback address validation, which does not account for the full 127.0.0.0/8 IP range and incorrectly restricts local client connections in protected mode",
    "issue_number": 11637.0,
    "title": "[BUG] Wrong loopback definition"
  },
  {
    "bug_location": "RediSearch Geospatial Search",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential radius search algorithm inaccuracy causing incorrect distance filtering in geospatial queries",
    "issue_number": 12830.0,
    "title": "[BUG] RediSearch with location is showing outside of search radius "
  },
  {
    "bug_location": "Redis logging/configuration validation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect validation of vm.overcommit_memory system setting, causing a false warning message even when the setting is correctly configured",
    "issue_number": 10916.0,
    "title": "[BUG] Redis 7.0.2 vm.overcommit log warning is incorrect"
  },
  {
    "bug_location": "Expiration Mechanism",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance",
      "Storage"
    ],
    "root_cause": "Lack of comprehensive testing for key expiration functionality, specifically after introducing millisecond precision expires",
    "issue_number": 186.0,
    "title": "Add a test to verify that Redis actively expires data."
  },
  {
    "bug_location": "Redis Transaction/Memory Management",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Overly restrictive memory limit handling that prevents read-only commands in MULTI/EXEC blocks when maxmemory is reached, even for commands that do not consume additional memory",
    "issue_number": 106.0,
    "title": "Even when maxmemory is reached Redis should allow MULTI/EXEC blocks containing only commands allowed on out of memory."
  },
  {
    "bug_location": "Redis Documentation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Missing documentation for newly added ZMSCORE command in official Redis documentation",
    "issue_number": 7863.0,
    "title": "[BUG] Missing documentation on ZMSCORE"
  },
  {
    "bug_location": "RDB Background Save (bgsave) Component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference during RDB background save process, specifically in the dictNext function during key-value pair serialization",
    "issue_number": 12876.0,
    "title": "[BUG] Redis crashing 7.2.2"
  },
  {
    "bug_location": "redis-cli command-line interface",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent error handling in redis-cli causing exit codes to be either 1 or 255 on failure, which breaks predictable error reporting",
    "issue_number": 10437.0,
    "title": "[BUG] redis-cli exit codes are inconsistent"
  },
  {
    "bug_location": "t_zset.c (Sorted Set Implementation)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential integer overflow in rank array when handling large skiplist with more than 2 billion elements due to using unsigned int instead of unsigned long",
    "issue_number": 8043.0,
    "title": "[BUG] method  zslInsert in t_zset.c update and rank array length need not maxlevel and unsigned int may overflow"
  },
  {
    "bug_location": "processCommand function in Redis core",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during command processing, likely triggered by a SETNX operation with a specific key and value",
    "issue_number": 8984.0,
    "title": "[BUG] Redis 6.2.1 crash in processCommand"
  },
  {
    "bug_location": "Redis Replication/Cluster Synchronization",
    "severity": 4,
    "categories": [
      "Replication",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory leak or inefficient memory management during cluster replication synchronization, potentially caused by complex state tracking during network interruption and recovery scenarios",
    "issue_number": 12670.0,
    "title": "[CRASH] <redis_version:7.0.13 : redis pod take memory up quickly when replication sync in cluster>"
  },
  {
    "bug_location": "Redis Client Buffer Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or buffer overflow in client query buffer resizing mechanism during clientsCron function, causing segmentation fault when accessing a null pointer",
    "issue_number": 13137.0,
    "title": "[CRASH] Redis 6.2.7 crashed by signal: 11, si_code: 128"
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Keys deleted from a master node during slot ownership change are not being properly propagated or synchronized to replica nodes, causing inconsistent key states between master and replica",
    "issue_number": 10967.0,
    "title": "[BUG] delete keys operation not replicate to slave when 'remove all the keys from the slots we lost'"
  },
  {
    "bug_location": "Redis Background Saving Process",
    "severity": 3,
    "categories": [
      "Memory",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential hardware memory/swap issue causing SIGBUS (Bus Error) during background saving process, likely related to ARM64 architecture or hardware memory problems",
    "issue_number": 10788.0,
    "title": "[CRASH] background saving terminated by signal 7"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to diagnose the specific crash or issue",
    "issue_number": 9596.0,
    "title": "[CRASH]\ntest"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Failover",
      "Configuration"
    ],
    "root_cause": "Sentinel configuration and state synchronization issues during dynamic IP/hostname environments, potentially related to race conditions in failover and master/slave role detection",
    "issue_number": 9998.0,
    "title": "[BUG] Sentinel cluster is broken after a sentinel/redis restart"
  },
  {
    "bug_location": "Redis Set Command Implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent type handling for SRANDMEMBER command with negative count in RESP3 protocol, causing different parsing behaviors across client implementations",
    "issue_number": 8503.0,
    "title": "[BUG] SRANDMEMBER with a negative count should return an Array when using RESP3"
  },
  {
    "bug_location": "RediSearch",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Unknown"
    ],
    "root_cause": "Insufficient information to definitively determine the exact technical cause of the FT.SEARCH issue",
    "issue_number": 12855.0,
    "title": "[BUG] FT.SEARCH not according to docs"
  },
  {
    "bug_location": "clientsCron function",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during query buffer resizing in clientsCronResizeQueryBuffer, causing a segmentation fault (signal 11)",
    "issue_number": 8781.0,
    "title": "[CRASH] Redis 4.0.11 crashed by signal: 11 "
  },
  {
    "bug_location": "Redis Core - Dictionary/Sorted Set Operations",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during zset (sorted set) operation, specifically in the dictFind function during a ZADD command",
    "issue_number": 11851.0,
    "title": "[BUG] Redis 5.0.5 crashed by signal: 11"
  },
  {
    "bug_location": "Redis Module Context/Transaction Handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "When a module command triggers a keyspace notification and the notification callback executes another command, a new RedisModuleContext is created which loses the 'MULTI' context flag, causing nested MULTI commands that are not properly tracked",
    "issue_number": 8049.0,
    "title": "[BUG] replica receive nested \"multi\" command"
  },
  {
    "bug_location": "String Type Implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory usage exceeding expected threshold during string trimming operation with large values",
    "issue_number": 12193.0,
    "title": "[CRASH] make test failed trim on SET with big value in tests/unit/type/string.tcl"
  },
  {
    "bug_location": "Tests/OOM-Score-Adjustment",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Alpine Linux environment causing unexpected OOM score adjustment behavior during Redis test suite execution, potentially related to pre-existing process OOM score settings",
    "issue_number": 11619.0,
    "title": "make test fails on alpine 3.16 image [BUG]"
  },
  {
    "bug_location": "Redis Memory Management / Eviction Mechanism",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Client tracking and maxmemory-policy interaction creates a feedback loop where key evictions trigger client output buffer growth, which in turn causes more memory pressure and further evictions",
    "issue_number": 8069.0,
    "title": "[BUG] maxmemory-policy eviction with client tracking can cause feedback loop"
  },
  {
    "bug_location": "Redis Lua Script Execution Handler",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Event handler for long-running Lua scripts is not properly restored after script execution, causing the client connection to become unresponsive and unable to read further commands",
    "issue_number": 872.0,
    "title": "Slow EVAL command cause the link unusable"
  },
  {
    "bug_location": "redis-cli authentication module",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Potential incompatibility in handling authentication when combining URI-based connection with TLS flag, causing authentication failure",
    "issue_number": 11085.0,
    "title": "[BUG] [redis-cli -u <uri>] unable to work with flag [--tls]"
  },
  {
    "bug_location": "Redis Memory Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Config",
      "Replication"
    ],
    "root_cause": "By default, Redis replicas ignore maxmemory settings to maintain consistency with the master, even when replica-read-only is set to no. This means memory limits are not enforced on writable replicas unless explicitly configured with replica-ignore-maxmemory set to no.",
    "issue_number": 11902.0,
    "title": "[BUG] Redis does not honour the maxmemory parameter"
  },
  {
    "bug_location": "Redis APT Repository Infrastructure",
    "severity": 2,
    "categories": [
      "Network",
      "Config"
    ],
    "root_cause": "Repository synchronization issue causing file size mismatch during package metadata download, potentially due to incomplete mirror sync or temporary caching problem",
    "issue_number": 9782.0,
    "title": "[BUG] Redis Ubuntu Focal APT repository keeps giving error "
  },
  {
    "bug_location": "Redis Module (RedisGraph)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory allocation issue in RedisGraph module causing segmentation fault during memory management operations, specifically in PropertyMap_New and memory allocation functions",
    "issue_number": 12134.0,
    "title": "[BUG]Redis 6.2.6 crashed by signal: 11, si_code: 1"
  },
  {
    "bug_location": "Cluster/Replication Command Processing",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Memory"
    ],
    "root_cause": "Potential race condition where a client's command pointer is nullified during command processing, likely during a REPLCONF ACK command execution, causing a NULL pointer dereference when attempting to access client command flags",
    "issue_number": 10221.0,
    "title": "[CRASH] c->cmd nullified within `cmd->proc` call."
  },
  {
    "bug_location": "monotonic.c and ae.c (timer/event loop initialization)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Concurrency"
    ],
    "root_cause": "Potential race condition during monotonic time initialization in multi-threaded context, though the specific details are not conclusively proven in the provided issue description",
    "issue_number": 7985.0,
    "title": "[BUG] Race conditions on getMonotonicUs?"
  },
  {
    "bug_location": "Redis Network Configuration",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "CodeBug"
    ],
    "root_cause": "Unexpected port binding behavior when `port 0` is configured, automatically selecting port 10000 instead of truly disabling non-TLS port",
    "issue_number": 11599.0,
    "title": "[BUG] Setting `port 0` maybe disables listening, but will instead bind `port 10000` for some reason"
  },
  {
    "bug_location": "CPU Usage Tracking",
    "severity": 3,
    "categories": [
      "Performance",
      "CodeBug",
      "Unknown"
    ],
    "root_cause": "Potential inconsistent CPU usage reporting in Redis 4.0.11, possibly related to kernel interaction or internal tracking mechanism",
    "issue_number": 11226.0,
    "title": "[BUG]Redis4.0.11   info cpu  used_cpu_user sudden increase"
  },
  {
    "bug_location": "Redis server initialization (server.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing error handling when systemd supervision is configured but not compiled with libsystemd support, causing silent startup failure and systemd service hang",
    "issue_number": 7735.0,
    "title": "[BUG] No error when systemd configured but not compiled"
  },
  {
    "bug_location": "Networking/Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "Unexpected DNS resolution behavior causing bind address configuration test to fail",
    "issue_number": 8828.0,
    "title": "[BUG] `make test` fails on Ubuntu 18.04 (tests/unit/networking.tcl)"
  },
  {
    "bug_location": "Redis Sentinel/Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Partial resynchronization failure during sentinel failover due to offset mismatch, causing unexpected full synchronization (BGSAVE) for large datasets",
    "issue_number": 12113.0,
    "title": "[BUG] Sentinel failover trigger resulting in replicas Full Sync"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Transaction"
    ],
    "root_cause": "Time synchronization inconsistency between Redis nodes causing potential state desynchronization during failover events",
    "issue_number": 10843.0,
    "title": "[BUG]Sentinel command 'get-master-addr-by-name' and 'master' return inconsistent"
  },
  {
    "bug_location": "Redis Replication Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Strict string comparison of IP addresses without considering localhost variations (IPv4 vs IPv6)",
    "issue_number": 9820.0,
    "title": "[BUG] The problem of using strcmp to compare `localhost` ip"
  },
  {
    "bug_location": "redis.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Monitoring"
    ],
    "root_cause": "Incorrect mapping of system and user CPU time values when reporting statistics via INFO command, causing the system and user CPU metrics to be swapped",
    "issue_number": 131.0,
    "title": "System/user CPU accounting in INFO is wrong"
  },
  {
    "bug_location": "Docker Image",
    "severity": 2,
    "categories": [
      "Security",
      "Config"
    ],
    "root_cause": "Vulnerability in gosu and runc components of the official Redis Docker image, specifically github.com/opencontainers/runc v1.0.1",
    "issue_number": 11375.0,
    "title": "[BUG] CVE-2022-29162 and CVE-2021-43784"
  },
  {
    "bug_location": "RDB (Redis Database) File Storage",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery",
      "Config"
    ],
    "root_cause": "Corrupted RDB file, likely due to incomplete write or NFS storage failure during dump file creation, resulting in an invalid file signature and preventing Redis startup",
    "issue_number": 12521.0,
    "title": "[CRASH] How to restore crashed dump.rdb"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Recovery",
      "Performance"
    ],
    "root_cause": "Sentinel detection and failover mechanism appears to have timing and synchronization inconsistencies during master node shutdown, causing delayed or incomplete failover process",
    "issue_number": 13239.0,
    "title": "[BUG]sentinel failed to failover while master was down.[4.0.14]"
  },
  {
    "bug_location": "LOLWUT command implementation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Missing ASCII art generation function for Redis version 7, with fallback to a simple text version instead of the expected generative art output",
    "issue_number": 12074.0,
    "title": "[BUG] \"LOLWUT\" ASCII art unimplemented in Redis7"
  },
  {
    "bug_location": "Redis Sentinel/Replication Configuration",
    "severity": 4,
    "categories": [
      "Replication",
      "Config",
      "CodeBug"
    ],
    "root_cause": "Sentinel incorrectly configures the newly selected master to replicate to itself during failover, causing a configuration loop and preventing proper cluster recovery",
    "issue_number": 11639.0,
    "title": "[BUG] Sentinel adds replicaof to newly selected master!"
  },
  {
    "bug_location": "Redis Core Floating Point Arithmetic",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Precision differences in floating point arithmetic on Mac M1 architecture, likely due to variations in long double implementation compared to other platforms like Ubuntu",
    "issue_number": 10320.0,
    "title": "[BUG] Floating point Rounding error when running on Mac M1."
  },
  {
    "bug_location": "Unknown",
    "severity": 1,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided in the issue description",
    "issue_number": 9290.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Client Tracking Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Global key tracking table without database context, causing cross-database invalidation messages when keys with the same name are modified in different databases",
    "issue_number": 8034.0,
    "title": "[BUG] Invalidation message wrongly produced for key when key of the same name is changed in a different db"
  },
  {
    "bug_location": "Client Write Handling / IO Threads",
    "severity": 4,
    "categories": [
      "Performance",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect client write handling logic in multi-threaded IO scenario, causing write events to not be properly processed when multiple file descriptors need replies",
    "issue_number": 10509.0,
    "title": "[BUG] IO threads not work well in  many fds which are need to reply\u3002such as feed 100 replicas "
  },
  {
    "bug_location": "Redis Cluster TLS Configuration",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Security",
      "Network",
      "Replication"
    ],
    "root_cause": "Certificate validation failure during cluster node communication over TLS, likely due to incompatible certificate key usage attributes preventing client authentication",
    "issue_number": 9613.0,
    "title": "[BUG] Can't setup cluster on TLS enabled ports"
  },
  {
    "bug_location": "Redis Cluster Pub/Sub",
    "severity": 2,
    "categories": [
      "Replication",
      "Network"
    ],
    "root_cause": "In Redis Cluster, PUBLISH returns 0 when the message is successfully routed to subscribers on other nodes, which is a design behavior rather than a true bug",
    "issue_number": 7986.0,
    "title": "[BUG] PUBLISH always return 0 on redis cluster"
  },
  {
    "bug_location": "Test Framework / Stream Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential memory-related issue triggered by SANITIZER, causing I/O errors during test execution, possibly related to memory allocation or resource exhaustion",
    "issue_number": 9844.0,
    "title": "[CRASH] Running the test with SANITIZER will fail every time, and success without SANITIZER."
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Config",
      "Transaction"
    ],
    "root_cause": "Redis Sentinel lacks robust configuration validation and cross-verification mechanism when multiple sentinels are configured with different master addresses, leading to a potential split-brain scenario where each sentinel believes its own configuration is correct",
    "issue_number": 12271.0,
    "title": "[BUG]Sentinels with different initial masters in sentinel.conf enter split-brain and do not failover"
  },
  {
    "bug_location": "Memory Management / Initialization",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Unaligned memory access on 32-bit ARM architecture, likely due to memory alignment requirements not being properly handled during header initialization",
    "issue_number": 12118.0,
    "title": "[CRASH] SIGBUS on Android arm 32-bit due to unaligned memory access"
  },
  {
    "bug_location": "Redis Set/Intset Implementation",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential memory corruption during Redis cluster failover causing inconsistent set size metadata and segmentation fault in intsetGet function",
    "issue_number": 10592.0,
    "title": "[CRASH]Redis 4.0.14 crashed by signal: 11"
  },
  {
    "bug_location": "Redis Module System",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Initial misunderstanding of environment variable access in Redis modules, which can actually access environment variables using standard getenv() function",
    "issue_number": 8648.0,
    "title": "[BUG] Environment variables are not exposed to redis modules"
  },
  {
    "bug_location": "Build System / TLS Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Missing OpenSSL development libraries (libssl-dev) and incomplete build dependencies before compilation",
    "issue_number": 12054.0,
    "title": "[BUG]build tls error"
  },
  {
    "bug_location": "Build System / TLS Configuration",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Architecture mismatch between x86_64 and arm64 OpenSSL libraries, and incorrect library/include path configuration during Redis build process",
    "issue_number": 10447.0,
    "title": "[CRASH] Redis-unstable Crash when make BUILD=yes: Undefined symbols for architecture x86_64"
  },
  {
    "bug_location": "RDB loading module type handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Incorrect error message generation and potential uninitialized variable usage when processing module-specific RDB data during file loading",
    "issue_number": 8574.0,
    "title": "[BUG] Some of the RDB_TYPE_MODULE(_2) RDB loading error messages are incorrect"
  },
  {
    "bug_location": "hiredis library (dict.c, async.c, sds.c)",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Security"
    ],
    "root_cause": "Lack of proper memory allocation error handling and null pointer checks in multiple functions, which can lead to potential null pointer dereference vulnerabilities during memory allocation operations",
    "issue_number": 9339.0,
    "title": "[BUG][Version 2.8]serveral potential bugs of null pointer dereference"
  },
  {
    "bug_location": "Redis Module System",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential unintended command propagation due to server.dirty flag being set during module write operations in notifications, which could cause unexpected replication of commands",
    "issue_number": 10014.0,
    "title": "[BUG] Modules + notifications may cause unwanted propagation"
  },
  {
    "bug_location": "Geospatial (GEORADIUS) implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect handling of geospatial neighbor squares calculation when using large radius, causing duplicate key returns in GEORADIUS query",
    "issue_number": 2767.0,
    "title": "GEORADIUS returns the same key twice on Redis 3.1.999"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Hostname resolution failure preventing Sentinel from detecting node failure and triggering failover due to misconfigured replica-announce-ip and hostname settings",
    "issue_number": 12753.0,
    "title": "[BUG] Sentinel failover does not happen when node went down"
  },
  {
    "bug_location": "RedisGraph module with RediSearch interaction",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction",
      "Memory"
    ],
    "root_cause": "Potential race condition or lock synchronization issue in RediSearch_LockWrite function when creating graph nodes, causing an assertion failure during concurrent graph operations",
    "issue_number": 12072.0,
    "title": "[CRASH] when create vertex and relation on-demanded."
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Lua multivalue unpacking limitation where values are truncated when inserted into another multival before its end, causing unexpected behavior in redis.call('sunion') when using unpack() with specific argument orders",
    "issue_number": 9559.0,
    "title": "[BUG] unpack issue with sunion in EVAL"
  },
  {
    "bug_location": "Unknown",
    "severity": 0,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to analyze the bug",
    "issue_number": 13193.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Assertion failure during client write operation, likely caused by invalid psync command handling in replication synchronization process",
    "issue_number": 10242.0,
    "title": "[CRASH] Found using fuzzing single redis server instance"
  },
  {
    "bug_location": "Redis Cluster Component (cluster.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Assertion failure in cluster state management when manipulating node slots and replication configuration, specifically related to the number of slots assigned to a node during cluster reconfiguration",
    "issue_number": 12268.0,
    "title": "[CRASH] Redis cluster node crashes with assertion failure 'myself->numslots == 0' is not true"
  },
  {
    "bug_location": "Redis Core - Floating Point String Conversion",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect buffer handling in fixedpoint_d2string function when converting small floating point values, causing memory corruption and incorrect distance representation in GEORADIUS results",
    "issue_number": 11628.0,
    "title": "[BUG] Distance value is mangled in GEORADIUS after 7.0.6 upgrade"
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Double free detected in memory management of RediSearch module, likely caused by incorrect memory handling during hybrid iterator or aggregate request processing",
    "issue_number": 11462.0,
    "title": "[CRASH] free(): double free detected in tcache 2"
  },
  {
    "bug_location": "RDB Loading Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Duplicated key found in RDB file during loading process, causing Redis to crash with a SIGSEGV signal",
    "issue_number": 8511.0,
    "title": "[CRASH] Redis 6.0.6 crashed by signal: 11"
  },
  {
    "bug_location": "Build System / Release Generation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incorrect generation of release.h header file during build process, causing REDIS_BUILD_ID_RAW macro to be undefined",
    "issue_number": 12497.0,
    "title": "[BUG] REDIS_BUILD_ID_RAW not getting defined in release.h building stable"
  },
  {
    "bug_location": "Redis RDB (Persistence) Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Performance"
    ],
    "root_cause": "Integer overflow in rdbWriteRaw function due to return type mismatch between input parameter (size_t) and return value (int), causing potential data corruption when writing large objects over 2GB",
    "issue_number": 8299.0,
    "title": "[BUG] rdbWriteRaw retval overflow"
  },
  {
    "bug_location": "Redis SCAN command implementation",
    "severity": 2,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "SCAN command's incremental iteration can return empty arrays during key space traversal, which might be misinterpreted as a failure to find keys that actually exist",
    "issue_number": 11991.0,
    "title": "[BUG] SCAN can't find some keys "
  },
  {
    "bug_location": "srandmember command implementation",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory allocation issue in srandmember command when processing large negative count values, causing an out-of-memory crash",
    "issue_number": 11668.0,
    "title": "[CRASH] OOM Crash for `srandmember`"
  },
  {
    "bug_location": "Redis Client Integration (Spring Boot Data Redis)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Potential compatibility issue between Spring Boot Data Redis (2.6.8), Lettuce client, and Redis 5.0.14 cluster configuration causing read operation failures",
    "issue_number": 12105.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "networking.c and tls.c interaction with IO threads",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Race condition in handling SSL pending data when IO threads are enabled with TLS, causing double client free and potential memory corruption during connection closure",
    "issue_number": 12540.0,
    "title": "[CRASH] Double freeClient() when io-threads-do-reads and TLS are enabled"
  },
  {
    "bug_location": "redis-py Python library",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent method signature for setex() method between Python 2.7 and Python 3.7, causing argument order incompatibility",
    "issue_number": 9439.0,
    "title": "[BUG] redis.setex() has different ordering of arguments in python2.7 and python3.7 (docs not mentioning)"
  },
  {
    "bug_location": "Cluster/Radix Tree (rax) Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Potential null pointer dereference or memory corruption in raxRemove function during key deletion in Redis cluster mode",
    "issue_number": 10739.0,
    "title": "Crash report[CRASH]"
  },
  {
    "bug_location": "Redis Cluster State Management",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Single-node cluster initialization logic requires a manual 'CLUSTER MEET' to transition cluster state from 'fail' to 'ok', despite having all slots assigned",
    "issue_number": 12203.0,
    "title": "[BUG] Single-node cluster reports cluster_state:fail"
  },
  {
    "bug_location": "Redis Configuration/Network Binding",
    "severity": 3,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "Incorrect IP binding configuration with potential syntax error in bind directive, possibly causing connection issues due to malformed IP address specification (x.x.x.x 127.0.0.1/)",
    "issue_number": 10507.0,
    "title": "[BUG] I have set up bind ip address in the config file but it still cant connect"
  },
  {
    "bug_location": "Unknown",
    "severity": 1,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided in the issue description",
    "issue_number": 12375.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "SORT command implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent output behavior when using SORT command with STORE parameter, specifically when the source key is empty or non-existent, leading to unexpected key creation and return value",
    "issue_number": 224.0,
    "title": "a bug in SORT/STORE comand output"
  },
  {
    "bug_location": "redis-benchmark.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential concurrent access to shared config.previous_tick variable without proper synchronization, though later confirmed as a false positive by developers",
    "issue_number": 8937.0,
    "title": "[BUG] Potential data race in showThroughput function in redis-benchmark"
  },
  {
    "bug_location": "Lua Subsystem/Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during Lua function call (luaD_call) causing segmentation fault",
    "issue_number": 9691.0,
    "title": "[CRASH] Redis 5.0.7 crashed by signal: 11"
  },
  {
    "bug_location": "Redis Floating Point Arithmetic",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Platform-specific floating point representation differences in long double implementation, where 32-bit ARM uses 64-bit double precision instead of 80-bit extended precision, causing numeric representation variations during incremental float operations",
    "issue_number": 7935.0,
    "title": "[BUG] HINCRBYFLOAT representation on ARM 32bit"
  },
  {
    "bug_location": "RedisGraph Module (redisgraph.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory access violation or null pointer dereference in AR_EXP_FromASTNode function during graph query processing",
    "issue_number": 9460.0,
    "title": "[CRASH] redisgraph crashed"
  },
  {
    "bug_location": "Redis quicklist compression mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "The quicklist node compression logic fails to properly compress a node after insertion due to the 'recompress' flag being set to 0, preventing automatic compression of nodes that should be compressed",
    "issue_number": 12563.0,
    "title": "[BUG] quicklist compress bug"
  },
  {
    "bug_location": "Sorted Set (ZADD) Implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Potential data loss issue when adding elements to a sorted set after setting an expiration, where existing members are unexpectedly deleted",
    "issue_number": 660.0,
    "title": "zadd to key with sorted set deletes all previous members of set"
  },
  {
    "bug_location": "Client Connection Management (clientsCronResizeQueryBuffer)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during client connection buffer resizing in the clientsCronResizeQueryBuffer function, likely triggered by an edge case in the Raft module's client handling",
    "issue_number": 12679.0,
    "title": "[CRASH] Crash handling client connections"
  },
  {
    "bug_location": "Redis ACL (Access Control List) module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Transaction"
    ],
    "root_cause": "During ACL LOAD, Redis disconnects clients even when their user configuration remains unchanged, causing unnecessary connection resets",
    "issue_number": 11986.0,
    "title": "[BUG] `ACL LOAD` results in `ECONNRESET` error on clients"
  },
  {
    "bug_location": "Redis test suite / CLI testing framework",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Tcl script error in test client close operation, likely related to channel/file descriptor handling during non-interactive CLI testing",
    "issue_number": 7605.0,
    "title": "[BUG] \"make test\" fails with [exception]: Executing test client: wrong # args: should be \"close channelId\"."
  },
  {
    "bug_location": "Memory Allocation",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory mapping exhaustion in jemalloc, possibly related to virtual memory allocation limits and memory fragmentation",
    "issue_number": 10234.0,
    "title": "[CRASH] Out Of Memory allocating 16400 bytes!  redis_version: 6.2.6"
  },
  {
    "bug_location": "Redis Keyspace Notification System",
    "severity": 3,
    "categories": [
      "Performance",
      "Transaction"
    ],
    "root_cause": "Inefficient pattern matching and iteration mechanism when subscribing to a large number of specific key patterns, causing performance degradation during key updates and notifications",
    "issue_number": 10404.0,
    "title": "[BUG] Problems with the KeySpace if the number of keys is high."
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 3,
    "categories": [
      "Config",
      "Memory",
      "Performance"
    ],
    "root_cause": "Configuration setting for maxmemory does not properly validate or handle scenarios where memory reduction is not possible due to lack of evictable keys",
    "issue_number": 5504.0,
    "title": "[Bug] Config set maxmemory not return correct result"
  },
  {
    "bug_location": "Redis Cluster Migration",
    "severity": 4,
    "categories": [
      "Performance",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Blocking MIGRATE command for large hash keys (300 MB, 3 million fields) causes extended execution time, triggering Redis node timeout and unintended failover",
    "issue_number": 13122.0,
    "title": "[BUG] Migrate hashes with million of keys timeout, and causes failover"
  },
  {
    "bug_location": "Redis Replication Component",
    "severity": 4,
    "categories": [
      "Memory",
      "Replication",
      "Performance"
    ],
    "root_cause": "During disk-based replication, the master's Copy-On-Write (COW) buffer accumulates memory without terminating the RDB saving process when replica connections are closed, leading to potential Out of Memory (OOM) conditions",
    "issue_number": 7717.0,
    "title": "[BUG] Disk Based Replication Causing OOM in Master (v6.0.5)"
  },
  {
    "bug_location": "src/dict.c",
    "severity": 3,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "Predictable hash seed allowing algorithmic complexity attacks that could potentially cause hash table performance degradation by deliberately crafting hash collisions",
    "issue_number": 289.0,
    "title": "src/dict.c uses predictable key hashing algorythm"
  },
  {
    "bug_location": "Redis Pub/Sub Invalidation Mechanism",
    "severity": 3,
    "categories": [
      "Transaction",
      "Replication",
      "Network"
    ],
    "root_cause": "Race condition in message ordering during client tracking and invalidation message processing, potentially related to HELLO 3 protocol initialization",
    "issue_number": 13645.0,
    "title": "[BUG] invalidation messages received before ACK of SUBSCRIBE __redis__:invalidate"
  },
  {
    "bug_location": "create-cluster script",
    "severity": 2,
    "categories": [
      "Config",
      "Storage"
    ],
    "root_cause": "The create-cluster cleanup script fails to remove the appendonlydir directory containing AOF (Append-Only File) backup files during cluster cleanup",
    "issue_number": 10222.0,
    "title": "[BUG]create-cluster doesn't clean appendonlydir in redis 7.0"
  },
  {
    "bug_location": "Redis Module API",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Memory leak in moduleCreateArgvFromUserFormat() when REDISMODULE_ARGV_RUN_AS_USER fails to execute, preventing proper memory deallocation of argv",
    "issue_number": 12157.0,
    "title": "[BUG] REDISMODULE_ARGV_RUN_AS_USER might leak allocated RM_Call argv on failure"
  },
  {
    "bug_location": "Configuration Management / CONFIG REWRITE",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "CONFIG REWRITE does not handle included configuration files correctly when processing ACL user configurations, causing duplicate user definitions that prevent Redis from starting",
    "issue_number": 11736.0,
    "title": "[BUG] CONFIG REWRITE ignores already set ACL in included config - preventing service start"
  },
  {
    "bug_location": "dict.c/dict.h memory allocation logic",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Undefined behavior with unsigned char type causing potential memory allocation overflow on architectures with unsigned char by default (like s390x), leading to unexpected memory allocation and potential infinite loop during dictionary operations",
    "issue_number": 9369.0,
    "title": "[BUG] OOM in dictExpand on s390x architecture"
  },
  {
    "bug_location": "src/anet.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Socket not being set to -1 after failed setsockopt operation, causing potential double socket close and EBADF error when IPv6 is not supported",
    "issue_number": 8165.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "RDB Persistence Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Memory"
    ],
    "root_cause": "Memory management error in error handling code path when failing to write RDB file, specifically incorrect memory deallocation using zfree() on improperly allocated memory",
    "issue_number": 7927.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "replication.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incompatibility with newer macOS versions (13.5.2) due to changes in stat64 and fstat64 function declarations, likely related to 64-bit file system support",
    "issue_number": 12594.0,
    "title": "[BUG] Can not build from source Mac OS 13.5.2 "
  },
  {
    "bug_location": "Redis Configuration Parser",
    "severity": 2,
    "categories": [
      "Config",
      "Human"
    ],
    "root_cause": "Redis configuration parser does not support environment variable expansion during configuration file parsing, preventing dynamic hostname resolution",
    "issue_number": 10619.0,
    "title": "[BUG] Redis sentinel can not run in k8s with environment variables in config file"
  },
  {
    "bug_location": "redis-cli",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Redis CLI incorrectly interprets renamed commands starting with numbers as repeat modifiers, causing excessive error generation and potential performance overhead",
    "issue_number": 3978.0,
    "title": "rename-command in redis.conf seems to break redis-cli if command starts with a number"
  },
  {
    "bug_location": "Redis Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Potential memory fragmentation or inefficient memory allocation during high-concurrency pipeline operations, causing disproportionate memory usage between master and slave instances",
    "issue_number": 13565.0,
    "title": "[BUG]  The memory usage of the master instance is much higher than that of the slave"
  },
  {
    "bug_location": "Redis RDB Persistence (rdb.c)",
    "severity": 4,
    "categories": [
      "Performance",
      "Storage"
    ],
    "root_cause": "Frequent reading and parsing of /proc/self/smaps during BGSAVE process causing significant performance overhead, with each read taking approximately 1.3 seconds and happening every second",
    "issue_number": 8609.0,
    "title": "[BUG] BGSAVE performance order of magnitude slower in Redis 6.2"
  },
  {
    "bug_location": "Redis Set Operations/Command Processing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "A regression in command argument processing logic introduced in a recent commit (https://github.com/redis/redis/pull/9032) that changes how type checking and key validation are performed during set intersection operations, causing unexpected WRONGTYPE errors when keys have unusual names or non-standard configurations",
    "issue_number": 9273.0,
    "title": "[BUG] Regression in WRONGTYPE handling after deletion handling improvements"
  },
  {
    "bug_location": "redis-cli client component",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect prompt generation logic in redis-cli when connecting via Unix socket, which always defaulted to displaying IP:port instead of socket path",
    "issue_number": 306.0,
    "title": "redis-cli incorrect prompt string on socket connect"
  },
  {
    "bug_location": "zmalloc.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incorrect preprocessor conditional check using sizeof() which is only resolvable at compile-time, causing compilation failure on musl-based systems when jemalloc is disabled",
    "issue_number": 8573.0,
    "title": "[BUG] Redis 6.2.0 does not build without jemalloc on musl"
  },
  {
    "bug_location": "redis-trib rebalancing algorithm",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Integer division error causing uneven slot distribution during cluster rebalancing when a node is assigned zero weight, resulting in one slot being left unallocated",
    "issue_number": 3001.0,
    "title": "redis-trib rebalance with weight 0 skips 1 slot"
  },
  {
    "bug_location": "Redis Cluster Protocol",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Replication"
    ],
    "root_cause": "Incompatible cluster bus protocol changes between 6.2.14 and 7.2.2 that break backwards compatibility during cluster node communication and synchronization",
    "issue_number": 12685.0,
    "title": "[BUG] cluster fail on upgrading to 7.2.2 in 6.2.14 cluster"
  },
  {
    "bug_location": "Redis Key-Value Storage/Concurrency Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Concurrency",
      "Transaction"
    ],
    "root_cause": "Potential race condition in key deletion and retrieval process where key state is not immediately consistent across concurrent threads",
    "issue_number": 13232.0,
    "title": "[BUG] Redis key present in cache even after deleted by first thread and reading around same point of time by other thread."
  },
  {
    "bug_location": "Redis Cluster Node Management",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Memory corruption during node state transitions in Redis Cluster, specifically when a master node changes state and slave references are not properly cleaned up",
    "issue_number": 3002.0,
    "title": "Redis 3.0.0 crashed by signal: 11"
  },
  {
    "bug_location": "Build System / Compilation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing execinfo.h header on FreeBSD 9.2, which predates the introduction of backtrace functionality in the standard library",
    "issue_number": 12396.0,
    "title": "[BUG] Building fails with fatal error: (FreeBSD 9.2)"
  },
  {
    "bug_location": "Redis Client Connection Pool",
    "severity": 3,
    "categories": [
      "Network",
      "Performance",
      "Transaction"
    ],
    "root_cause": "High-frequency concurrent connections causing connection pool exhaustion or network socket overload, potentially due to lack of connection management and retry mechanism",
    "issue_number": 12483.0,
    "title": "[CRASH] <Error while reading from localhost:6379>"
  },
  {
    "bug_location": "processMultibulkBuffer function",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or instruction pointer manipulation in multi-byte instruction processing during buffer handling, possibly related to complex transaction processing",
    "issue_number": 12071.0,
    "title": "[CRASH] Redis 6.0.6 crash with SIGILL in processMultibulkBuffer"
  },
  {
    "bug_location": "AOF (Append Only File) Compaction Process",
    "severity": 4,
    "categories": [
      "Storage",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Potential background process blocking or interruption of AOF compaction mechanism, possibly related to RDB save or rewrite process interference",
    "issue_number": 10806.0,
    "title": "[BUG] AOF Compaction stopped"
  },
  {
    "bug_location": "Redis Client Output Buffer Management",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Unbounded client output buffer growth causing potential server memory exhaustion, especially for slow Pub/Sub, slave, or monitoring clients",
    "issue_number": 91.0,
    "title": "Redis should close the connection when the client output buffer is too big"
  },
  {
    "bug_location": "Redis Protocol (RESP) Parser",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Overly restrictive string-to-number parsing in RESP protocol implementation, which does not allow flexible number representations like leading spaces or leading zeros during bulk string length parsing",
    "issue_number": 12092.0,
    "title": "[BUG] RESP string as number parsing restrictive"
  },
  {
    "bug_location": "Redis Cluster Election Mechanism",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Misunderstanding of Redis cluster bus election protocol's epoch management, where a replica's local currentEpoch remains artificially bumped after an aborted leadership election",
    "issue_number": 10239.0,
    "title": "[BUG] currentEpoch doesn't decrease on a replica that campaigned for leadership but the election got aborted"
  },
  {
    "bug_location": "setrange command implementation in server.c",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Integer overflow when attempting to allocate an extremely large memory block during setrange command, causing out-of-memory crash",
    "issue_number": 11669.0,
    "title": "[CRASH] OOM Crash in `setrange`"
  },
  {
    "bug_location": "Redis Cluster Bus Communication",
    "severity": 3,
    "categories": [
      "Network",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential external network interference or misconfigured metrics exporter sending invalid messages to cluster bus port",
    "issue_number": 11339.0,
    "title": "[BUG] Bad message length or signature received from Cluster bus & quorum reached"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 2,
    "categories": [
      "Performance",
      "Monitoring"
    ],
    "root_cause": "Sentinel script execution queue management issue causing non-critical waitpid() warnings",
    "issue_number": 12731.0,
    "title": "[BUG] Redis sentinel Error: waitpid() returned a pid we can't find in our scripts execution queue!"
  },
  {
    "bug_location": "Replication/AOF Processing",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference during slave replication/AOF file processing",
    "issue_number": 13198.0,
    "title": "[BUG]Redis Fail to Start"
  },
  {
    "bug_location": "Redis Cluster Slot Migration Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Transaction"
    ],
    "root_cause": "Insufficient epoch management and state synchronization during slot ownership transfer, which prevents proper cluster state consistency when directly setting slot ownership without proper migration protocol",
    "issue_number": 10346.0,
    "title": "[BUG] CLUSTER SETSLOT NODE without first IMPORTING -> inconsistency"
  },
  {
    "bug_location": "Redis SET command implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect handling of SET command options when NX and GET are used simultaneously, causing a syntax error instead of returning a null bulk reply as specified in the command specification",
    "issue_number": 8494.0,
    "title": "[BUG] SET command doesn't work with NX & GET options"
  },
  {
    "bug_location": "RedisGraph Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Memory corruption or invalid memory access during graph edge deletion in RedisGraph module, likely caused by a memory management issue in the graph entity deletion process",
    "issue_number": 7603.0,
    "title": "[CRASH] redis 5.0.4 crashed with exist code 139  "
  },
  {
    "bug_location": "geo.c (Geospatial Commands Module)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "When the source key is empty, the GEOSEARCHSTORE command incorrectly returns an empty array instead of resetting the destination key and returning zero, which prevents expected key cleanup behavior",
    "issue_number": 9261.0,
    "title": "[BUG] GEOSEARCHSTORE returns an empty array when src points to an empty key"
  },
  {
    "bug_location": "Redis SORT command implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent behavior in handling empty result sets during SORT ... STORE operation, where existing destination key is not deleted when sort result is empty, unlike other *STORE commands",
    "issue_number": 227.0,
    "title": "SORT ... STORE does not behave like other *STORE commands"
  },
  {
    "bug_location": "Redis Connection Management during Bgsave",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Replication"
    ],
    "root_cause": "During Bgsave fork process, file descriptors are not properly closed or disconnected, causing client connections to remain in an unresponsive state due to insufficient socket shutdown mechanism",
    "issue_number": 10077.0,
    "title": "[BUG] During Bgsave, failed to disconnect idle client connection properly"
  },
  {
    "bug_location": "Redis Sentinel Failover Mechanism",
    "severity": 4,
    "categories": [
      "Replication",
      "Transaction",
      "Recovery"
    ],
    "root_cause": "Sentinel appears to fail to properly elect and promote a new master after multiple failover events, potentially due to a race condition or state tracking issue in the sentinel cluster's master election and promotion logic",
    "issue_number": 13309.0,
    "title": "[BUG] sentinel error after second switch master"
  },
  {
    "bug_location": "RDB (Redis Database) Background Save Process",
    "severity": 4,
    "categories": [
      "Storage",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption during background saving process, likely caused by memory allocation issues or hardware memory problems",
    "issue_number": 7703.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Cluster MIGRATE command implementation in cluster.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction",
      "Replication"
    ],
    "root_cause": "Complex error handling in variadic MIGRATE command leading to memory leaks, incorrect key reference counting, and potential undefined behavior during multi-key migration with partial failures",
    "issue_number": 3016.0,
    "title": "Bugs introduced in variadic MIGRATE on errors"
  },
  {
    "bug_location": "Dictionary/Key Comparison (dictSdsKeyCompare)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or use-after-free issue in key comparison function, likely related to running under QEMU on Apple M1 architecture",
    "issue_number": 10162.0,
    "title": "[CRASH] Redis 6.2.5 calling script - Apple M1 docker - ReJSON"
  },
  {
    "bug_location": "src/t_set.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "The smove command incorrectly signals key modification in the WATCH mechanism even when no actual modification occurs to the destination key",
    "issue_number": 9242.0,
    "title": "[BUG] smovecommand may signal its dstkey modified while the dstkey is not."
  },
  {
    "bug_location": "Redis Persistence/Cluster Module",
    "severity": 3,
    "categories": [
      "Storage",
      "Replication"
    ],
    "root_cause": "Redis continues to load RDB file during cluster startup even when persistence is explicitly disabled, causing unexpected key imports from different masters",
    "issue_number": 10457.0,
    "title": "[BUG] Inspite of disabling the redis persistance both AOF and RDB, RDB is loading keys of diffrent master leading to keys importing "
  },
  {
    "bug_location": "Website/Infrastructure",
    "severity": 2,
    "categories": [
      "Network",
      "Monitoring"
    ],
    "root_cause": "Temporary website/service availability issue with cli.redis.io, likely due to infrastructure or hosting problem",
    "issue_number": 12175.0,
    "title": "[CRASH] It seems that cli.redis.io is down"
  },
  {
    "bug_location": "Streams/Listpack Component",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Storage",
      "Performance"
    ],
    "root_cause": "Memory corruption in listpack implementation when handling 32-bit length encoded strings, potentially causing segmentation fault during XREAD command processing",
    "issue_number": 4428.0,
    "title": "Crash on XREAD (streams branch)"
  },
  {
    "bug_location": "RedisBloom Module (CMS.MERGE command)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory access violation or incorrect argument parsing in CMSketch_Merge function when handling weights and keys with mismatched lengths",
    "issue_number": 12991.0,
    "title": "[BUG] Crash on CMS.MERGE when weights length does not match numKeys"
  },
  {
    "bug_location": "Replication Offset Update Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Redis updates replication offset on `commandProcessed` function assuming command completion, which is incorrect for module commands that execute in background threads and block clients",
    "issue_number": 11608.0,
    "title": "[BUG] Wait command is not working properly on blocking commands"
  },
  {
    "bug_location": "hiredis library (bundled dependency)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Compilation incompatibility between hiredis library and clang compiler on OS X, specifically with Xcode 4.3",
    "issue_number": 338.0,
    "title": "Compilation error on OS X, caused by bundled hiredis"
  },
  {
    "bug_location": "redis-cli.c",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Dynamic memory allocated to slot_nodes is not properly freed when an error condition occurs, causing a memory leak in the clusterManagerFixSlotsCoverage function",
    "issue_number": 13256.0,
    "title": "[BUG] There is a memory leak defect at line 5981 of the file redis-cli.c in /redis/src/."
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Network",
      "Replication",
      "Config"
    ],
    "root_cause": "Sentinel fails to detect and handle IP address changes in Kubernetes environments, maintaining stale network connections and not properly reconnecting to instances after pod restarts",
    "issue_number": 8540.0,
    "title": "[BUG]Sentinel  stuck with +sdown upon replica pod restart  "
  },
  {
    "bug_location": "Redis Quicklist Component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory allocation or size limit violation in quicklist implementation when handling large lists with non-standard configuration settings, specifically when list-max-ziplist-size is set to a negative value and large elements are inserted",
    "issue_number": 12864.0,
    "title": "[CRASH] in quicklist violate size limit"
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory access violation or null pointer dereference in RediSearch module's KNN (K-Nearest Neighbors) computation during distance calculation",
    "issue_number": 11909.0,
    "title": "[CRASH] <After running a redissearch knn command, redis is down>"
  },
  {
    "bug_location": "redis-cli hints/autocomplete system",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Hints mechanism lacks sophisticated parsing for complex command arguments with optional parameters, resulting in incorrect or persistent display of optional argument suggestions",
    "issue_number": 8084.0,
    "title": "[BUG] redis-cli's tip mishandles optional command arguments"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Network",
      "Replication",
      "Config"
    ],
    "root_cause": "Sentinel configuration discovery mechanism allows overlapping network configurations to cross-pollinate sentinel state, potentially causing unintended configuration merging when network segments have similar topology and port configurations",
    "issue_number": 13610.0,
    "title": "[BUG] Sentinel configurations are mixed on 2 different architectures with same network segment and port"
  },
  {
    "bug_location": "Redis Module (trie.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory access violation or segmentation fault in the custom Redis trie module during node insertion operation",
    "issue_number": 7658.0,
    "title": "[CRASH] Centos 7, Redis 5.0.8"
  },
  {
    "bug_location": "Redis Replication/Cluster Synchronization",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential memory synchronization and buffer overflow during large data replication, causing intermittent node failures and connection instability",
    "issue_number": 10073.0,
    "title": "[BUG] Redis nodes fail after: MASTER <-> REPLICA sync: Flushing old data "
  },
  {
    "bug_location": "Lua scripting engine (script.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Potential race condition or context management issue in Lua script execution, specifically related to the current run context not being properly managed during eval command processing",
    "issue_number": 10079.0,
    "title": "[CRASH] when i use eval ,the redis-server crashed"
  },
  {
    "bug_location": "Redis Module API / Replication Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Calling RedisModule_ReplicateVerbatim() in a worker thread without proper thread-safe context locking in Redis 7.x, which introduces a new assertion check in handleClientsBlockedOnKeys() function",
    "issue_number": 12647.0,
    "title": "[CRASH] worker thread call RedisModule_ReplicateVerbatim(ctx); trigger redis crash"
  },
  {
    "bug_location": "Redis Test Framework",
    "severity": 2,
    "categories": [
      "Config",
      "Human"
    ],
    "root_cause": "Test configuration management lacks proper cleanup mechanism when tests involving maxmemory configuration fail, potentially leaving configuration changes in place for subsequent tests",
    "issue_number": 11972.0,
    "title": "[BUG] if a test that sets maxmemory fails, it doesn't unset maxmemory limits"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to diagnose the specific bug or crash",
    "issue_number": 13194.0,
    "title": "[CRASH] <short description>"
  },
  {
    "bug_location": "Redis Cluster/Sharding Scan Command",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Replication"
    ],
    "root_cause": "SCAN command in multi-shard environments may not return all keys in a single iteration due to shard-level scanning behavior, where each shard is scanned independently and may not guarantee complete key retrieval in one pass",
    "issue_number": 10557.0,
    "title": "[BUG] Not all keys are returned on \"scan 0 match *\" for multi-shard DB"
  },
  {
    "bug_location": "Unknown",
    "severity": 1,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient technical information provided to analyze the actual bug",
    "issue_number": 13181.0,
    "title": "Redis is so trash lmfao [BUG]"
  },
  {
    "bug_location": "rdb.c, rdbLoadRio() function",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Memory leak when module auxiliary load fails, where allocated io.ctx is not properly freed if an error occurs during module loading",
    "issue_number": 9704.0,
    "title": "[BUG] Possible memory leak in rdb.c, rdbLoadRio()"
  },
  {
    "bug_location": "Redis Cluster Slot Management",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance"
    ],
    "root_cause": "Unstable node state during repeated reboots causing slot reassignment and inconsistent cluster configuration, potentially triggered by cluster-node-timeout and node failure detection mechanisms",
    "issue_number": 11592.0,
    "title": "[BUG] Slot migrated among cluster nodes."
  },
  {
    "bug_location": "Redis Cluster Client/Network Layer",
    "severity": 3,
    "categories": [
      "Network",
      "Replication",
      "Performance",
      "Unknown"
    ],
    "root_cause": "Inconclusive - potential interaction issue between Redis 7.2.5, RedisPlusPlus client, Docker networking, and cluster configuration, leading to unexpected connection failures and potential segmentation fault",
    "issue_number": 13450.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "RediSearch Cluster Mode",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential indexing or aggregation issue with JSON data in clustered environment where RediSearch might not correctly process nested array elements during count aggregation",
    "issue_number": 12356.0,
    "title": "[BUG] The RediSearch Result Not Correct In Cluster Mode"
  },
  {
    "bug_location": "Redis networking component (networking.c)",
    "severity": 2,
    "categories": [
      "Memory",
      "Performance",
      "Config"
    ],
    "root_cause": "Lack of configurable query buffer size limit, potentially allowing unbounded memory consumption during blocking operations or client connection states",
    "issue_number": 2679.0,
    "title": "No limit on query buffer"
  },
  {
    "bug_location": "Redis Windows Service",
    "severity": 3,
    "categories": [
      "Recovery",
      "Config",
      "Unknown"
    ],
    "root_cause": "Potential memory access violation (0xc0000005 exception code) during Windows OS shutdown process, likely related to improper graceful shutdown handling in Redis Windows service implementation",
    "issue_number": 12172.0,
    "title": "[CRASH] Redis service crashes during operating system shutdown"
  },
  {
    "bug_location": "Redis String Type Test Suite",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Missing jemalloc memory allocation check in the 7.0 branch test suite, causing memory usage assertion failure on macOS Ventura",
    "issue_number": 12431.0,
    "title": "[BUG] redis 7.0.12 \"trim on SET with big value\" test fails on Intel and Silicon Macs running Ventura"
  },
  {
    "bug_location": "Redis Stream XTRIM command",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Incorrect implementation of XTRIM MINID logic that causes deletion of all stream messages instead of only messages with IDs lower than the specified threshold",
    "issue_number": 9410.0,
    "title": "[BUG] XTRIM MINID may delete messages whose IDs are higher than threshold"
  },
  {
    "bug_location": "Dictionary/Key Management (dictAddRaw)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during key insertion in dictionary operations, likely triggered by an extremely long or malformed key name",
    "issue_number": 10540.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "RDB persistence module (rdb.c)",
    "severity": 4,
    "categories": [
      "Storage",
      "CodeBug",
      "Recovery"
    ],
    "root_cause": "Duplicated key detected during RDB file loading, indicating potential data corruption or inconsistent state during RDB persistence process",
    "issue_number": 11697.0,
    "title": "[CRASH] Software Failure"
  },
  {
    "bug_location": "Redis Modules (RedisJSON and RediSearch)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during key opening/scanning operation in module interaction, likely caused by incompatibility between Redis 7.0.8 and loaded modules (ReJSON and RediSearch)",
    "issue_number": 11837.0,
    "title": "[CRASH] 7.08 crashed inexplicably"
  },
  {
    "bug_location": "BITOP command implementation",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Memory handling or boundary condition error in the recently optimized BITOP command implementation, likely causing a segmentation fault during bitwise operations",
    "issue_number": 529.0,
    "title": "\"BITOP command 10x speed improvement\" commit causes crash"
  },
  {
    "bug_location": "Redis Persistence/Cluster Recovery",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery",
      "Replication"
    ],
    "root_cause": "Unexpected FLUSHALL command in AOF file causing data loss during cluster restart, likely triggered by an automatic cluster management process",
    "issue_number": 13554.0,
    "title": "[BUG] Redis cluster not recovering previously persisted data after host machine restart"
  },
  {
    "bug_location": "Redis Intersection Operation (zinterstore)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Regression in zinterstore implementation that breaks intersection logic when mixing sets and sorted sets, specifically affecting versions 2.4.13 and 2.6 RC, causing inconsistent intersection results",
    "issue_number": 516.0,
    "title": "zinterstore fails when mixing sets and sorted sets"
  },
  {
    "bug_location": "Redis Core Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or memory management issue in Redis 3.2.12, specifically on ARM architecture, with signs of segmentation fault during hash operation (hincrby command)",
    "issue_number": 11712.0,
    "title": "[CRASH] redis server crashes randomly"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "Security",
      "Upgrade"
    ],
    "root_cause": "Multiple unpatched Lua CVE vulnerabilities in Redis 6.0.4 due to outdated Lua version (5.1)",
    "issue_number": 7715.0,
    "title": "[BUG] using redis 6.0.4\uff0clua CVE vulnerabilities not fixed. Is there any plan to upgrade or fix it?"
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Scripting",
      "Performance"
    ],
    "root_cause": "Limitation in Lua bit library using 32-bit signed integers, preventing bitwise operations on numbers larger than 30 bits without overflow",
    "issue_number": 2843.0,
    "title": "Bitwise logic operations on large numbers(up to 53 bits)"
  },
  {
    "bug_location": "Redis Sentinel Discovery Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Config"
    ],
    "root_cause": "Inconsistent handling of sentinel instances with matching IP/port, where old sentinel entries are not fully replaced as documented, leading to potential confusion in sentinel count and failover decision-making",
    "issue_number": 8786.0,
    "title": "[BUG] Handling of known Sentinel Instances"
  },
  {
    "bug_location": "adlist.c (List Duplication Function)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory management issue in list duplication where shallow copy flag is not consistently tracked, which could lead to resource leaks or memory corruption if list duplication fails during node addition",
    "issue_number": 11880.0,
    "title": "[BUG] Why not set a flag variable to determine if it is a shallow copy"
  },
  {
    "bug_location": "ziplist component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid memory access in ziplistInsert function during list manipulation",
    "issue_number": 12099.0,
    "title": "[CRASH] Redis 5.0.9 crash due to ziplistInsert"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Config",
      "Transaction"
    ],
    "root_cause": "Potential configuration issue preventing proper master-slave role switching during manual failover, possibly related to conflicting sentinel configurations or cluster mode settings",
    "issue_number": 8204.0,
    "title": "[BUG] redis 6.0.8 sentinel can't make the master to slave "
  },
  {
    "bug_location": "Redis process title management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "setproctitle implementation clears /proc/PID/environ, which interferes with process environment information retrieval",
    "issue_number": 9973.0,
    "title": "[BUG] Redis will clear /proc/PID/environ in setproctitle"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent handling of memory unit suffixes (mb) between Redis versions 4.0.14 and 5.0.13, where version 4.0.14 does not convert 'mb' to bytes while 5.0.13 does automatic conversion",
    "issue_number": 12132.0,
    "title": "[BUG] Use the command 'CONFIG SET client-output-buffer-limit \"slave 1024mb 512mb 180\" ', the effective data is \"slave 1024 512 180\""
  },
  {
    "bug_location": "Redis Cluster Pub/Sub Subsystem",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Sharded Pub/Sub state is not properly cleaned up when a replica is moved between master nodes, causing subscription blocking and not receiving unsubscribe signals",
    "issue_number": 12558.0,
    "title": "[BUG] redis client do not recieve sunsubscribe when slave redis node replicate another master"
  },
  {
    "bug_location": "Redis Cluster Creation CLI",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Performance"
    ],
    "root_cause": "The redis-cli cluster creation process lacks proper timeout handling and error detection when network ports or services are inaccessible, causing an indefinite waiting state instead of failing gracefully",
    "issue_number": 13268.0,
    "title": "[BUG] When the bus_port is inaccessible, creating a cluster using redis-cli will result in an infinite wait without returning a failure"
  },
  {
    "bug_location": "Redis Streams (XCLAIM command)",
    "severity": 3,
    "categories": [
      "Transaction",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential race condition or protocol inconsistency during message claiming in Redis Streams, possibly related to replication or consumer group recovery process",
    "issue_number": 8924.0,
    "title": "[BUG] xclaim claims the message but returns nil"
  },
  {
    "bug_location": "Redis GETRANGE command implementation",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incorrect handling of negative indices in range calculation, allowing retrieval of string segments when indices should result in an empty string",
    "issue_number": 13207.0,
    "title": "[BUG] `GETRANGE` returns incorrect response with negative indices"
  },
  {
    "bug_location": "scripting.c / slowlog.c",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference in Lua scripting hook during slowlog processing, likely caused by improper handling of server.lua_caller when executing Lua scripts with large iterations",
    "issue_number": 480.0,
    "title": "Bug report, slowlog - EVAL"
  },
  {
    "bug_location": "t_zset.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Potential memory corruption or inconsistent state in sorted set (zset) implementation during ZADD operation with large number of members",
    "issue_number": 12551.0,
    "title": "[CRASH] occurs when executing redisCommand() using the hiredis library."
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during Lua script execution, specifically during a job queue operation with lpop command",
    "issue_number": 11860.0,
    "title": "[CRASH] Docker redis container crashed continuously"
  },
  {
    "bug_location": "activeExpireCycle in expire.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Race condition during key expiration where a notification callback can delete a key while iterating through the expiration dictionary, causing an invalid memory access",
    "issue_number": 8087.0,
    "title": "[CRASH] activeExpireCycle crash"
  },
  {
    "bug_location": "Redis Docker Image / Node.js Integration",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Incompatibility between Redis 7.2.0 stack image and Node.js runtime initialization, potentially caused by threading or platform configuration issues in the Docker container",
    "issue_number": 13585.0,
    "title": "[CRASH] Redis 7.2.0 server crashing on installation through docker"
  },
  {
    "bug_location": "Redis Systemd Integration",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade",
      "Network"
    ],
    "root_cause": "Potential configuration mismatch during Redis upgrade and Systemd integration in Yocto Linux build, specifically related to socket initialization and startup notification mechanism",
    "issue_number": 13225.0,
    "title": "[BUG] Systemd Notify stays activating on startup"
  },
  {
    "bug_location": "Redis MIGRATE command replication logic",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Incorrect conditional logic for replicating DEL command when MIGRATE is used with COPY option, causing unintended key deletion on replica instances",
    "issue_number": 2424.0,
    "title": "Redis MIGRATE with COPY replicating DEL"
  },
  {
    "bug_location": "Redis Event Loop (ae.c/ae_epoll.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Network",
      "Performance"
    ],
    "root_cause": "Potential desynchronization between epoll event tracking and actual file descriptor state, causing epoll_ctl failures when attempting to register new client file descriptors",
    "issue_number": 2479.0,
    "title": "Error registering fd event for event for the new client:No such file or direcory"
  },
  {
    "bug_location": "Redis AOF (Append Only File) Rewrite Mechanism",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "The aofrewrite_scheduled flag was not being reset consistently after a background AOF rewrite, potentially causing repeated or missed AOF rewrite operations",
    "issue_number": 161.0,
    "title": "a bug about aofrewrite_scheduled"
  },
  {
    "bug_location": "Build System/Makefile",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incompatibility between GCC 12.x compiler settings and Redis build configuration, specifically related to Position Independent Executable (PIE) compilation flags",
    "issue_number": 11836.0,
    "title": "[BUG]Make Build Error"
  },
  {
    "bug_location": "Replication Module",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "DEBUG POPULATE command does not increment server.dirty counter, preventing key replication to replica nodes",
    "issue_number": 9863.0,
    "title": "[BUG] DEBUG POPULATE is not replicated"
  },
  {
    "bug_location": "Sorted Set (ZADD) Implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent handling of ZADD command with LT (Less Than) modifier, where the return value suggests an increment occurred, but the actual score remains unchanged",
    "issue_number": 8718.0,
    "title": "[BUG] ZADD LT with INCR will reply with the INCR number but actual score doesn't change"
  },
  {
    "bug_location": "Redis Core (Dict/Set Operations)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory alignment or architecture compatibility issue when running Redis 6.0 on Docker with Mac M1 ARM architecture, likely related to binary translation via Rosetta",
    "issue_number": 9561.0,
    "title": "[BUG]  There is an error on redis:6.0 using docker on Mac M1 "
  },
  {
    "bug_location": "Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Unknown"
    ],
    "root_cause": "Insufficient information to definitively determine the exact cause of command propagation failure between master and slave nodes",
    "issue_number": 11996.0,
    "title": "[BUG] Command propagation issue"
  },
  {
    "bug_location": "Redis Persistence Layer",
    "severity": 2,
    "categories": [
      "Config",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential data loss risk when simultaneously using mixed persistence (AOF) and RDB persistence modes without proper migration configuration",
    "issue_number": 13354.0,
    "title": "[BUG]Is there a conflict when Redis mixed persistence and RDB persistence are enabled simultaneously"
  },
  {
    "bug_location": "expire.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "When an EXPIRE command is issued with a timestamp in the past, Redis generates a 'del' event instead of an 'expired' event, which differs from the user's expected behavior for keyspace notifications",
    "issue_number": 12211.0,
    "title": "[BUG] when set a expire time smaller than now, event notify should be \"expired-key\", not \"del\""
  },
  {
    "bug_location": "Redis Cluster Networking",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "CodeBug"
    ],
    "root_cause": "Redis cluster internal MOVE redirects using 127.0.0.1 instead of host network interface, preventing external service connections when running in a container",
    "issue_number": 11183.0,
    "title": "[BUG] cluster internal MOVE commands makes host:port not reachable."
  },
  {
    "bug_location": "Redis Replication Component",
    "severity": 4,
    "categories": [
      "Replication",
      "CodeBug",
      "Network"
    ],
    "root_cause": "Protocol desynchronization during multiple slave attachments, causing buffer corruption and potential query processing failures",
    "issue_number": 141.0,
    "title": "redis-server crash w/strack trace..."
  },
  {
    "bug_location": "RDB Persistence Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Improper error handling during RDB save process when shutdown command is received, causing a segmentation fault when unable to write to a read-only RDB file",
    "issue_number": 10439.0,
    "title": "[CRASH] Redis-Server Crashed after failed to save rdb when receive shutdown command"
  },
  {
    "bug_location": "Redis Client Tracking Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "When enabling client tracking with BCAST mode multiple times, the system does not properly reset or validate prefix tracking, causing duplicate invalidation messages for the same key",
    "issue_number": 8003.0,
    "title": "[BUG] Duplicate invalidation message when turning tracking with BCAST option on with and without prefixes"
  },
  {
    "bug_location": "Redis Core/String Parsing",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent handling of -0 (negative zero) in numeric increment operations like HINCRBY and INCRBY, causing unexpected behavior in certain scenarios, particularly in Lua scripting",
    "issue_number": 11683.0,
    "title": "[BUG] hincrby/incrby -0 will report an error"
  },
  {
    "bug_location": "Homebrew Redis Package / Dynamic Linking",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Incompatible OpenSSL library linking on M1 Mac ARM64 architecture, causing code signature validation failure during dynamic library loading",
    "issue_number": 8518.0,
    "title": "[CRASH] Cannot start Redis 6.0.10 on M1 Mac (macOS 11.2.1)"
  },
  {
    "bug_location": "redis-cli URI parsing in src/redis-cli.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect handling of empty string user in URI parsing, causing unintended authentication behavior when connecting with a URI containing an empty username",
    "issue_number": 9186.0,
    "title": "[BUG] User parsing in redis-cli URI should ignore empty string"
  },
  {
    "bug_location": "Redis Cluster Node State Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Inconsistent state transition logic allowing a node to simultaneously hold primary and replica roles, which violates Redis Cluster's expected node state model",
    "issue_number": 12717.0,
    "title": " [BUG] Redis Cluster node after becoming Replica allows adding of primary slot range"
  },
  {
    "bug_location": "Redis Cluster Replication Synchronization",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "CodeBug"
    ],
    "root_cause": "Incorrect handling of network failures and IP address resolution during master-slave synchronization, causing the server.masterhost to remain unupdated after network partition recovery",
    "issue_number": 13511.0,
    "title": "[BUG]The master-slave synchronization relationship of cluster shards cannot be restored due to network failure"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Recovery"
    ],
    "root_cause": "Null pointer dereference in sentinelProcessHelloMessage function when processing sentinel configuration updates, likely caused by mismatched sentinel ID and address during failover scenarios",
    "issue_number": 3035.0,
    "title": "Redis-sentinel 3.2rc1 crashed after master was shutdown using \"poweroff\""
  },
  {
    "bug_location": "Redis Hash/Dictionary Implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during hash table lookup, likely related to jemalloc implementation on ARM/M1 architecture under Docker/QEMU emulation",
    "issue_number": 9187.0,
    "title": "[CRASH] redis 6.2.3 and (to me) the HGET argv[2] looks funny - Apple M1 docker / Redis Graph"
  },
  {
    "bug_location": "Build System/Makefile",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incomplete atomic library support detection for ARM architectures, specifically ARM7/aarch64, causing undefined references during compilation due to missing atomic operations support",
    "issue_number": 10426.0,
    "title": "[BUG] passing CFLAGS=\"_latomic\" does not solve the standard missing libstdc++ atomic support"
  },
  {
    "bug_location": "Redis Function Library Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect library loading error handling causing unintended metric increments when attempting to load an existing library",
    "issue_number": 10705.0,
    "title": "[BUG][FUNCTION]load exists libraries cause libraries_count increase"
  },
  {
    "bug_location": "Redis Cluster Configuration Management",
    "severity": 3,
    "categories": [
      "Replication",
      "Config",
      "Recovery"
    ],
    "root_cause": "Automatic slave migration strategy causing unintended replica reconfiguration during cluster reboot, potentially breaking redundancy requirements",
    "issue_number": 10729.0,
    "title": "[BUG] Redis cluster looses configuration"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Transaction",
      "Network"
    ],
    "root_cause": "Potential race condition in sentinel leader election mechanism where votes in a previous epoch might become invalidated, preventing successful failover even with majority votes",
    "issue_number": 12865.0,
    "title": "[BUG] sentinel report -failover-abort-not-elected with enough votes received"
  },
  {
    "bug_location": "/redis/src/redis-cli.c",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Dynamically allocated memory (argv2) is not freed before function return, causing a memory leak at line 3615",
    "issue_number": 13259.0,
    "title": "[BUG]There is a memory leak defect at line 3615 in the file /redis/src/redis-cli.c."
  },
  {
    "bug_location": "Redis Test Framework / Test Client",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incompatibility with macOS tail command when executing test log parsing, likely related to different tail command behavior between Unix/Linux and macOS versions",
    "issue_number": 7607.0,
    "title": "[BUG] \"make test\" fails with [exception]: Executing test client: tail: + 28: No such file or directory."
  },
  {
    "bug_location": "Redis TLS module (tls.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incompatible boolean type usage in C code, likely due to missing include or type definition for 'bool' type",
    "issue_number": 8173.0,
    "title": "[BUG] Redis unstable make fails with BUILD_TLS=yes "
  },
  {
    "bug_location": "Redis I/O Threading Mechanism",
    "severity": 2,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "I/O threads are not automatically activated under low request throughput, requiring a minimum request volume to justify multi-threading overhead",
    "issue_number": 8115.0,
    "title": "[BUG]redis6 enable multi-io-thread,but not worked all still work on main thread"
  },
  {
    "bug_location": "Redis Replication Socket Handling",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance",
      "Storage"
    ],
    "root_cause": "Incomplete socket handling during graceful master shutdown under high load, causing premature socket buffer draining and potential data loss when TCP congestion or CPU overload occurs",
    "issue_number": 9693.0,
    "title": "[BUG] Data loss when performing a graceful master shutdown under high load"
  },
  {
    "bug_location": "Lua Scripting Engine in Redis",
    "severity": 2,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "Potential security vulnerabilities in embedded Lua 5.1.5 version, though analysis suggests Redis is not directly impacted by the specific CVEs mentioned",
    "issue_number": 11287.0,
    "title": "[BUG] Security vulnerabilities coming from Lua"
  },
  {
    "bug_location": "Redis Cluster Management",
    "severity": 3,
    "categories": [
      "Transaction",
      "Network",
      "Performance"
    ],
    "root_cause": "Race condition during cluster initialization where cluster state synchronization is not immediately consistent across nodes, causing temporary inconsistent cluster readiness reporting",
    "issue_number": 11023.0,
    "title": "[BUG] CLUSTER INFO and CLUSTER NODES output unreliable for determining cluster usability"
  },
  {
    "bug_location": "Redis Cluster Management CLI",
    "severity": 3,
    "categories": [
      "Network",
      "Transaction"
    ],
    "root_cause": "Potential network connectivity or cluster state synchronization issue preventing successful node addition, likely due to cluster being in a partially failed state with multiple nodes marked as fail?",
    "issue_number": 12461.0,
    "title": "[BUG] execute redis-cli --cluster add-node command no return for long time"
  },
  {
    "bug_location": "Redis Client Connection Handling",
    "severity": 3,
    "categories": [
      "Network",
      "Performance",
      "Memory"
    ],
    "root_cause": "Unresolved network connection in CLOSE_WAIT state causing potential memory leak or resource exhaustion when Redis server is no longer available",
    "issue_number": 13496.0,
    "title": "[BUG] Redis clients add 1GB/s memory usage through a CLOSE_WAIT server connection"
  },
  {
    "bug_location": "Redis Stream Command (XREAD)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Feature introduced in Redis 7.4 with syntax change from 'STREAM' to 'STREAMS', not compatible with earlier versions. Requires version upgrade to use '+' special operator for reading last stream item.",
    "issue_number": 13472.0,
    "title": "[BUG] Getting last item from stream with XREAD + special operator returns error"
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential compatibility issue with Apple Silicon M1 architecture and Rosetta 2 translation layer, causing memory segmentation fault during initialization",
    "issue_number": 8291.0,
    "title": "[BUG] MacBookPro Big Sur 11.1 Apple Silicon M1"
  },
  {
    "bug_location": "Redis Client/Pipeline Operation",
    "severity": 3,
    "categories": [
      "Transaction",
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential race condition or timing issue during pipeline execution where key might be created but not fully persisted before subsequent get operation",
    "issue_number": 11091.0,
    "title": "[BUG]incr and get command return not equal"
  },
  {
    "bug_location": "Redis Stream Module Interaction",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Issue with stream entry recognition when entries are added by a Redis module, causing blocking XREAD commands to timeout incorrectly even when new entries exist",
    "issue_number": 8125.0,
    "title": "[BUG] Redis Stream entries added by module not recognized by XREAD with special ID $"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Storage"
    ],
    "root_cause": "Configuration rewrite mechanism does not properly handle empty save option, causing configuration inconsistency during server restart",
    "issue_number": 8716.0,
    "title": "[BUG] Empty \"save\" option is not storred with \"config rewrite\""
  },
  {
    "bug_location": "RedisJSON JSONPath Query Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Logical OR operator implementation incorrectly handles predicate failures, causing entire result set to be nullified when one predicate does not match, instead of returning matching results",
    "issue_number": 11019.0,
    "title": "[BUG] JSONPath OR operator || returns empty result if one predicate fails"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Recovery",
      "Performance"
    ],
    "root_cause": "Sentinel unable to initiate failover during master node restart due to master being in LOADING state, which prevents normal synchronization and failover mechanism",
    "issue_number": 11333.0,
    "title": "[BUG] Sentinel fails to failover"
  },
  {
    "bug_location": "Redis Module (hellocluster.so)",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Memory leak in PingReceiver callback function where RedisModuleCallReply is not freed after calling RedisModule_Call()",
    "issue_number": 9800.0,
    "title": "[BUG] A memory leak in the example module \"hello cluster\""
  },
  {
    "bug_location": "Hash Data Type / HRANDFIELD Command",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential statistical randomness issue in HRANDFIELD command's random sampling algorithm, causing occasional chi-square test failures with values slightly exceeding expected threshold",
    "issue_number": 12094.0,
    "title": "[BUG] HRANDFIELD with <count> - hashtable in tests/unit/type/hash.tcl"
  },
  {
    "bug_location": "Redis I/O Threading Subsystem",
    "severity": 3,
    "categories": [
      "Performance",
      "Config",
      "CodeBug"
    ],
    "root_cause": "OS CPU scheduling conflict with Redis thread allocation, specifically related to the 'isolcpus' kernel parameter causing thread contention on core 0, preventing proper thread distribution across available CPU cores",
    "issue_number": 8675.0,
    "title": "[BUG] threaded-io causes increased CPU utilization that's only resolved after a Redis restart"
  },
  {
    "bug_location": "Redis Cluster Rebalancing Component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Assertion failure during cluster rebalancing due to unexpected state in server.also_propagate array, likely caused by lazy key expiration during key lookup in cluster operations",
    "issue_number": 11014.0,
    "title": "[CRASH] Failure to rebalance on 7.0.0-rc2"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or race condition in sentinel refresh mechanism during instance info update",
    "issue_number": 8012.0,
    "title": "[CRASH] redis-sentinel suddenly crashed"
  },
  {
    "bug_location": "Redis Hash Function",
    "severity": 3,
    "categories": [
      "Security",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Vulnerable hash function design that allows seed-independent hash collisions, enabling potential Denial of Service attacks by manipulating input keys to hash into the same bucket, causing worst-case O(N) time complexity",
    "issue_number": 663.0,
    "title": "Denial of Service Attack through Forced Hash Collisions"
  },
  {
    "bug_location": "Redis Configuration Parser",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Configuration file parsing error where Redis Sentinel incorrectly rewrites the 'oom-score-adj-values' parameter, removing the directive name and leaving only numeric values, which causes configuration parsing failure",
    "issue_number": 7760.0,
    "title": "[CRASH] Redis Sentinel rewrite redis.conf by incorrect parameter"
  },
  {
    "bug_location": "Redis Client Buffer Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Client query buffers (redisClient.querybuf) grow dynamically but do not automatically shrink when no longer needed, leading to persistent memory allocation even after data processing is complete",
    "issue_number": 364.0,
    "title": "Client buffers are never reclaimed until connection is closed"
  },
  {
    "bug_location": "Redis Sentinel Discovery/Configuration",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Sentinel discovery mechanism may not correctly handle multiple sentinel instances with similar network configurations, potentially causing incomplete sentinel list reporting",
    "issue_number": 11719.0,
    "title": "[BUG] docker \u542f\u52a8 7.0.5 \u7248\u672c\u76843\u4e2a\u54e8\u5175 \u5f532\u4e2a\u54e8\u5175\u5bb9\u5668\u7684ip \u5730\u5740\u4e00\u6837\u65f6\uff0c\u5728\u7b2c3\u4e2a\u54e8\u5175\u91cc\u6267\u884c sentinel sentinels mymaster \u8fd4\u56de\u7684\u5176\u4ed6\u54e8\u5175\u4fe1\u606f\u53ea\u67091\u4e2a"
  },
  {
    "bug_location": "RediSearch/FT.AGGREGATE Wildcard Search",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent wildcard matching behavior in RediSearch's full-text aggregate search, potentially related to tokenization or indexing algorithm that fails to correctly handle partial word matches across different wildcard patterns",
    "issue_number": 13454.0,
    "title": "[BUG] Wildcard Search Using FT.AGGREGATE Does Not Return All Results"
  },
  {
    "bug_location": "Redis Module System",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Unfinished module timer continues executing after module unload, causing memory access violation and crash when attempting to access deallocated memory",
    "issue_number": 10186.0,
    "title": "[CRASH] unfinished module timer causes crash after the module unload"
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory management issue or compatibility problem with 32-bit ARM architecture (Raspberry Pi 3B+)",
    "issue_number": 9405.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Sentinel Test Suite",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing procedure `restart_killed_instances` in test script, likely due to incorrect sourcing of initialization test file",
    "issue_number": 10470.0,
    "title": "[BUG] Sentinel test 08 can't run on its own"
  },
  {
    "bug_location": "Redis Core - Key Storage/Dictionary Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory allocation or dictionary management issue when attempting to insert an extremely large number of unique keys (2.7 billion) in a single operation",
    "issue_number": 2634.0,
    "title": "Redis server crashed"
  },
  {
    "bug_location": "Redis Module API (RedisModule_SignalKeyAsReady)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "API limitation where SignalKeyAsReady only works for existing keys, not non-existent keys",
    "issue_number": 7878.0,
    "title": "[Bug] RedisModule_SignalKeyAsReady not working as expected"
  },
  {
    "bug_location": "ACL (Access Control List) Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent parsing behavior when applying channel permissions with wildcard patterns in Redis ACL, requiring manual channel permission reset to restore expected functionality",
    "issue_number": 8646.0,
    "title": "[BUG] Broken/Inconsistent parsing behavior when applying ACL with wildcard"
  },
  {
    "bug_location": "Sorted Set Command Parsing",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect command syntax parsing for ZPOPMIN with COUNT option, where the command expects a direct numeric argument instead of a COUNT keyword",
    "issue_number": 10998.0,
    "title": "[BUG] ZPOPMIN doesnt work with count option"
  },
  {
    "bug_location": "activeExpireCycle function in key expiration mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory corruption or segmentation fault during key expiration processing, likely due to a logic error in the new expires code implementation",
    "issue_number": 6723.0,
    "title": "Redis 5.9.101 crashed by signal: 8"
  },
  {
    "bug_location": "Redis Stack Replica Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential memory leak or inefficient memory allocation in Redis Stack 7.2.x related to RedisGears module",
    "issue_number": 13370.0,
    "title": "[BUG] Redis Stack cluster 7.2.5 replicas consume much more memory than the masters "
  },
  {
    "bug_location": "RDB Loading (rdbLoadObject)",
    "severity": 5,
    "categories": [
      "Security",
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Lack of input validation when parsing RDB data structures, allowing potential buffer overflow and memory corruption during object restoration via RESTORE command for specific RDB data types like quicklists, ziplists, and other compressed data structures",
    "issue_number": 3080.0,
    "title": "crashes in rdbLoadObject"
  },
  {
    "bug_location": "Redis Systemd Service Configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade",
      "Storage"
    ],
    "root_cause": "Ubuntu package updates overwriting systemd service configuration, specifically the ReadWriteDirectories path, causing Redis service startup failure when custom storage paths are configured",
    "issue_number": 12676.0,
    "title": "[BUG] Redis reverts the storage directory from /etc/systemd/system/redis.service file when applying updates"
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential architecture compatibility issue with Apple M1 chip when running Redis under Rosetta 2 translation layer, causing memory access violation during startup",
    "issue_number": 8144.0,
    "title": "[CRASH] redis-start command fails on Apple M1 chip"
  },
  {
    "bug_location": "server.c, RDB persistence shutdown mechanism",
    "severity": 4,
    "categories": [
      "Performance",
      "Storage",
      "Recovery"
    ],
    "root_cause": "During shutdown, Redis performs a synchronous RDB save which blocks client requests, causing potential service unavailability for large datasets",
    "issue_number": 9566.0,
    "title": "[BUG] Instance with RDB enabled will block and timeout any client requests when shutting down"
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference during RediSearch index creation, likely triggered by complex index schema or large dataset operations",
    "issue_number": 10676.0,
    "title": "[CRASH] error while creating redisearch indexes"
  },
  {
    "bug_location": "Redis SSL/TLS Configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Network",
      "Security"
    ],
    "root_cause": "Potential TLS configuration mismatch or Redis package not compiled with TLS support, causing SSL handshake failure during client connection",
    "issue_number": 11569.0,
    "title": "[BUG] Redis server starts up with \"Error accepting a client connection: error:1408F10B:SSL routines:ssl3_get_record:wrong version number (conn: fd=9)\""
  },
  {
    "bug_location": "dict.c - dictGenericDelete method",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential use-after-free scenario where a memory pointer is freed and then potentially returned or accessed, which could lead to undefined behavior if not carefully managed",
    "issue_number": 7984.0,
    "title": "[BUG] Possible use-after-free bug on the method dictGenericDelete??"
  },
  {
    "bug_location": "Redis Module Key Loading/Access",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Cluster",
      "Performance"
    ],
    "root_cause": "Potential race condition or synchronization issue when accessing keys in high-concurrency Redis cluster environment, specifically during parallel client operations with module key interactions",
    "issue_number": 12312.0,
    "title": "[BUG] Loading keys within Redis Module returns incorrect values"
  },
  {
    "bug_location": "Redis Cluster Upgrade Mechanism",
    "severity": 3,
    "categories": [
      "Upgrade",
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Potential compatibility issue between Redis 6.2 and 7.2 cluster join mechanism, causing node handshake to fail and node being removed from cluster",
    "issue_number": 13401.0,
    "title": "[BUG] Can't add a v7.2 node into v6.2 cluster"
  },
  {
    "bug_location": "Redis Socket Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Storage"
    ],
    "root_cause": "Redis does not automatically create the directory path for Unix socket configuration when the specified path does not exist, causing a 'No such file or directory' error during server startup",
    "issue_number": 8081.0,
    "title": "[BUG] \"No such file or directory\" error, when redis unixsocket does not exist"
  },
  {
    "bug_location": "RediSearch module",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory allocation integer overflow in RediSearch module during high-load multi-get operations, causing unexpected memory allocation request and Redis crash",
    "issue_number": 12560.0,
    "title": "[CRASH] Redis OOM crash when memory is enough"
  },
  {
    "bug_location": "Redis Test Suite",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Test suite configuration issue related to network binding and output buffer limit testing, likely caused by specific network configuration in Debian 10 environment",
    "issue_number": 8871.0,
    "title": "[BUG] Fails to install on Debian 10"
  },
  {
    "bug_location": "redis-benchmark CLI tool",
    "severity": 3,
    "categories": [
      "Network",
      "CodeBug"
    ],
    "root_cause": "IPv6 address handling is not properly implemented in redis-benchmark's cluster mode, causing connection failures when only IPv6 addresses are present",
    "issue_number": 10251.0,
    "title": "[BUG] redis-benchmark --cluster doesn't support ipv6"
  },
  {
    "bug_location": "Redis Replication and Lua Scripting Engine",
    "severity": 5,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect synchronization of multi-element queue operations between master and slave instances during Lua script execution, causing queue state desynchronization",
    "issue_number": 614.0,
    "title": "Lua script multi-element LPUSH / BRPOPLPUSH replication bug"
  },
  {
    "bug_location": "RDB (rdb.c) during object serialization",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Performance"
    ],
    "root_cause": "Unexpected hash object encoding during RDB save process, causing server panic when object's encoding is neither OBJ_ENCODING_LISTPACK nor OBJ_ENCODING_HT",
    "issue_number": 13552.0,
    "title": "[CRASH] Redis seems to be crashing while creating RDB. "
  },
  {
    "bug_location": "Unknown",
    "severity": 2,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information to definitively analyze the bug. The issue description appears to be about a machine learning paper's code and Ray library compatibility, which does not seem related to Redis. The comment suggests the issue was filed in the wrong project.",
    "issue_number": 10537.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Server Core (server.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "ARM64-specific kernel memory management bug detection mechanism failing on older Linux kernel versions (pre-4.5) that do not support MADV_FREE memory advise operation",
    "issue_number": 8406.0,
    "title": "[CRASH] Using redis ver 6.0.10 on docker on jetson tx2 - with JetPack3.3 "
  },
  {
    "bug_location": "Redis Cluster Slot Management",
    "severity": 4,
    "categories": [
      "Replication",
      "Storage",
      "CodeBug"
    ],
    "root_cause": "Inconsistent key distribution and slot mapping in Redis Cluster, where keys exist in a node without corresponding slot ownership, causing MOVED errors and potential data integrity issues",
    "issue_number": 11011.0,
    "title": "[BUG][QUESTION]rediscluster  node  no slot but have keys \uff0c the keys can scan it ,But when reading, it will ask for move"
  },
  {
    "bug_location": "dict.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential dictionary rehashing assertion failure in Redis dictionary implementation, specifically related to dictionary size and rehash index validation",
    "issue_number": 10905.0,
    "title": "[BUG] The redis down by it's self ,redis verison 5.0.3( ASSERTION FAILED)"
  },
  {
    "bug_location": "Redis Client/Server Output Buffer Management",
    "severity": 3,
    "categories": [
      "Performance",
      "Network",
      "Transaction"
    ],
    "root_cause": "Large HSCAN command with high COUNT parameter causing output buffer overflow, potentially exacerbated by GCP Redis configuration limitations",
    "issue_number": 13392.0,
    "title": "[BUG] scheduled to be closed ASAP for overcoming of output buffer limits when using HSCAN command"
  },
  {
    "bug_location": "Redis Background Save (BGSAVE) Process",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Storage"
    ],
    "root_cause": "Potential memory corruption during RDB save process, likely exacerbated by memory management issues and possible data corruption in existing RDB file",
    "issue_number": 9635.0,
    "title": "[CRASH] redis 6.2.6 crashed in lzf_compress"
  },
  {
    "bug_location": "Redis Persistence/Data Storage",
    "severity": 4,
    "categories": [
      "Security",
      "Storage",
      "CodeBug"
    ],
    "root_cause": "Unauthorized remote access and potential system compromise leading to data loss via FLUSHALL command",
    "issue_number": 9060.0,
    "title": "[BUG] Redis version 6.2.4 stores data data loss"
  },
  {
    "bug_location": "Redis I/O Threading Configuration",
    "severity": 3,
    "categories": [
      "Performance",
      "Config"
    ],
    "root_cause": "Performance degradation occurs when configured I/O threads exceed available CPU cores, causing inefficient thread scheduling and resource contention",
    "issue_number": 13003.0,
    "title": "[BUG] Performance drops severely when io-threads number larger than online cpus."
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Unknown"
    ],
    "root_cause": "Insufficient information to definitively determine the root cause. The crash log indicates a segmentation fault (signal 11) with an unusual signal code (23), but no detailed stack trace or platform specifics were provided to diagnose the exact issue.",
    "issue_number": 9402.0,
    "title": "[BUG] Redis 6.2.5 crashed by signal: 11, si_code: 23"
  },
  {
    "bug_location": "Redis Sentinel Command Parsing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent subcommand implementation between sentinel.c source code and generated commands.c, causing 'sentinel slaves' command to be unrecognized in Redis 7.0 despite code suggesting it should be supported",
    "issue_number": 10722.0,
    "title": "[BUG] Redis 7.0 - Unknown subcommand `sentinel slaves`"
  },
  {
    "bug_location": "Test Suite Infrastructure",
    "severity": 2,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "Port collision during parallel test execution where multiple test workers attempt to bind to the same network port simultaneously",
    "issue_number": 80.0,
    "title": "test suite: offset port number for every worker to avoid EADDRINUSE"
  },
  {
    "bug_location": "Redis Cluster Replication/Failover Component",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Potential compatibility issue during version upgrade and cluster failover process, causing process deadlock or unresponsive state",
    "issue_number": 13306.0,
    "title": "[BUG] Redis hangs during upgrade from v7.0.10 to v7.2.4"
  },
  {
    "bug_location": "t_zset.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Assertion failure in zsetDel function, specifically at line 1473 where a return value check failed, potentially indicating a memory management or data structure corruption issue during sorted set deletion",
    "issue_number": 13247.0,
    "title": "[CRASH] Redis 7.0.12 crashed in zsetDel"
  },
  {
    "bug_location": "Redis Client Subsystem",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Accumulating memory in client output buffers due to slow subscriber clients not processing messages quickly enough",
    "issue_number": 11912.0,
    "title": "[BUG] Continous Overhead Memory Increase "
  },
  {
    "bug_location": "Redis Replication Synchronization Process",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential performance bottleneck during large dataset synchronization, possibly exacerbated by memory flushing mechanism during master-replica sync with a 13GB dataset",
    "issue_number": 13217.0,
    "title": "[CRASH] Redis Instance is down while master sync"
  },
  {
    "bug_location": "RediSearch/JSONPath Query Processing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Highlight functionality does not properly handle additional non-indexed fields in FT.SEARCH query when using JSONPath return fields",
    "issue_number": 13617.0,
    "title": "[BUG] RETURN:ing JSONPath breaks HIGHLIGHT"
  },
  {
    "bug_location": "Redis Replication and Key Expiration Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Redis slaves do not actively expire keys and cannot consistently handle expired keys during client interactions, leading to inconsistent behavior between master and slave nodes regarding key existence and retrieval",
    "issue_number": 187.0,
    "title": "Redis slaves, while not allowed to expire keys without master input, should reply to clients consistently with the key expire information."
  },
  {
    "bug_location": "Redis Lua Script Execution Engine",
    "severity": 2,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Potential performance inconsistency in read-only Lua script execution commands (EVALSHA_RO vs EVALSHA), likely related to command invocation or benchmark methodology",
    "issue_number": 13556.0,
    "title": "[BUG] evalSha_RO is slower than evalSha"
  },
  {
    "bug_location": "Redis build system / Compilation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incompatible pthread library version on older Linux distribution (SUSE 11 SP4) lacking pthread_setname_np function, which is used in Redis networking and background job threads",
    "issue_number": 9093.0,
    "title": "[BUG] Redis build failed on suse 11 sp4"
  },
  {
    "bug_location": "Redis Configuration Parser (createULongLongConfig/memtoll)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "The memtoll function uses strtoll which limits parsing to LLONG_MAX, causing integer overflow when attempting to set configuration values larger than 2^63 - 1",
    "issue_number": 9071.0,
    "title": "[BUG] The value exceeding LLONG_MAX in createULongLongConfig is invalid"
  },
  {
    "bug_location": "Redis Configuration Path Handling",
    "severity": 2,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Inconsistent handling of relative paths for --unixsocket and --pidfile when --dir is specified, causing path resolution errors",
    "issue_number": 11542.0,
    "title": "[BUG] unixsocket assumes paths are relative to --dir, but --pidfile does not."
  },
  {
    "bug_location": "Redis Pub/Sub Subsystem",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "RESP3 protocol implementation returns subscription confirmations as push messages instead of standard request/response replies, causing potential client synchronization issues",
    "issue_number": 11784.0,
    "title": "[BUG] SUSCRIBE in RESP3 gets no proper reply, only push"
  },
  {
    "bug_location": "Redis Client/Spring RedisTemplate",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Race condition between delete and get operations, likely caused by improper synchronization in concurrent access to Redis key. The code does not guarantee atomicity between delete and subsequent get operations, allowing potential key recreation or inconsistent state.",
    "issue_number": 7619.0,
    "title": "delete key then get key , key is existed [BUG]"
  },
  {
    "bug_location": "Redis Stream Iterator (t_stream.c)",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Memory leak due to missing call to streamIteratorStop() after streamIteratorStart() is used, which fails to properly release allocated resources for the stream iterator",
    "issue_number": 10752.0,
    "title": "[BUG] memory leak in streamGetEdgeID"
  },
  {
    "bug_location": "Redis Lua Script Execution Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Redis intentionally prevents loading pre-compiled Lua bytecode files (.ljbc, .out) to maintain script sandbox security and prevent potential permission bypass vulnerabilities",
    "issue_number": 13555.0,
    "title": "[BUG] eval/evalSha fails to execute lua byte code"
  },
  {
    "bug_location": "Redis Event Loop (ae module)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential race condition in event processing where a file descriptor might be reused and incorrectly trigger an event handler before proper validation",
    "issue_number": 333.0,
    "title": "firelist is unstable"
  },
  {
    "bug_location": "Redis Lua Scripting / TimeSeries Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "RESP2 vs RESP3 protocol inconsistency in type representation of numeric values, specifically doubles, when returned from TS.REVRANGE command in Lua scripting environment",
    "issue_number": 13406.0,
    "title": "[BUG] TS.REVRANGE return value is table type [LUA]"
  },
  {
    "bug_location": "db.c (database management component)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Replication"
    ],
    "root_cause": "Potential key duplication or dictionary insertion failure during RDB loading, likely caused by memory corruption or inconsistent state during cluster master-slave transition",
    "issue_number": 11270.0,
    "title": "[CRASH] <Redis 4.0.14 crashed by signal: 11>"
  },
  {
    "bug_location": "Redis Transaction/Watched Keys Handling in SWAPDB Command",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Current SWAPDB implementation does not properly handle watched keys across databases, potentially allowing unexpected transaction behavior by not setting CLIENT_DIRTY_CAS flag when keys are swapped between databases",
    "issue_number": 8236.0,
    "title": "Should the SWAPDB command set CLIENT_DIRTY_CAS?"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Connection management issue where pending_commands counter is not properly reset during instance reconnection, causing Sentinel to stop monitoring and reconfiguring the old master after failover",
    "issue_number": 3285.0,
    "title": "Master is not configured as Slave after failure and reboot"
  },
  {
    "bug_location": "Redis Sentinel Failover Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Recovery",
      "Transaction"
    ],
    "root_cause": "Potential race condition or inconsistent state tracking during sentinel cluster failover process where replica may incorrectly promote itself to master after node restart",
    "issue_number": 12574.0,
    "title": "[BUG]sentinel cluster failover issue"
  },
  {
    "bug_location": "Lua Subsystem",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory corruption or invalid memory access during Lua function call (luaD_call) likely related to Rosetta 2 translation layer on macOS",
    "issue_number": 9736.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "t_zset.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Storage"
    ],
    "root_cause": "Incompatibility in handling empty sorted sets between Redis 1.2.2 and 2.4.7, where empty sorted sets were not properly managed during RDB file loading",
    "issue_number": 348.0,
    "title": "Crash in t_zset.c using 2.4.7"
  },
  {
    "bug_location": "Redis Connection Handling",
    "severity": 3,
    "categories": [
      "Network",
      "Performance"
    ],
    "root_cause": "During RDB (Redis Database) snapshot creation, the main process uses 'close()' method which does not immediately terminate the network connection, causing delayed client disconnection and potential blocking scenarios",
    "issue_number": 11337.0,
    "title": "[BUG] when executing RDB, the server actively disconnects and the client cannot sense the disconnection"
  },
  {
    "bug_location": "Vector Search / RediSearch Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Potential ACL permission conflict during vector index creation and AOF loading, causing server crash when performing vector search operations",
    "issue_number": 12779.0,
    "title": "[CRASH] <vector search crash>"
  },
  {
    "bug_location": "Lua Script Evaluation Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Lua arrays with non-consecutive indices are truncated at the first nil value, causing unexpected behavior when returning tables from Lua scripts in Redis",
    "issue_number": 7820.0,
    "title": "[BUG] Lua script returning table doesn't return all members."
  },
  {
    "bug_location": "setproctitle.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Undefined behavior in environment manipulation where memory is potentially freed and then accessed, causing a segmentation fault when interacting with XALT's LD_PRELOAD mechanism",
    "issue_number": 8064.0,
    "title": "[BUG] Segfault with 6.0.9 when running under XALT"
  },
  {
    "bug_location": "RDB Background Saving Process",
    "severity": 3,
    "categories": [
      "Performance",
      "Recovery",
      "Replication"
    ],
    "root_cause": "Potential issue with background saving mechanism or fork process in Redis RDB persistence, causing intermittent background save failures or unexpected restart behavior",
    "issue_number": 12306.0,
    "title": "[CRASH] Background saving didn't start"
  },
  {
    "bug_location": "Redis Cluster",
    "severity": 4,
    "categories": [
      "Replication",
      "Recovery"
    ],
    "root_cause": "During cluster recovery and master failover, slot ownership and key synchronization became inconsistent, causing keys to be present on nodes that do not own the corresponding slots",
    "issue_number": 11589.0,
    "title": "[BUG] Redis 6.2.6 How to delete keys in a Slot not owned by a master "
  },
  {
    "bug_location": "Memory Management / Cluster Module",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during key update in cluster slot mapping",
    "issue_number": 13475.0,
    "title": "[CRASH] <short description>Redis 6.2.7 crashed by signal: 11"
  },
  {
    "bug_location": "Redis Benchmark Tool",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Redis benchmark tool fails when connecting to Redis servers without a configured 'save' parameter, causing unexpected errors in version 6.2",
    "issue_number": 8988.0,
    "title": "[BUG] Redis benchmark can't run when config `save` not set"
  },
  {
    "bug_location": "LOLWUT command implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Insufficient input validation for terminal column width, causing potential negative canvas width calculation in the lwDrawSchotter function",
    "issue_number": 5345.0,
    "title": "[CRASH] LOLWUT with terminal-columns < 2 yields negative canvas width and borks"
  },
  {
    "bug_location": "Redis INFO command response handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Unknown"
    ],
    "root_cause": "Potential race condition or error state causing unexpected integer reply instead of expected array reply during INFO command processing",
    "issue_number": 12248.0,
    "title": "[BUG] INFO command in some cases can return integer reply"
  },
  {
    "bug_location": "Redis Replication Component",
    "severity": 5,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Replication backlog was not properly reset after a full sync, allowing inconsistent data propagation between master and slave nodes during complex topology changes and reconnection scenarios",
    "issue_number": 2694.0,
    "title": "Replication inconsistent issue"
  },
  {
    "bug_location": "Redis Version Reporting",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Intentional pre-release version numbering scheme where release candidates use a non-standard version number (6.9.241 instead of 7.0.0)",
    "issue_number": 10366.0,
    "title": "[BUG] 7.0-rc2.tar.gz has incorrect version reported"
  },
  {
    "bug_location": "RediSearch Module (KNN Search)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory access or parameter handling issue in RediSearch module's KNN search implementation when combining numeric filtering with vector search",
    "issue_number": 12524.0,
    "title": "[CRASH] Trying to filter a KNN search query"
  },
  {
    "bug_location": "Memory Allocation (server.c)",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "Upgrade"
    ],
    "root_cause": "Potential memory mapping fragmentation issue with jemalloc 5.3.0 on Debian 12, causing excessive memory map allocations during key eviction/expiration processes",
    "issue_number": 12821.0,
    "title": "[CRASH] Redis 7.0.11 OOM with enough system memory"
  },
  {
    "bug_location": "Redis AOF (Append Only File) module",
    "severity": 3,
    "categories": [
      "Storage",
      "Network",
      "Recovery"
    ],
    "root_cause": "Potential file system access issue with NFS-mounted shared objects causing memory access violation during crash reporting",
    "issue_number": 11187.0,
    "title": "[CRASH] Redis server 6.2.6 crashed by signal: 7, si_code: 2"
  },
  {
    "bug_location": "Redis Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Config"
    ],
    "root_cause": "Slave/Replica node being set to read-only mode, which prevents write operations during or after server restart",
    "issue_number": 9082.0,
    "title": "[BUG]  READONLY You can't write against a read only slave\", cloud you please help on this error ,is it possible to occur when we restart redis-server or restarting App server or restarting database server kindly tell me the steps to reproduce this in my local system"
  },
  {
    "bug_location": "Unknown",
    "severity": 0,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to analyze the bug",
    "issue_number": 12911.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Cluster Component",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or segmentation fault during cluster node joining process in Redis 7.2.0, specifically affecting sharded cluster configurations",
    "issue_number": 12507.0,
    "title": "[CRASH] Redis cluster 7.2.0 crashed by signal: 11, si_code: 1 when joining existing cluster (ubuntu 20.04)"
  },
  {
    "bug_location": "Redis Module Loading System",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Security"
    ],
    "root_cause": "Incomplete module unregistration when module loading fails during RedisModule_OnLoad, causing event callbacks to be triggered with an invalid module context",
    "issue_number": 12808.0,
    "title": "[BUG] Module's events are called though module load had failed"
  },
  {
    "bug_location": "Redis Cluster Transaction Handling",
    "severity": 3,
    "categories": [
      "Transaction",
      "Replication",
      "CodeBug"
    ],
    "root_cause": "MIGRATE operation does not properly mark WATCH keys as dirty when a key is moved between cluster nodes, potentially allowing inconsistent transaction execution",
    "issue_number": 151.0,
    "title": "MIGRATE should set WATCHED keys as dirty"
  },
  {
    "bug_location": "Redis Client API / Type Definitions",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect argument order in function signature for ZREVRANGEBYSCORE method, where min and max parameters are reversed compared to native Redis CLI command order",
    "issue_number": 9106.0,
    "title": "[BUG] the function - ZREVRANGEBYSCORE the argument name is reversed (max <->min)"
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Crash"
    ],
    "root_cause": "Potential memory corruption or segmentation fault in Redis 4.0.10, likely due to an unhandled memory access issue on aarch64 architecture",
    "issue_number": 9873.0,
    "title": "[CRASH] Redis 4.0.10 crashed by signal 11"
  },
  {
    "bug_location": "Redis Cluster Election Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "The election mechanism allows a slave node to win multiple elections within a short time period (2*timeout) without proper epoch or vote validation, which violates the expected cluster failover protocol",
    "issue_number": 8752.0,
    "title": "[BUG] slave vote for  twice in 2*timeout  will won election"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Memory",
      "Replication"
    ],
    "root_cause": "Segmentation fault during sentinel instance info refresh, likely caused by memory corruption or invalid memory access in sentinelRefreshInstanceInfo function",
    "issue_number": 12649.0,
    "title": "[CRASH] Redis 4.0.11 Sentinel crashed by signal: 11"
  },
  {
    "bug_location": "Redis Memory Management / Linux Swap Configuration",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "Config",
      "LoadBalance"
    ],
    "root_cause": "Potential memory management conflict between Redis, Linux swap configuration, and Google Cloud E2 small instance shared core architecture, causing excessive CPU bursting and swap usage",
    "issue_number": 10936.0,
    "title": "[CRASH] <vm.swapiness = 1 / 10 / 30 RHEL Default crushing the server with Redis>"
  },
  {
    "bug_location": "Build/Installation System",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Inconclusive - No clear error message or specific installation failure detected. The installation logs appear normal, and the maintainer suggests this might be a non-issue.",
    "issue_number": 7606.0,
    "title": "[BUG] Unable to install after make test success"
  },
  {
    "bug_location": "deps/hiredis/dict.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference after memory allocation, though the actual risk is unclear due to conflicting comments about memory allocation behavior",
    "issue_number": 9333.0,
    "title": "[BUG]A potential bug of NULL pointer dereference "
  },
  {
    "bug_location": "Redis Replication/Cluster Failover Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential issue with partial synchronization during manual cluster failover, causing unnecessary full resynchronization even when conditions for partial sync are met",
    "issue_number": 12937.0,
    "title": "[BUG] Redis partial sync not working when doing manual failover"
  },
  {
    "bug_location": "Redis Core/Dict Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference in dictSdsKeyCompare function during zunionstore operation, likely triggered by ReJSON module interaction",
    "issue_number": 10794.0,
    "title": "[BUG] qemu: uncaught target signal 11 (Segmentation fault)"
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "LoadBalance"
    ],
    "root_cause": "Temporary node/network failure causing cluster failover and node reconfiguration",
    "issue_number": 8614.0,
    "title": "[CRASH] Can't replicate data from master to slave"
  },
  {
    "bug_location": "Key Expiration/Renaming Mechanism",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Redis rename operation does not correctly transfer or preserve the Time-To-Live (TTL) metadata when renaming a key with an existing expiration time",
    "issue_number": 128.0,
    "title": "TTL not preserved when key is renamed"
  },
  {
    "bug_location": "Redis Background Jobs Initialization",
    "severity": 4,
    "categories": [
      "Config",
      "Security"
    ],
    "root_cause": "Container lacks necessary permissions to initialize background jobs, likely due to restricted security context preventing required system operations",
    "issue_number": 13477.0,
    "title": "[CRASH] <short description>"
  },
  {
    "bug_location": "Redis Blocking Command Infrastructure (t_zset.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Incorrect key identification in BZMPOP blocking mechanism, causing unintended blocking on non-key arguments like timeout, count, min/max parameters instead of actual zset keys",
    "issue_number": 10762.0,
    "title": "[BUG] BZMPOP blocks on non key arguments"
  },
  {
    "bug_location": "Redis Server Process",
    "severity": 3,
    "categories": [
      "Memory",
      "Recovery",
      "Unknown"
    ],
    "root_cause": "Potential memory management issue triggered by system cache dropping, causing Redis process to unexpectedly terminate",
    "issue_number": 13085.0,
    "title": "The Linux command sysctl -wvm.drop_caches=3 was executed, and the process started on port 6379 exited[BUG]"
  },
  {
    "bug_location": "redis-benchmark CLI tool",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Misunderstanding of SCRIPT LOAD command behavior - it only loads a script into cache without executing it, requiring subsequent EVALSHA to actually run the script",
    "issue_number": 12565.0,
    "title": "[BUG] redis-benchmark lua  script not working"
  },
  {
    "bug_location": "Redis Stack Server Container/Initialization",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Performance"
    ],
    "root_cause": "Potential network initialization or module loading issue preventing complete Redis server startup on specific platform configurations, resulting in connection reset before full server initialization",
    "issue_number": 13039.0,
    "title": "redis/redis-stack-server can not initilizes in GCP platform[BUG]"
  },
  {
    "bug_location": "Redis Server Startup Process",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Potential compatibility issue with Mac M1 architecture or embedded Redis server initialization on specific system configurations",
    "issue_number": 10338.0,
    "title": "[CRASH] Can't start redis server"
  },
  {
    "bug_location": "Memory Defragmentation Component",
    "severity": 2,
    "categories": [
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential fragmentation threshold inconsistency in active memory defragmentation test, possibly related to compiler version (gcc 9.1) or system configuration",
    "issue_number": 10053.0,
    "title": "[BUG] centos 7 2009, gcc 9.1 , Active defrag test failed"
  },
  {
    "bug_location": "t_zset.c in Redis core",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Buffer overrun vulnerability caused by off-by-one error when copying string and null-terminating, potentially writing beyond buffer bounds when input length equals buffer size",
    "issue_number": 10462.0,
    "title": "[BUG] Buffer overrun in t_zset.c"
  },
  {
    "bug_location": "Redis Blocking Operations (BRPOPLPUSH)",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Transaction",
      "Replication"
    ],
    "root_cause": "Command vector rewriting in rpoplpushHandlePush interferes with multiple item LPUSH operations, causing incomplete push and blocking operation semantics to break",
    "issue_number": 87.0,
    "title": "BRPOPLPUSH and a single LPUSH with several items doesn't work well together\t"
  },
  {
    "bug_location": "Lua Client State",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Lua client flags were incorrectly set to CLIENT_CLOSE_AFTER_REPLY, causing read operations in EVAL to return incorrect results by returning the last argument instead of actual key values",
    "issue_number": 8484.0,
    "title": "[BUG] EVAL returning undocumented results"
  },
  {
    "bug_location": "Redis Hash Command Implementation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "HGETF command incorrectly returning integer type instead of converting numeric values to string representation",
    "issue_number": 13262.0,
    "title": "[BUG] HGETF command is not replying with string"
  },
  {
    "bug_location": "Redis Cluster Pubsub Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Performance"
    ],
    "root_cause": "Redis Pubsub does not guarantee message delivery in cluster mode, especially when messages are published to master and subscribers are on follower nodes. The message propagation mechanism between nodes appears to have inconsistent synchronization, causing potential message loss.",
    "issue_number": 10862.0,
    "title": "[BUG] Pubsub messages are silently lost in cluster mode"
  },
  {
    "bug_location": "Redis Cluster Pub/Sub Messaging System",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Redis Cluster was sending PUBLISH messages both via Cluster Bus and replication link, causing message duplication on slave nodes",
    "issue_number": 1137.0,
    "title": "Redis Cluster Pub/Sub sends messages multiple times to slave nodes."
  },
  {
    "bug_location": "Redis RDB/AOF Persistence Layer",
    "severity": 4,
    "categories": [
      "Storage",
      "Config",
      "Human"
    ],
    "root_cause": "Incorrect AOF configuration transition causing unintended data loss during Redis restart when switching from RDB-only to RDB+AOF persistence mode",
    "issue_number": 12762.0,
    "title": "[BUG] redis did not load dump.rdb after restart - all data lost"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 2,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "Potential false positive security vulnerability in Lua 5.1 that could not be reliably reproduced across different versions",
    "issue_number": 11381.0,
    "title": "[BUG] lua-5.1.1 has some unaddressed security vulnerabilties in redis"
  },
  {
    "bug_location": "Memory Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory allocation discrepancy between Redis internal memory tracking and system memory reporting mechanisms",
    "issue_number": 10067.0,
    "title": "[BUG] memory leak"
  },
  {
    "bug_location": "Redis Persistence/Storage",
    "severity": 3,
    "categories": [
      "Storage",
      "Config",
      "Performance"
    ],
    "root_cause": "Potential permission or configuration issue preventing Redis from writing RDB snapshots to the specified directory, causing data loss and requiring manual intervention to reset storage directory",
    "issue_number": 7592.0,
    "title": "[CRASH] MISCONF error"
  },
  {
    "bug_location": "Redis List Operations (t_list.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect handling of LPOP command with count 0, which returns nil instead of an empty list, and bypasses type checking for the key",
    "issue_number": 9680.0,
    "title": "[BUG] lpop/pop with count 0 returning null"
  },
  {
    "bug_location": "module.c (moduleFireServerEvent function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access in module event handling, likely triggered on a 32-bit ARM architecture",
    "issue_number": 12376.0,
    "title": " [CRASH] Redis 6.2.6 SIGSEGV in moduleFireServerEvent at module.c:8266"
  },
  {
    "bug_location": "Redis Expiration Handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent integer overflow handling between SETEX and EXPIRE commands, where EXPIRE fails to properly validate large expiration times that cause numeric overflow",
    "issue_number": 9825.0,
    "title": "[BUG] EXPIRE and SETEX have inconsistent overflow handling"
  },
  {
    "bug_location": "Redis Documentation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential misunderstanding or inaccurate representation of time complexity for ZPOPMIN command compared to separate ZRANGE and ZREMRANGEBYRANK operations",
    "issue_number": 13389.0,
    "title": "[BUG] Possibly only documentation: why is ZPOPMIN time complexity higher than ZRANGE+ZREMRANGEBYRANK?"
  },
  {
    "bug_location": "Lua Script Execution / Client Interaction",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Redisson client's default encoding mechanism was converting numeric values to encoded strings, preventing direct numeric conversion in Lua scripts, which caused arithmetic operation failures",
    "issue_number": 12275.0,
    "title": "[BUG] Redis fails to perform basic arithmetic operation in Lua script"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 4,
    "categories": [
      "Config",
      "Security",
      "Storage"
    ],
    "root_cause": "Potential configuration manipulation vulnerability where Redis unexpectedly resets the data directory to a system directory, possibly indicating unauthorized system access or configuration tampering",
    "issue_number": 9514.0,
    "title": "[BUG] redis keeps resetting \"dir\" parameter to \"/etc\""
  },
  {
    "bug_location": "Replication and Server Components",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential data race on shared global variable server.master_repl_offset between main thread and IO threads without proper synchronization mechanism",
    "issue_number": 7779.0,
    "title": "[BUG] Potential Data Race on server.master_repl_offset"
  },
  {
    "bug_location": "Redis Cluster Configuration Parsing (/redis/src/cluster.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Security",
      "Memory"
    ],
    "root_cause": "Lack of input validation for slot index when parsing cluster configuration, potentially allowing out-of-bounds array access and memory corruption via maliciously crafted configuration file",
    "issue_number": 4278.0,
    "title": "Potential Buffer Overflow from user-controllable Array Index value"
  },
  {
    "bug_location": "Memory Configuration Check (linuxMemoryWarnings)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Recovery"
    ],
    "root_cause": "Improper error handling in checkOvercommit() function when /proc/sys/vm/overcommit_memory is inaccessible, causing a null pointer dereference during memory warning logging",
    "issue_number": 10846.0,
    "title": "[CRASH] redis 7.0.1 crashes on start after upgrading from 7.0.0"
  },
  {
    "bug_location": "Redis Replication Protocol (RDB Sync)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Replication",
      "Protocol"
    ],
    "root_cause": "Missing CR-LF termination in bulk string during FULLRESYNC, which technically violates the RESP protocol specification for bulk string encoding",
    "issue_number": 10060.0,
    "title": "[BUG] Redis not following RESP protocol while sending FULLRESYNC message to SLAVE"
  },
  {
    "bug_location": "RDB Loading Mechanism",
    "severity": 3,
    "categories": [
      "Performance",
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Main thread blocking during RDB loading when processing large keys, with event processing happening only every 1000 keys instead of considering data volume",
    "issue_number": 562.0,
    "title": "Main thread stuck when loading very large keys"
  },
  {
    "bug_location": "Redis Service Configuration / Systemd Integration",
    "severity": 3,
    "categories": [
      "Config",
      "Performance",
      "Storage"
    ],
    "root_cause": "Potential write permission restriction by ReadOnlyDirectories=/ preventing Redis from performing essential write operations like RDB saving, config rewriting, and creating PID files",
    "issue_number": 13621.0,
    "title": "[BUG] Crash of Redis Server - have to  #ReadOnlyDirectories=/"
  },
  {
    "bug_location": "Redis String Command Implementation (SUBSTR/GETRANGE)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent handling of negative index ranges in substring extraction, where start and end index conversion logic produces unexpected results when end index is less than start index",
    "issue_number": 11738.0,
    "title": "[BUG] SUBSTR returns wrong result with start 0 and end less than start"
  },
  {
    "bug_location": "networking.c, hrandfield command implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Assertion failure in networking code when processing an extremely large negative count parameter in hrandfield command, indicating potential integer overflow or boundary condition handling issue",
    "issue_number": 11670.0,
    "title": "[CRASH] Crash with `hrandfield`"
  },
  {
    "bug_location": "Memory Allocation (zmalloc.c)",
    "severity": 3,
    "categories": [
      "Memory",
      "Config",
      "Performance"
    ],
    "root_cause": "System memory overcommit configuration (overcommit_memory=2) causing memory allocation failures despite available system memory, potentially related to memory fragmentation and jemalloc allocation issues",
    "issue_number": 11610.0,
    "title": "[CRASH] 7.0.5 installed from redislabs ppa crashed"
  },
  {
    "bug_location": "redis-cli client interface",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Redis CLI does not automatically exit pubsub mode when all channel subscriptions are removed, despite receiving zero subscription count in unsubscribe response",
    "issue_number": 12592.0,
    "title": "[BUG] redis-cli doesn't auto exit from subscribed mode on reaching zero subscription"
  },
  {
    "bug_location": "Keyspace Event Notification Module",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Security"
    ],
    "root_cause": "Potential memory corruption or null pointer dereference in moduleNotifyKeyspaceEvent function during keyspace event processing",
    "issue_number": 13208.0,
    "title": "[CRASH] Redis 6.2.6"
  },
  {
    "bug_location": "Redis Persistence Layer",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config",
      "Storage"
    ],
    "root_cause": "Insufficient validation of RDB and AOF file name configurations, allowing file paths that could cause cross-device renaming failures",
    "issue_number": 1094.0,
    "title": "Exit with error if RDB / AOF file names are actually paths"
  },
  {
    "bug_location": "blocked.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Assertion failure in propagation mechanism during key expiration on a writable replica with AOF enabled, specifically related to the 'also_propagate' array not being empty as expected",
    "issue_number": 11778.0,
    "title": "[CRASH] Docker redis crash"
  },
  {
    "bug_location": "Redis Authentication/ACL System",
    "severity": 3,
    "categories": [
      "Security",
      "CodeBug",
      "Config"
    ],
    "root_cause": "Authentication mechanism allows 'auth default foo' to succeed without a configured password, potentially creating a false sense of security when no actual authentication is enforced",
    "issue_number": 13590.0,
    "title": "[BUG] \"auth default foo\" returns OK even if there is no password set for \"default\""
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Assertion failure related to client connection duration during cluster rebalancing, likely caused by blocking operations or stream processing under high concurrency",
    "issue_number": 13224.0,
    "title": "[CRASH] cluster relance failed:  ASSERTION FAILED"
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Potential misconfiguration in Redis cluster topology where multiple slave nodes are incorrectly configured without a proper master-slave pairing",
    "issue_number": 8733.0,
    "title": "Don't know why[BUG]"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Performance",
      "Network",
      "Replication"
    ],
    "root_cause": "Potential busy loop in event processing related to socket read operations, causing sentinel to consume excessive CPU during network interactions or after pod restarts",
    "issue_number": 9956.0,
    "title": "[BUG] redis sentinel 100% cpu usage "
  },
  {
    "bug_location": "Redis RDB saving mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Incorrect error handling in `reclaimFilePageCache` where errno is not properly set or captured, leading to misleading error logging",
    "issue_number": 13245.0,
    "title": "[BUG] Wrong error logged when `reclaimFilePageCache` fails"
  },
  {
    "bug_location": "RedisJSON module (rejson.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Null pointer dereference during JSON index creation, likely caused by an unexpected edge case in JSON path handling or value extraction",
    "issue_number": 13177.0,
    "title": "[BUG] After creating index Redis Stack 7.2.3 crashed"
  },
  {
    "bug_location": "AWS ElastiCache Redis Monitor Output",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Monitoring"
    ],
    "root_cause": "AWS ElastiCache has a visual bug in monitor output where when a key exists, the command is internally rewritten for higher precision replication, but the monitor incorrectly displays the command name as 'pexpireat' instead of the original 'expireat'",
    "issue_number": 10585.0,
    "title": "[BUG] Calling expireat on existing key shows pexpireat in monitor output"
  },
  {
    "bug_location": "Redis ACL (Access Control List) Permission System",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "The '+@all' permission does not automatically grant key access permissions, which requires an additional '~*' wildcard to allow access to all keys",
    "issue_number": 9397.0,
    "title": "[BUG] ACL permission \"+@all\" does not grant all permissions"
  },
  {
    "bug_location": "WordPress Redis Object Cache Plugin",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network",
      "Config"
    ],
    "root_cause": "Unhandled connection exception in Redis client connection method when database connection fails",
    "issue_number": 12111.0,
    "title": "[CRASH] Uncaught RedisException"
  },
  {
    "bug_location": "sds.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference in memory reallocation when zrealloc fails to allocate memory, which could lead to a segmentation fault or unexpected program behavior",
    "issue_number": 9334.0,
    "title": "[BUG]A potential bug of NULL pointer dereference "
  },
  {
    "bug_location": "Redis Cluster Replication Component",
    "severity": 4,
    "categories": [
      "Replication",
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Potential memory corruption or segmentation fault during cluster synchronization process, specifically in readSyncBulkPayload function",
    "issue_number": 7659.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "t_hash.c (Hash conversion function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Upgrade"
    ],
    "root_cause": "Integer encoding comparison issue during hash conversion between Redis versions, causing potential data corruption when converting ziplists with small integer fields",
    "issue_number": 547.0,
    "title": "Crash in Redis 2.6 RC4 converting an hash value."
  },
  {
    "bug_location": "Redis Core/Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory access violation or segmentation fault during module initialization, likely related to RediSearch and RedisJSON module loading sequence",
    "issue_number": 13522.0,
    "title": "[CRASH] Redis 7.0.3 crashed by signal: 11, si_code: 1"
  },
  {
    "bug_location": "Dictionary/Hash Table Implementation (dictFind function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid memory access in dictionary lookup function, likely caused by a null pointer dereference or out-of-bounds memory access during key expiration or lookup process",
    "issue_number": 13022.0,
    "title": "[CRASH] running the instruction at: 0x400004912c"
  },
  {
    "bug_location": "Redis Module Command Handling",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Incomplete memory deallocation during module command unloading, where argument arrays and potentially nested sub-arguments are not fully freed, causing memory leaks",
    "issue_number": 11145.0,
    "title": "[BUG] Mem-leak in moduleFreeCommand"
  },
  {
    "bug_location": "Redis Lua scripting engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent error handling and formatting in Lua script execution, specifically around error responses from redis.call() and redis.pcall() under different error conditions like OOM, read-only script violations, and invalid command executions",
    "issue_number": 10165.0,
    "title": "[BUG] Inconsistency in errors returned from EVAL scripts."
  },
  {
    "bug_location": "Lua scripting engine",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during Lua function call (luaD_call) on M1 MacBook Pro with Rosetta 2 translation layer",
    "issue_number": 8908.0,
    "title": "[BUG] Segmentation Fault  redis-server"
  },
  {
    "bug_location": "Redis Lua msgpack implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent floating-point and integer representation across different platforms due to platform-specific double precision handling in Lua 5.1, causing msgpack encoding to produce different results when packing large integers",
    "issue_number": 11862.0,
    "title": "[BUG] Inconsistent behaviour of Lua msgpack between platforms"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to diagnose the specific Redis issue",
    "issue_number": 10380.0,
    "title": "[BUG] Redis Error Please help."
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or architecture compatibility issue when running RediSearch module on Apple M1 Pro architecture, specifically in memory management functions like SearchResult_Clear and SEDestroy",
    "issue_number": 11661.0,
    "title": "[CRASH] Redissearch crashes on Macbook M1 Pro"
  },
  {
    "bug_location": "Redis Module API (RedisModule_UnblockClient)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent behavior and documentation mismatch in client unblocking mechanism, specifically with RedisModule_BlockClientOnKeys where private data is not accessible in timeout callback",
    "issue_number": 7879.0,
    "title": "[BUG] RedisModule_UnblockClient behaviour does not match the documentation"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "N/A - Analysis failed",
    "issue_number": 999.0,
    "title": "multi exec change rdb"
  },
  {
    "bug_location": "Redis Cluster Command (cluster shards)",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incorrect type conversion when returning slot values, using strings instead of integers as specified in documentation",
    "issue_number": 10680.0,
    "title": "[BUG] cluster shards returns slots as strings, not integers"
  },
  {
    "bug_location": "RediSearch module (redisearch.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Potential memory management or architecture-specific issue in DocTable_Put function when processing JSON indexing on Apple M1 architecture",
    "issue_number": 10442.0,
    "title": "[BUG] RediSearch crash on Apple M1 docker"
  },
  {
    "bug_location": "Spring Data Redis Client Integration",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Potential compatibility issue between Spring Boot Redis starter, Lettuce client, and Redis cluster configuration preventing read operations",
    "issue_number": 12106.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Hostname resolution failure during master node failover prevents sentinel from selecting a new master when the original master's hostname becomes invalid",
    "issue_number": 11241.0,
    "title": "[BUG] Sentinel failover not working as expected"
  },
  {
    "bug_location": "SDS (Simple Dynamic String) memory management in Redis core",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory allocation or buffer overflow issue in sdsMakeRoomFor() function during string manipulation, specifically triggered during a Lua script execution involving an HSET command",
    "issue_number": 13302.0,
    "title": "[CRASH] New Redis 6.2.6 Crash "
  },
  {
    "bug_location": "Redis Persistence/BGSAVE Module",
    "severity": 3,
    "categories": [
      "Storage",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Redis does not provide explicit error handling or notification when background save fails due to insufficient disk space, causing scripts to hang or not detect save failures",
    "issue_number": 7346.0,
    "title": "[BUG] redis-cli --csv BGSAVE/LASTSAVE do not return ERROR Message ( out of disk )"
  },
  {
    "bug_location": "Redis Key Expiration/Memory Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "Config"
    ],
    "root_cause": "Near memory limit with volatile-lru eviction policy causing premature key deletion before TTL expiration",
    "issue_number": 7856.0,
    "title": "[BUG] redis is expiring key ahead of time"
  },
  {
    "bug_location": "Redis Test Suite / OOM Score Adjustment Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Permission restrictions in Linux kernel preventing non-root users from setting low OOM score adjustment values (below 100)",
    "issue_number": 12792.0,
    "title": "[BUG] Debain 12:  make test [exception]: Executing test client: permission denied."
  },
  {
    "bug_location": "Redis Stream Command (XREAD)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Potential issue with message retrieval when multiple messages are added to a stream at the same millisecond timestamp, causing inconsistent message reading behavior with XREAD command",
    "issue_number": 11828.0,
    "title": "[BUG] XREAD COMMAND - ONLY READS EPOCH TIME - 0"
  },
  {
    "bug_location": "PID File Creation (createPidFile function)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Recovery"
    ],
    "root_cause": "Segmentation fault during PID file creation, likely due to memory access or allocation issue in the createPidFile function",
    "issue_number": 8268.0,
    "title": "[BUG] 6.0.9 Crashed in createPidFile"
  },
  {
    "bug_location": "Redis Server Core (server.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Kernel memory management compatibility issue on arm64 architecture, specifically related to madvise() system call behavior in Linux kernel",
    "issue_number": 8351.0,
    "title": "[BUG] redis pod does not work on arm64 kube worker node"
  },
  {
    "bug_location": "Redis Cluster Client (Python)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "The Redis Cluster client requires a key parameter for XGROUP CREATE command in version 7.0.0, which was not required in previous versions. The method fails to dispatch the command due to missing key specification.",
    "issue_number": 10678.0,
    "title": "[BUG] The method xgroup_create of the redis cluster client fails when running on redis version 7.0.0."
  },
  {
    "bug_location": "Authentication Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Lack of proper validation when AUTH command is issued without a configured password requirement",
    "issue_number": 132.0,
    "title": "AUTH should error when requirepass is not set."
  },
  {
    "bug_location": "Redis Cluster Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Replica nodes are not aware of slot migration during cluster resharding, causing them to return nil instead of ASK redirection for migrated keys",
    "issue_number": 11312.0,
    "title": "[BUG] ASK redirection from replica nodes"
  },
  {
    "bug_location": "Redis Command Parsing/Validation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Command argument validation logic was changed in a previous update (PR #11445), making BITFIELD arguments optional without proper error handling, which contradicts the command documentation",
    "issue_number": 11737.0,
    "title": "[BUG] bitfield returns empty array when required args are missing"
  },
  {
    "bug_location": "src/replication.c, replicationCron() function",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Use-after-free vulnerability where a client pointer is freed and then subsequently dereferenced, potentially causing memory corruption or crashes",
    "issue_number": 8797.0,
    "title": "[BUG] A use after free bug in replicationCron"
  },
  {
    "bug_location": "Redis Persistence Layer (RDB/AOF)",
    "severity": 4,
    "categories": [
      "Storage",
      "CodeBug",
      "Recovery"
    ],
    "root_cause": "Redis does not properly handle or check the return code of fsync system call, which can potentially result in silent data corruption during persistence operations without triggering appropriate error handling mechanisms",
    "issue_number": 8111.0,
    "title": "[BUG] Redis doesn't check a return code of fsync thus potentially corrupting keys/values and silently returning them."
  },
  {
    "bug_location": "Redis Sentinel/Replication",
    "severity": 4,
    "categories": [
      "Replication",
      "Upgrade",
      "Transaction"
    ],
    "root_cause": "During a multi-node restart sequence, Redis Sentinel's failover mechanism became unstable, causing race conditions that resulted in multiple master instances being created instead of maintaining a single master state",
    "issue_number": 12162.0,
    "title": "[BUG] Sentinel failover not as expected - ends up with multiple masters"
  },
  {
    "bug_location": "Redis Cluster Node Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential issue with node identification and ghost node handling in Redis cluster, possibly related to DNS reverse lookup and node state tracking",
    "issue_number": 9268.0,
    "title": "[BUG] how to forget ghost nodes"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "CONFIG REWRITE does not properly handle configuration files with 'include' directive and fails to preserve certain configuration settings like 'save' command when rewriting the configuration",
    "issue_number": 8572.0,
    "title": "[BUG] CONFIG REWRITE misbehaves when `include` is used"
  },
  {
    "bug_location": "Redis Cluster Replication/Upgrade Process",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Replication",
      "Performance"
    ],
    "root_cause": "Potential compatibility issue during direct upgrade from Redis 6.0 to 7.2, causing replication synchronization failure and resource exhaustion",
    "issue_number": 13131.0,
    "title": "[BUG] redis-server blocked after upgrade redis cluster from 6.0 to 7.2"
  },
  {
    "bug_location": "Redis Server Core",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Recovery",
      "Performance"
    ],
    "root_cause": "Potential compatibility issue with Apple M1 architecture or Redis 2.8.19 version instability on macOS",
    "issue_number": 8677.0,
    "title": "[CRASH]Can't start redis server. Crashed by signal: 10"
  },
  {
    "bug_location": "Redis Protocol/Client Tracking Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction",
      "Replication"
    ],
    "root_cause": "Invalidation messages are being incorrectly embedded within multi-bulk replies during key expiration or flush operations, violating the expected protocol behavior of push messages always being top-level replies",
    "issue_number": 8935.0,
    "title": "Expiration based invalidation PUSH messages sometimes embedded within other replies. "
  },
  {
    "bug_location": "Redis Command Documentation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incorrect metadata naming in command documentation for CLIENT KILL, with duplicate 'ip:port' name for ADDR and LADDR tokens, and non-standard naming for SKIPME token",
    "issue_number": 11721.0,
    "title": "[BUG] CLIENT KILL doc descriptor wrong"
  },
  {
    "bug_location": "AOF (Append Only File) Loading Mechanism",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery",
      "CodeBug"
    ],
    "root_cause": "Potential corruption or invalid data in AOF file causing memory access violation during startup loading process in Redis 3.2.10",
    "issue_number": 8251.0,
    "title": "[BUG] redis 3.2 crash on startup loading from AOF"
  },
  {
    "bug_location": "Redis Sentinel Network Configuration",
    "severity": 3,
    "categories": [
      "Network",
      "Replication",
      "Config"
    ],
    "root_cause": "Potential IP address resolution conflict between IPv4 and IPv6 during sentinel failover process, causing message subscription and master switching to fail",
    "issue_number": 12684.0,
    "title": "[BUG] When IPv4 and IPv6 coexist, active/standby switching in sentinel mode fails."
  },
  {
    "bug_location": "Unknown",
    "severity": 1,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to diagnose the specific issue. The comments suggest that copy-paste functionality is typically terminal-dependent, and no concrete reproduction steps or specific platform details were shared.",
    "issue_number": 7897.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Lua Script Runtime / TIME Command",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Changes in TIME command implementation in Redis 7.2.0 that breaks consistent time retrieval behavior within Lua scripts compared to previous versions",
    "issue_number": 12556.0,
    "title": "[BUG] redis.call(\"TIME\") behavior in v7.2.0 is incompatible with v7.0.12 when called from Lua script"
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Security"
    ],
    "root_cause": "Lua script commands bypass the min-slaves-to-write configuration check in processCommand(), allowing write operations when insufficient replicas are available",
    "issue_number": 5301.0,
    "title": "Lua set question when using min-slaves-to-write configure."
  },
  {
    "bug_location": "Redis Cluster Management",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Race condition in cluster node synchronization where gossip protocol has not fully propagated the new master node's ID before attempting to add a slave node",
    "issue_number": 11877.0,
    "title": "[BUG]  Join some new nodes to the cluster error"
  },
  {
    "bug_location": "Redis Configuration Parsing (src/config.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inconsistent integer parsing methods (atoi() vs strtoll()) for 'save' configuration option between redis.conf and CONFIG SET, causing different range handling of input values",
    "issue_number": 10119.0,
    "title": "[BUG] Config option \"save\" input strings treated differently between redis.conf and CONFIG SET"
  },
  {
    "bug_location": "Redis Expiration Command Handler (expireGenericCommand)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Integer overflow when calculating expiration time for extremely large time values, causing undefined behavior and potential unintended key deletion",
    "issue_number": 8032.0,
    "title": "[BUG] expireGenericCommand overflow time and The key is deleted by mistake"
  },
  {
    "bug_location": "Testing Framework",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential compatibility issue between Tcl version 8.6.10 and Redis test suite, specifically in log message parsing or file handling during test execution",
    "issue_number": 7616.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Active Defragmentation Test (memefficiency.tcl)",
    "severity": 2,
    "categories": [
      "Performance"
    ],
    "root_cause": "Test sensitivity to system performance and timing, potentially related to defragmentation cycle speed and machine-specific characteristics",
    "issue_number": 10950.0,
    "title": "[BUG] Ubuntu 22.04 , gcc 11.2.0 , Active defrag test failed"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or race condition in sentinelRefreshInstanceInfo() function during sentinel instance information refresh",
    "issue_number": 7747.0,
    "title": "Sentinel4.0.14 Crashed [CRASH]"
  },
  {
    "bug_location": "Redis Set Operations (t_set.c)",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Shortcut implementation in SMOVE command that returns 1 without checking if the key actually exists in the source set when source and destination sets are the same",
    "issue_number": 2517.0,
    "title": "SMOVE set1 set1 key1 always returns 1 when set1 exists"
  },
  {
    "bug_location": "RDB File Parsing/redis-check-rdb",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Inability to parse RDB file containing functions from the unstable branch, likely due to an unsupported object type (type 246) during RDB file validation",
    "issue_number": 10133.0,
    "title": "[BUG]redis-check-rdb can't check rdb with functions in unstable branch"
  },
  {
    "bug_location": "Redis Cluster Bus Message Buffer Management",
    "severity": 4,
    "categories": [
      "Performance",
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Inefficient buffer management in cluster bus links causing excessive memory movement and CPU overhead during large pubsub traffic, where repeated sdsrange and memmove operations consume significant computational resources when flushing messages incrementally",
    "issue_number": 10863.0,
    "title": "[BUG] Clusterbus buffer management can consume significant memory and CPU utilization during pubsub"
  },
  {
    "bug_location": "Redis CLI Test Suite",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "TCL version compatibility issue, where test suite requires TCL 8.6 but CentOS 7.x ships with TCL 8.5, causing test failure during argument parsing and channel closing",
    "issue_number": 7540.0,
    "title": "[BUG] 6.0.6 client test failure"
  },
  {
    "bug_location": "redis-benchmark tool",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Insufficient information to definitively determine the exact root cause of the protocol error during benchmark execution",
    "issue_number": 10233.0,
    "title": "[BUG] Protocol error in redis-benchmark"
  },
  {
    "bug_location": "redis-cli command line interface",
    "severity": 2,
    "categories": [
      "Human",
      "Config"
    ],
    "root_cause": "Shell redirection syntax (`>`) interferes with Redis ACL user password setting in non-interactive mode, causing the password to not be set when the `>` character is used unescaped",
    "issue_number": 10870.0,
    "title": "[BUG] user password is not saved when creating with \"redis-cli setuser\" (non-interactive mode) and \">\" is not escaped"
  },
  {
    "bug_location": "Redis Core - Database Operations",
    "severity": 3,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Performance overhead introduced by `updateKeysizesList` function calls in `dbSetValue` function, causing additional computational complexity during key operations",
    "issue_number": 13659.0,
    "title": "[BUG] Performance regression of mset command after introducing INFO KEYSIZES"
  },
  {
    "bug_location": "Redis Info Command/Error Reporting",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent error and command stat formatting with unexpected characters like ':' and '@' causing potential parsing and reporting issues in Redis info commands",
    "issue_number": 8489.0,
    "title": "[BUG] INFO commandstats and INFO errorstats can contain badly formatted info fields"
  },
  {
    "bug_location": "Redis Monotonic Clock Initialization",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Failure in monotonic clock initialization on ARM architecture (armhf) when running in Docker container, likely due to incompatible clock_gettime() implementation or system call restrictions",
    "issue_number": 12046.0,
    "title": "[CRASH] Redis Docker container crash on Beaglebone Black (armhf)"
  },
  {
    "bug_location": "AOF Persistence Module",
    "severity": 3,
    "categories": [
      "Storage",
      "Performance"
    ],
    "root_cause": "Lua script persistence is not guaranteed when AOF is disabled and RDB preamble is set to no, which is an expected behavior according to Redis design principles",
    "issue_number": 9275.0,
    "title": "[BUG] bgrewriteaof command result in lua script loss"
  },
  {
    "bug_location": "RDB Background Save (rdbSaveBackground)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Memory"
    ],
    "root_cause": "Potential NULL pointer dereference during LZF compression of list object during background RDB save, likely caused by memory corruption or internal list management issue in Redis 4.0.14",
    "issue_number": 8276.0,
    "title": "[CRASH]Redis 4.0.14 crashed by signal: 11"
  },
  {
    "bug_location": "systemd service configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Security"
    ],
    "root_cause": "Insufficient permissions for Redis service to access TLS certificate files when started via systemd",
    "issue_number": 13604.0,
    "title": "[BUG]Can't start with systemd with tls enabled"
  },
  {
    "bug_location": "Redis Documentation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Inaccurate documentation describing cluster shards response fields, specifically around the 'ip' and 'endpoint' fields, which may cause confusion for developers consuming the API",
    "issue_number": 11133.0,
    "title": "[BUG] Update docs to mark \"ip\" in cluster shards as optional"
  },
  {
    "bug_location": "Redis Geo Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential edge case algorithm error in geospatial radius query implementation that fails to correctly report points near the search radius boundary",
    "issue_number": 3698.0,
    "title": "GEO edge case radius query does not report certain near-edge points"
  },
  {
    "bug_location": "Lua Scripting Engine",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Unsafe handling of global Lua environment access in EVAL command, causing unexpected panic when attempting to return global environment table _G",
    "issue_number": 11030.0,
    "title": "[BUG] EVAL \"return _G\" 0  leads to immediate panic"
  },
  {
    "bug_location": "redis-cli command-line interface",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential parsing or command processing error in redis-cli when handling mass insertion of commands, specifically on macOS, causing command misinterpretation and incorrect command parsing during stdin reading",
    "issue_number": 7744.0,
    "title": "[BUG] Redis-cli 6.0.7 fails mass-insertion with \"unknown command\" by apparently misreading stdin"
  },
  {
    "bug_location": "Redis Replication Connection Handling",
    "severity": 3,
    "categories": [
      "Network",
      "Config",
      "Performance"
    ],
    "root_cause": "Overly conservative default timeout value for replication connections that does not adapt well to dynamic network environments like Kubernetes, causing unnecessary long connection wait times",
    "issue_number": 10668.0,
    "title": "[BUG] repl-timeout being reached unnecessarily when master behind Kubernetes proxy"
  },
  {
    "bug_location": "RedisGraph Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access in GB_setElement function during graph deletion operation",
    "issue_number": 10292.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Persistence Layer",
    "severity": 4,
    "categories": [
      "Storage",
      "Config",
      "CodeBug"
    ],
    "root_cause": "When switching from RDB to RDB+AOF persistence mode by restarting the server, Redis does not preserve existing RDB data and instead starts with an empty dataset, causing unexpected data loss",
    "issue_number": 12484.0,
    "title": "[BUG] Complete data loss when enabling AOF through config"
  },
  {
    "bug_location": "redis-cli connection URL parsing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Changes in authentication parsing broke backwards compatibility by requiring explicit 'default' username when no username was previously implied",
    "issue_number": 12746.0,
    "title": "[BUG] redis-cli no longer supports implicit default username in connection URL"
  },
  {
    "bug_location": "Redis Module Error Handling",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Performance"
    ],
    "root_cause": "Lack of thread synchronization when accessing shared error tracking data structure (server.errors) in multi-threaded module contexts, potentially causing race conditions and data corruption",
    "issue_number": 10180.0,
    "title": "[BUG] afterErrorReply() is not thread safe"
  },
  {
    "bug_location": "Redis PubSub Subscription Management",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "After careful review of the issue and comments, this does not appear to be a definitive bug. The behavior described seems to be expected Redis PubSub functionality, where unsubscribe commands may return 0 if no current subscriptions exist for that specific client. The comments from @ranshid suggest the reported 'issue' is actually standard Redis behavior.",
    "issue_number": 11807.0,
    "title": "[BUG] In PubSub, UNSUBSCRIBE and PUNSUBSCRIBE commands do not work correctly."
  },
  {
    "bug_location": "Redis Stream Command Processing (XREAD/XREADGROUP)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "RESP3 protocol implementation returns duplicate keys in stream read operations when the same stream key is requested multiple times, which violates expected protocol behavior",
    "issue_number": 11488.0,
    "title": "[BUG] XREAD[GROUP] with RESP3 may return a map with dup keys when user requested the same key twice"
  },
  {
    "bug_location": "Redis Module API",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Storage"
    ],
    "root_cause": "Redis Modules do not automatically increment the dirty counter when modifying keys, which prevents automatic RDB snapshots from being triggered. Module developers must explicitly call RedisModule_ReplicateVerbatim() to enable tracking of changes.",
    "issue_number": 8608.0,
    "title": "[BUG] Redis Module key manipulations don't initiate RDB snapshot saves"
  },
  {
    "bug_location": "install_server.sh script",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Incompatibility with Ubuntu/Debian init script generation, specifically shell script header parsing and chkconfig command formatting issues",
    "issue_number": 397.0,
    "title": "install_server.sh(2.4.9) does not install on Ubuntu 10.04 TLS"
  },
  {
    "bug_location": "redis-cli command line interface",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Improper handling of binary key patterns and encoding in command line scan operation, causing key retrieval failure when binary characters are present",
    "issue_number": 8561.0,
    "title": "[BUG] command line redis-cli --scan incorrectly returns binary keys"
  },
  {
    "bug_location": "Redis server client management (clientsCron function)",
    "severity": 4,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Inefficient client list rotation in clientsCron causing timeout starvation for older connections, where new connections prevent proper timeout checking of blocked commands",
    "issue_number": 10801.0,
    "title": "[BUG] Blocking commands do not unblock in time under high volume of new connection churns"
  },
  {
    "bug_location": "Redis Cluster Pub/Sub Subsystem",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "SSUBSCRIBE command requires channels to hash to the same slot in Redis Cluster mode, preventing multi-channel subscription in a single command",
    "issue_number": 10599.0,
    "title": "[BUG] SSUBSCRIBE - (Error) CROSSSLOT keys in request don't hash to the same slot"
  },
  {
    "bug_location": "hiredis/compilation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Compilation process fails to locate OpenSSL headers when using a custom OpenSSL prefix, likely due to incorrect include path configuration in the Makefile",
    "issue_number": 9565.0,
    "title": "[BUG] Unable to compile redis with a specific openssl version(1.1.1l) in Linux  "
  },
  {
    "bug_location": "Redis ACL Configuration Parser",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Premature implementation of 'allchannels' ACL rule in Redis 6.0.x, which does not fully support channel-level permissions until version 6.2",
    "issue_number": 8142.0,
    "title": "[BUG] Unable to specify 'allchannels' ACL rule for default user in redis.conf"
  },
  {
    "bug_location": "Redis Stream Command (XADD)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Automatic sequence generation with '*' was not supported in Redis 6.2.6, and was only introduced in Redis 7.0",
    "issue_number": 10522.0,
    "title": "[BUG] XADD automatic sequence (1-*) doesn't work"
  },
  {
    "bug_location": "redis-cli cluster management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Recovery"
    ],
    "root_cause": "Inability to handle node deletion when a cluster node is down or unreachable, causing failure in cluster management operations",
    "issue_number": 11018.0,
    "title": "[BUG] redis-cli --cluster del-node  can't del the node has down or can't be connected"
  },
  {
    "bug_location": "Redis Monitoring/Metrics Component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Monitoring"
    ],
    "root_cause": "Changes in Redis 7 command stats reporting mechanism removed aggregated metrics for parent commands with subcommands, breaking backward compatibility with previous versions' metrics reporting",
    "issue_number": 11363.0,
    "title": "[BUG] Missing command stat metrics at parent command level"
  },
  {
    "bug_location": "Redis Stream Component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Potential issue with reading from the latest stream position ($) when the stream has a large number of entries, causing unexpected nil response even when entries exist",
    "issue_number": 10578.0,
    "title": "[BUG] Restart reading from start ($) of very large STREAM returns nil"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Transaction"
    ],
    "root_cause": "Sentinel does not re-publish +sdown/+odown messages after initial publication, causing potential communication gaps during network partitions or temporary disconnections between sentinels",
    "issue_number": 13486.0,
    "title": "[BUG]sentinel only publish +sdown/+odown message once"
  },
  {
    "bug_location": "Memory Management",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "Config"
    ],
    "root_cause": "Transparent Huge Pages (THP) set to 'always' causing memory fragmentation and overhead in Redis 5.0.3, leading to increased RSS overhead ratio",
    "issue_number": 10842.0,
    "title": "the rss_overhead_bytes and rss_overhead_ratio is too large[BUG]"
  },
  {
    "bug_location": "Redis Service Configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Systemd service configuration reset during Redis package upgrade, causing log directory permissions issue preventing Redis server from starting",
    "issue_number": 12926.0,
    "title": "[CRASH] E: Sub-process /usr/bin/dpkg returned an error code (1)"
  },
  {
    "bug_location": "cli_common.c",
    "severity": 2,
    "categories": [
      "Memory"
    ],
    "root_cause": "Potential memory leak with SSL_CTX_NEW, but confirmed as a static variable that will be dismissed when the process exits, so not a critical memory leak",
    "issue_number": 11229.0,
    "title": "[BUG] Potential memory leak."
  },
  {
    "bug_location": "RDB (Redis Database) Save Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access during RDB save operation in Windows-specific Redis implementation, specifically in the rdbSaveStringObject and rdbSaveObject functions",
    "issue_number": 12256.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Hash (HINCRBYFLOAT) Command",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Floating-point precision limitation inherent in IEEE 754 floating-point arithmetic, causing minor numerical representation discrepancies across different platforms and CPU architectures",
    "issue_number": 10618.0,
    "title": "[BUG] Incorrect result of hincrbyfloat"
  },
  {
    "bug_location": "Application Runtime/Library Dependency",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Missing or incompatible Visual C++ runtime library (VCRUNTIME140_1.dll) on Windows Server 2019, likely due to differences in library deployment or system configuration compared to Windows 10",
    "issue_number": 7667.0,
    "title": "[BUG] RDM 2020.2.225 on Windows Server 2019 does not launch after installing it"
  },
  {
    "bug_location": "RDB File Loading Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage",
      "Replication"
    ],
    "root_cause": "Potential vulnerability in RDB file parsing during master-slave replication where files less than 9 bytes can trigger unexpected server termination",
    "issue_number": 10448.0,
    "title": "[BUG] RDB ERROR DETECTED"
  },
  {
    "bug_location": "Configuration Rewrite Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "CONFIG REWRITE does not handle included configuration files correctly, causing duplicate module loading directives which leads to module initialization failure during server restart",
    "issue_number": 12010.0,
    "title": "[BUG] Identified a bug in rewrite loadmodule"
  },
  {
    "bug_location": "Redis Hash Command Implementation",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incorrect integer calculation in HSET command when multiple fields are added, resulting in a return value of 2n-1 instead of the actual number of fields added",
    "issue_number": 11493.0,
    "title": "[BUG] HSET Integer Reply"
  },
  {
    "bug_location": "Redis Command Processing (GETKEYS)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "The GETKEYS command for EVAL does not handle zero-key scenarios correctly, causing an error instead of returning an empty array when no keys are specified",
    "issue_number": 9493.0,
    "title": "[BUG] Error from `command getkeys eval \"\u2026\" 0`"
  },
  {
    "bug_location": "Redis Monitoring/Logging Component",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Monitoring"
    ],
    "root_cause": "Monitoring implementation for FCALL command did not properly log the command before execution, unlike previous EVAL/EVALSHA script commands",
    "issue_number": 11507.0,
    "title": "[BUG] Monitor command doesn't show fcall"
  },
  {
    "bug_location": "Redis Cluster Routing/Migration Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Race condition during hash slot migration where multiple nodes can handle queries for the same slot, potentially causing inconsistent state during key transfers between nodes",
    "issue_number": 121.0,
    "title": "Redis Cluster: implement the ASKING command"
  },
  {
    "bug_location": "Redis Cluster Authentication Module",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Cluster authentication mechanism incorrectly prevents module-authenticated clients from logging in during cluster initialization or when cluster is down",
    "issue_number": 13330.0,
    "title": "[BUG] A client blocked on authentication through a module can't log into a cluster when it is down"
  },
  {
    "bug_location": "Redis Cluster Debug Command Handler",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Security"
    ],
    "root_cause": "Intentional segmentation fault triggered by 'debug segfault' command, which is a built-in Redis debug feature designed to crash the server",
    "issue_number": 9755.0,
    "title": "[CRASH] redis-server crash (compiled w/ GCC 8.3.1)"
  },
  {
    "bug_location": "RedisGraph module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Memory access violation during RDB graph data loading, specifically in RG_Matrix_setElement_UINT64 function when attempting to set an element with an invalid memory address (0x20)",
    "issue_number": 10815.0,
    "title": "[CRASH] Redis (graph) crashes on startup"
  },
  {
    "bug_location": "Redis Cluster Command Processing",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Potential memory management or state handling issue in command processing after encountering multi-key request error in Redis Cluster, specifically triggered by sequence of MGET and subsequent GETRANGE commands",
    "issue_number": 607.0,
    "title": "Node of redis-cluster dies with certain sequences of commands"
  },
  {
    "bug_location": "Stunnel SSL/TLS Proxy",
    "severity": 3,
    "categories": [
      "Memory",
      "Security"
    ],
    "root_cause": "Potential memory allocation issue in OpenSSL stack and packet handling functions, causing repeated memory allocations without proper deallocation in SSL/TLS packet processing",
    "issue_number": 8262.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Cluster SORT command implementation (sort.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication"
    ],
    "root_cause": "Incorrect slot comparison logic in SORT command when handling special '#' pattern in cluster mode, causing unnecessary restriction on cross-slot operations",
    "issue_number": 13607.0,
    "title": "[BUG]7.4 sort in cluster mode should ignore: get # while doing slot comparison "
  },
  {
    "bug_location": "Redis Cluster Nodes Command",
    "severity": 2,
    "categories": [
      "Replication",
      "Performance"
    ],
    "root_cause": "Unusual cluster node state representation with multiple migration mappings, potentially related to key migration or cluster rebalancing process",
    "issue_number": 7722.0,
    "title": "[BUG] redis-cli cluster nodes show strange output"
  },
  {
    "bug_location": "Redis String Data Type Handler",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "The APPEND command creates a string key with zero length when appending an empty string to a non-existent key, which might be considered unexpected behavior by some users",
    "issue_number": 9520.0,
    "title": "[BUG] APPEND KEY \"\" creates an empty string"
  },
  {
    "bug_location": "Redis Module System",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction",
      "Memory"
    ],
    "root_cause": "Module unload command is not properly disabled or validated during multi/exec transaction, causing potential memory corruption and crash when attempting to execute a command from an unloaded module",
    "issue_number": 10177.0,
    "title": "[CRASH] Should disable module unload command in multi"
  },
  {
    "bug_location": "Blocking Operations (BLMOVE)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect handling of small timeout values in blocking list operations, causing them to be interpreted as infinite blocking instead of non-blocking",
    "issue_number": 11732.0,
    "title": "[BUG] Small timeout gets treated like blocking"
  },
  {
    "bug_location": "Memory Management / Client Output Buffer",
    "severity": 3,
    "categories": [
      "Memory",
      "Performance",
      "Network"
    ],
    "root_cause": "Memory allocation behavior with large values and long-running client connections, potentially related to jemalloc's memory release strategy",
    "issue_number": 8184.0,
    "title": "[BUG] Memory fragmentation when using log-normal value sizes"
  },
  {
    "bug_location": "Signal Handling in redis.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Conditional compilation issue with signal handler setup for platforms without backtrace support, causing build failures on NetBSD and potentially other systems with incomplete signal flag definitions",
    "issue_number": 155.0,
    "title": "Problems building on NetBSD"
  },
  {
    "bug_location": "Redis Module Timer Callback Handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "The function that releases blocked clients (handleClientsBlockedOnKeys) is only called from processCommand, which assumes only a command can cause a key to be 'ready'. This assumption prevents key readiness signals from being processed when triggered from a timer callback.",
    "issue_number": 7880.0,
    "title": "[BUG] Calling RedisModule_SignalKeyAsReady from a timer callback does not trigger the reply callback."
  },
  {
    "bug_location": "Redis Dictionary/Hash Implementation",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or race condition in hash table implementation when processing multiple HMSET commands in pipeline mode, likely related to M1 Mac architecture or Docker environment",
    "issue_number": 10831.0,
    "title": "[CRASH] Redis crashing on running 1200 hmset in pipeline mode"
  },
  {
    "bug_location": "Redis Stream Consumer Group",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "XDEL command only removes message from stream, not from Pending Entries List (PEL), which requires explicit XACK to remove the message from PEL",
    "issue_number": 13314.0,
    "title": "[BUG] Record, deleted from stream, stays in PEL"
  },
  {
    "bug_location": "Lua Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Changes in Redis 7 Lua engine that restrict modification of table functions, potentially breaking existing Lua scripts that previously could override table methods",
    "issue_number": 10845.0,
    "title": "[BUG] Redis7 Lua engine and readonly table script"
  },
  {
    "bug_location": "Redis Cluster Replication Synchronization",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Inconsistent full sync behavior when 'appendonly yes' is configured during replica reboot, forcing unnecessary full data synchronization even when no new data exists",
    "issue_number": 13175.0,
    "title": "[BUG]If \"appendonly yes\" in the cluster, the full sync occurs after the replica reboot"
  },
  {
    "bug_location": "dict.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference in _dictInit and _dictReset functions where 'ht' parameter might be NULL, causing unsafe memory access",
    "issue_number": 9335.0,
    "title": "[BUG]A potential bug of NULL pointer dereference "
  },
  {
    "bug_location": "Redis Hash Command Implementation (t_hash.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent return type for HKEYS command in RESP3 protocol when key does not exist, causing an empty hash instead of an expected array type",
    "issue_number": 7776.0,
    "title": "HKEYS returns empty hash in RESP3 [BUG]"
  },
  {
    "bug_location": "t_zset.c (Sorted Set Implementation)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Assertion failure during conversion of ziplist to skiplist when inserting elements into a sorted set via ZRANGESTORE, specifically related to handling binary keys and conversion thresholds",
    "issue_number": 11416.0,
    "title": "[CRASH] `ZRANGESTORE` with binary keys leads to crash"
  },
  {
    "bug_location": "redis-benchmark tool",
    "severity": 3,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Hash tag generation logic does not respect non-clustered benchmark scenarios, causing unintended single-shard targeting",
    "issue_number": 7930.0,
    "title": "[BUG] redis-benchmark non clustered benchmark forces always the same hash tag {tag} which makes proxy setups to be limited by standalone performance"
  },
  {
    "bug_location": "Redis Persistence (RDB) Module",
    "severity": 4,
    "categories": [
      "Storage",
      "Config",
      "Performance"
    ],
    "root_cause": "Redis silently continues operation when RDB persistence fails to write, without providing clear warnings or errors to the user about potential data loss risks",
    "issue_number": 90.0,
    "title": "Redis silently continues working when RDB persistence fails"
  },
  {
    "bug_location": "Redis Stream Consumer Group Replication Logic",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Potential inconsistency in consumer group lag heuristic calculation when using XCLAIM with LASTID argument, which may not properly invalidate entries_read counter",
    "issue_number": 10569.0,
    "title": "[BUG] Stream consumer group lag heuristic isn't handled when executing `XCLAIM ... LASTID`"
  },
  {
    "bug_location": "Redis Memory Management / Key Eviction",
    "severity": 5,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Infinite memory loop during key eviction when maxmemory is configured with multiple slaves, where emitting deletion protocol to slaves consumes more memory than keys being deleted",
    "issue_number": 327.0,
    "title": "maxmemory + evicting policy + slaves = death"
  },
  {
    "bug_location": "Redis Module API (RedisModule_OpenKey)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential issue with key access context when switching between non-zero database contexts, causing unexpected NULL key returns on subsequent key open attempts",
    "issue_number": 10631.0,
    "title": "Calling RedisModule_OpenKey from a Database which isn't 0 twice in the 2nd time it always returns NULL [BUG]"
  },
  {
    "bug_location": "RediSearch Module (redisearch.so)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory access or pointer corruption in DocTable_Get function within RediSearch module, likely triggered during index query or document addition",
    "issue_number": 9636.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Cluster Failover Mechanism",
    "severity": 4,
    "categories": [
      "Replication",
      "Recovery",
      "Network"
    ],
    "root_cause": "Potential network partition detection issue preventing automatic failover when primary and replica nodes are simultaneously stopped and restarted, with insufficient cluster quorum to confirm master node failure",
    "issue_number": 13234.0,
    "title": "[BUG] redis cluster can not failover"
  },
  {
    "bug_location": "RDB Background Save Process",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or allocation issue during background RDB save process in 32-bit Redis 2.4.x, likely related to memory allocation or LZF compression during save operation",
    "issue_number": 326.0,
    "title": "Redis crash - Failed assertion: <no assertion failed> (<no file>:0)"
  },
  {
    "bug_location": "Redis Kernel Compatibility Layer",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Performance"
    ],
    "root_cause": "Potential kernel compatibility issue with ARM64 architecture preventing safe background save operation, likely related to Copy-on-Write (COW) memory mechanism",
    "issue_number": 13398.0,
    "title": "[CRASH] Docker Image 'arm64v8/redis' cannot startup with log 'Failed to test the kernel for a bug that could lead to data corruption during background save.'"
  },
  {
    "bug_location": "Redis Server Configuration",
    "severity": 2,
    "categories": [
      "Config",
      "Network"
    ],
    "root_cause": "Default Redis configuration binds to all network interfaces (0.0.0.0) when started with CLI arguments, instead of respecting localhost binding from configuration file",
    "issue_number": 9509.0,
    "title": "[BUG] cannot get redis to bind localhost when --port argument specified"
  },
  {
    "bug_location": "Redis Key Eviction Algorithm",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Memory"
    ],
    "root_cause": "Current key eviction algorithm selects keys uniformly across databases, causing disproportionate eviction in smaller databases when multiple databases are used with different key volumes",
    "issue_number": 1674.0,
    "title": "[BUG] Eviction policy with multiple databases."
  },
  {
    "bug_location": "Redis Protocol Parser (networking.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Incomplete error handling in multi-bulk protocol parsing where protocol errors do not consistently close client connections, potentially leaving the connection in an unusable state",
    "issue_number": 7746.0,
    "title": "[BUG]non-resp bytes make the connection unusable forever"
  },
  {
    "bug_location": "Redis Replication Component",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Inconsistent state during multiple replica connections, specifically in replication synchronization process",
    "issue_number": 9035.0,
    "title": "[BUG] several tests fail while building redis 6.2.4"
  },
  {
    "bug_location": "jemalloc configuration",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Jemalloc configuration fails to detect significant virtual address bits on Debian 12 (Bookworm), causing compilation failure during Redis build process",
    "issue_number": 12759.0,
    "title": "[BUG] Unable to build on Debian 12 (Bookworm)"
  },
  {
    "bug_location": "Redis Client/Network Connection",
    "severity": 3,
    "categories": [
      "Network",
      "Config"
    ],
    "root_cause": "Likely incorrect network binding or port mapping configuration preventing proper connection from host machine to Redis Docker container",
    "issue_number": 7896.0,
    "title": "[BUG] Error: Protocol error, got \"H\" as reply type byte when trying to run any command"
  },
  {
    "bug_location": "Redis Lua scripting engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Lack of atomic synchronization in SCRIPT KILL command processing, allowing potential race conditions during script termination and subsequent command execution",
    "issue_number": 9581.0,
    "title": "[BUG] Killing slow scripts should be synchronous to ensure atomicity"
  },
  {
    "bug_location": "debug.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Missing conditional compilation directive for platform-specific code related to backtrace handling on FreeBSD",
    "issue_number": 450.0,
    "title": "Build failure FreeBSD 8.2 (2.6, missing HAVE_BACKTRACE)"
  },
  {
    "bug_location": "Redis RDB Loading (object.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Memory corruption during RDB file loading, likely related to 32-bit memory allocation limitations with jemalloc",
    "issue_number": 754.0,
    "title": "Redis Error When starting"
  },
  {
    "bug_location": "Redis Sentinel and Replication System",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Stale Redis process with outdated IP address persisting after pod deletion, causing inconsistent replication state between Redis nodes and Sentinel monitoring",
    "issue_number": 11404.0,
    "title": "Different status in sentinel and redis[BUG]"
  },
  {
    "bug_location": "Redis TLS/SSL Connection Handling",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Security",
      "Network"
    ],
    "root_cause": "Potential compatibility issue with TLS 1.2 implementation in Redis 7.2.0, causing segmentation fault during server startup with TLS configuration",
    "issue_number": 12696.0,
    "title": "[BUG]Issue with the TLS version on Redis 7.2.0"
  },
  {
    "bug_location": "redis-benchmark tool",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect atomic increment in request tracking logic, causing over-issuing of requests beyond specified benchmark parameters by not properly respecting pipeline configuration",
    "issue_number": 7960.0,
    "title": "[BUG] redis-benchmark with pipeline not enforcing upper bound to number of requests."
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Redis TYPE command returns a table with 'ok' key for simple strings in Lua scripts, instead of a direct string, which breaks expected type conversion behavior",
    "issue_number": 11413.0,
    "title": "[BUG] TYPE command does not return a string in LUA"
  },
  {
    "bug_location": "zmalloc.c preprocessing stage",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Preprocessor macro definition fails when HAVE_MALLOC_SIZE is not defined, causing compilation error due to incorrect handling of sizeof keyword in conditional compilation",
    "issue_number": 8531.0,
    "title": "[BUG] Redis fails to compile if HAVE_MALLOC_SIZE is not defined"
  },
  {
    "bug_location": "rax.c and redis-cli.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential null pointer dereference in rare edge cases during memory allocation and data processing, identified through static code analysis",
    "issue_number": 8642.0,
    "title": "[BUG] NULL Pointer Dereference on rax.c/redis-cli.c using static analysis"
  },
  {
    "bug_location": "Redis Data Structures (Set, ZSet, List)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Different Redis data structures have inherent storage and retrieval behaviors: Sets use hash tables without order preservation, Lists use linked list with LPUSH/RPUSH affecting order, and ZSets use sorted structures based on scores and lexicographic order",
    "issue_number": 8790.0,
    "title": "[BUG] SADD/ZADD/LPUSH members not saved in the order it was added"
  },
  {
    "bug_location": "Configuration Management",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Atomic configuration rewrite mechanism fails when attempting to save configuration to directories without write permissions, such as /etc, breaking expected configuration update behavior",
    "issue_number": 8051.0,
    "title": "[BUG] atomic config rewrite breaks the feature"
  },
  {
    "bug_location": "Test Suite / Replication Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Unknown"
    ],
    "root_cause": "Potential compatibility issue with tail command or file reading during test execution on Red Hat 8.3, specifically in the replication test suite where a log file reading operation fails with a '+31' file not found error",
    "issue_number": 9226.0,
    "title": "[BUG]make test fails on Red Hat 8.3 for Redis 6.0.6"
  },
  {
    "bug_location": "Core Redis Command Processing",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during command processing, likely related to an unsupported command 'DELTREE' or architecture mismatch between 32-bit Redis build and 64-bit ARM platform",
    "issue_number": 8610.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Recovery",
      "Network"
    ],
    "root_cause": "Potential issue with sentinel leader election and failover process, possibly related to stale sentinel state or incomplete leader election mechanism when some sentinels are marked as subjectively down (sdown)",
    "issue_number": 7753.0,
    "title": "Sentinel failover aborted - failover-abort-not-elected error[BUG]"
  },
  {
    "bug_location": "scripting.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Lua's redis.call() bypasses standard command execution path, which prevents proper tracking of command statistics, dirty counter, and slow log population",
    "issue_number": 316.0,
    "title": "Lua's redis.call() does not increment the dirty counter"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Config",
      "Security",
      "Network"
    ],
    "root_cause": "Sentinel is configured to return IP address instead of hostname during service discovery, which causes TLS certificate validation failures when connecting with domain-based certificates",
    "issue_number": 7928.0,
    "title": "[BUG] Sentinel returning master ip instead of hostname which is failing in case of TLS"
  },
  {
    "bug_location": "Redis Sentinel Failover Mechanism",
    "severity": 5,
    "categories": [
      "Replication",
      "Transaction",
      "Recovery"
    ],
    "root_cause": "During sentinel-managed failover, the old master (node A) is incorrectly allowed to become a new master again after being stopped, resulting in potential data loss by overwriting or losing recent writes from the previous master (node B)",
    "issue_number": 12570.0,
    "title": "[BUG] sentinel cluster auto failover caused data loss"
  },
  {
    "bug_location": "Redis Cluster Discovery/Configuration",
    "severity": 4,
    "categories": [
      "Network",
      "Replication",
      "Config",
      "Kubernetes"
    ],
    "root_cause": "Redis cluster's gossip protocol fails to dynamically update node IP addresses after pod restarts in Kubernetes environment, causing connection failures due to stale node configuration",
    "issue_number": 12605.0,
    "title": "[BUG] In k8s cluster, pod restart, the redis cluster is not working properly and cannot repair itself."
  },
  {
    "bug_location": "Redis Python Client Library",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Version-specific implementation difference in HSET command handling between Redis 3.0.504 and newer versions (4.0.0+). The older version does not support variadic HSET with multiple field/value pairs, causing a 'wrong number of arguments' error.",
    "issue_number": 8622.0,
    "title": "[BUG] hset does not support multiple dict mapping"
  },
  {
    "bug_location": "Redis Command Processing Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Command filter being incorrectly re-applied during command reprocessing, causing potential command argument misalignment and unexpected behavior when blocking commands are filtered by modules",
    "issue_number": 11894.0,
    "title": "[BUG] reprocessed block commands go through module command filter again, but used cached lookup"
  },
  {
    "bug_location": "src/server.c:serverLogRaw",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential buffer overflow risk if `level` parameter is manipulated outside of expected range, despite current code design assuming controlled input",
    "issue_number": 11418.0,
    "title": "[BUG] Potential buffer overrun in serverLog"
  },
  {
    "bug_location": "Redis Cluster Configuration Synchronization",
    "severity": 3,
    "categories": [
      "Replication",
      "Network"
    ],
    "root_cause": "Potential race condition in GOSSIP message propagation during cluster resharding, where configuration updates are not immediately synchronized across all nodes",
    "issue_number": 7788.0,
    "title": "[BUG] 'Nodes don't agree about configuration!' on resharding"
  },
  {
    "bug_location": "Redis Background Save (BGSAVE) Process",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Potential memory management or child process handling issue during repeated BGSAVE operations causing zombie (Z) process states",
    "issue_number": 8708.0,
    "title": "[BUG] repeatedly Execute bgsave command\uff0c Occasionally, the process status is abnormal, such as Z status and D status"
  },
  {
    "bug_location": "RDB (Redis Database) Save Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Potential memory access violation during RDB background save process on Windows platform, likely due to unsupported Windows implementation of Redis fork mechanism",
    "issue_number": 11353.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Transaction"
    ],
    "root_cause": "Stack buffer overflow in memory testing function during client reply processing, triggered by an unexpected state in a replica client's reply buffer during a slowlog command",
    "issue_number": 10076.0,
    "title": "[CRASH] ASSERTION FAILED and stack-buffer-overflow in networking.c:1026"
  },
  {
    "bug_location": "RediSearch Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory corruption or invalid memory access in NumericRange_Add function within RediSearch module during indexing operation",
    "issue_number": 11435.0,
    "title": "[CRASH] Redis 6.2.6 crashed by signal: 11, si_code: 1"
  },
  {
    "bug_location": "RedisTimeSeries Module",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access in parseLabelListFromArgs function of RedisTimeSeries module during TS.QUERYINDEX command processing",
    "issue_number": 9181.0,
    "title": "[CRASH] - Unknown issues with Redis Sentinel & RedisTimeSeries"
  },
  {
    "bug_location": "Memory Allocator (jemalloc)",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "Upgrade"
    ],
    "root_cause": "Potential memory fragmentation issue in jemalloc after Redis 7.2.5 upgrade, specifically with 224-byte and 320-byte memory bins showing unusual allocation patterns",
    "issue_number": 13612.0,
    "title": "[BUG] High RSS Memory Usage Even with Active Defrag"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided in the issue description",
    "issue_number": 10007.0,
    "title": "[CRASH]"
  },
  {
    "bug_location": "Redis Streams XINFO command",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect calculation of lag and entries-read in consumer groups when stream entries are deleted, causing inconsistent tracking of stream consumption state",
    "issue_number": 13337.0,
    "title": "[BUG] Redis Streams XINFO Lag field"
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Null pointer dereference in addReplySubcommandSyntaxError function when processing commands containing '|' character, causing a segmentation fault when attempting to access c->argv[1] which is not properly initialized",
    "issue_number": 10070.0,
    "title": "[CRASH] SIGSEGV in addReplySubcommandSyntaxError at networking.c:966"
  },
  {
    "bug_location": "Quicklist implementation in Redis cluster",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Memory",
      "Replication"
    ],
    "root_cause": "Memory management issue in _quicklistSplitNode() function causing potential memory corruption during list operations in Redis 3.2.x",
    "issue_number": 3343.0,
    "title": "3.2.1 crash when as slave node sync with master"
  },
  {
    "bug_location": "Redis Replication and RDB Saving Mechanism",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Storage"
    ],
    "root_cause": "Race condition between BGSAVE and slave synchronization process where temporary RDB files can be incorrectly overwritten during rename operations, potentially causing data corruption during replication",
    "issue_number": 1676.0,
    "title": "[BUG] Slave may mis-overwriten synced server.repl_transfer_tmpfile file with BGSAVE file"
  },
  {
    "bug_location": "Redis Blocking Commands",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Floating-point precision issue causing small timeout values (< 0.001) to be incorrectly rounded down to 0, which prevents timeout mechanism from working correctly in blocking commands like BLPOP",
    "issue_number": 11687.0,
    "title": "[BUG] Blocking command with a 0.001 seconds timeout blocks indefinitely"
  },
  {
    "bug_location": "Redis Sentinel Configuration Management",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Sentinel is generating duplicate 'known-replica' entries during runtime, causing configuration parsing errors when attempting to reload or restart the sentinel process",
    "issue_number": 8313.0,
    "title": "[CRASH] Sentinel crashing with sentinel known-replica and Wrong hostname or port for replica."
  },
  {
    "bug_location": "Redis String Command Implementation (t_string.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Missing error handling in setGenericCommand when checking return value from getGenericCommand, allowing partial operation to complete despite type mismatch error",
    "issue_number": 8116.0,
    "title": "[BUG] SET with GET option: WRONGTYPE Error"
  },
  {
    "bug_location": "Redis Configuration Management",
    "severity": 2,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Configuration parameter 'appendfilename' is exposed via CONFIG GET but not modifiable at runtime, creating an inconsistent configuration interface",
    "issue_number": 9417.0,
    "title": "[BUG] Unsupported CONFIG parameter: appendfilename"
  },
  {
    "bug_location": "server.c memory allocation handler",
    "severity": 5,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Potential memory allocation overflow or memory management issue in Redis 3.2.12 during background saving process, attempting to allocate an impossibly large memory block (292806299210713325 bytes)",
    "issue_number": 13355.0,
    "title": "[CRASH] Guru Meditation: \"Redis aborting for OUT OF MEMORY\" #server.c:3847"
  },
  {
    "bug_location": "Redis process initialization (setproctitle.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory buffer overflow during process title initialization caused by incorrect memory address tracking of environment variables on Apple Silicon M1 architecture",
    "issue_number": 8062.0,
    "title": "[CRASH] Unable to start redis-server on Apple Silicon M1 as non-root"
  },
  {
    "bug_location": "Redis Replication",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "Memory"
    ],
    "root_cause": "Client output buffer limit insufficient for large dataset with high write traffic, causing replication connection failures during RDB generation and synchronization",
    "issue_number": 11558.0,
    "title": "[BUG] 64gb client-output-buffer-limit isn't enough for maxmemory 96gb."
  },
  {
    "bug_location": "Redis Pub/Sub Subscription Management",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Incorrect handling of unsubscribe command for Pub/Sub channels, where the unsubscribe operation fails to properly remove the channel subscription despite returning a zero status code",
    "issue_number": 11806.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis quicklist data structure iterator implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Iterator positioning logic is inconsistent after entry deletion, causing unexpected iterator behavior when traversing and deleting entries in a quicklist",
    "issue_number": 12614.0,
    "title": "[BUG] quicklist iterator bug"
  },
  {
    "bug_location": "Redis Transaction/Watch Mechanism",
    "severity": 3,
    "categories": [
      "Transaction",
      "CodeBug"
    ],
    "root_cause": "Potential implementation issue with handling key volatility changes during watched transactions, where modifications to key expiration do not consistently trigger transaction abortion as per Redis specification",
    "issue_number": 10492.0,
    "title": "[BUG] Changing volatility of Watched keys does not abort Txn"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Network",
      "Unknown"
    ],
    "root_cause": "Insufficient information to definitively determine the exact root cause, but signal 11 (SIGSEGV) suggests a potential memory access violation or segmentation fault during Sentinel mode configuration across mixed platform environments (Linux Docker and Windows)",
    "issue_number": 12868.0,
    "title": "[BUG] Redis 6.2.6 crashed by signal: 11, si_code: 23"
  },
  {
    "bug_location": "Redis Configuration Parser",
    "severity": 3,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Incorrect parsing of configuration file directive 'oom-score-adj-values' in Redis 6.0.7, causing a fatal configuration error when reading line 1066 with values '0 200 800'",
    "issue_number": 7786.0,
    "title": "[BUG]FATAL CONFIG FILE ERROR (Redis 6.0.7) Reading the configuration file, at line 1066 '0 200 800'"
  },
  {
    "bug_location": "Redis Test Suite - Replication and Partial Sync Tests",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance",
      "Replication"
    ],
    "root_cause": "Timing-related test failures in replication and partial synchronization tests, likely due to insufficient time for background client write detection or slow system performance",
    "issue_number": 2126.0,
    "title": "The following tests have failed"
  },
  {
    "bug_location": "Build System/Makefile",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Potential build dependency management issues causing incorrect incremental builds and reduced build efficiency due to missing or redundant dependencies in the Makefile",
    "issue_number": 12648.0,
    "title": "[BUG]Makefile dependency errors"
  },
  {
    "bug_location": "Redis Stack Memory Management",
    "severity": 4,
    "categories": [
      "Memory",
      "Storage",
      "CodeBug"
    ],
    "root_cause": "Potential memory allocation or corruption issue during data loading and vector indexing in Redis Stack Docker container, likely related to incompatible RDB file format or memory constraints",
    "issue_number": 13125.0,
    "title": "[BUG] - Getting memory crash issue when trying to load data in redis-stack through docker "
  },
  {
    "bug_location": "redis-cli command suggestion system",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incomplete command line argument suggestion for multi-word Redis CLI commands, specifically missing the required client-id parameter in CLIENT UNBLOCK command suggestion",
    "issue_number": 8955.0,
    "title": "[BUG] redis-cli CLIENT UNBLOCK suggestion is incomplete"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Performance",
      "Transaction",
      "Monitoring"
    ],
    "root_cause": "Potential timing/clock synchronization issue causing frequent sentinel tilt mode entries, likely related to Bitnami Redis chart configuration or Kubernetes environment interaction",
    "issue_number": 10547.0,
    "title": "[CRASH] Redis sentinel enters tilt mode and dies after a time"
  },
  {
    "bug_location": "ae.c (Event Loop Processing)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or invalid pointer access during event processing in the aeProcessEvents function, likely caused by an unhandled edge case in event loop management",
    "issue_number": 8119.0,
    "title": "[BUG]core dump ae.c aeProcessEvents fe->rfileProc(eventLoop,fd,fe->clientData,mask);"
  },
  {
    "bug_location": "Redis AOF (Append Only File) Replication Mechanism",
    "severity": 4,
    "categories": [
      "Replication",
      "Storage",
      "CodeBug"
    ],
    "root_cause": "Race conditions and improper handling of AOF rewrite processes during slave synchronization, leading to potential data inconsistency and incorrect file management during master-slave replication",
    "issue_number": 245.0,
    "title": "Possible problems with AOF used in slaves"
  },
  {
    "bug_location": "Redis Sentinel Configuration Parser",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Unintentional change in command-line option parsing for Redis Sentinel that breaks backward compatibility with previous versions, causing configuration parsing to fail when `--sentinel` option is used",
    "issue_number": 11586.0,
    "title": "[BUG] sentinel option gone"
  },
  {
    "bug_location": "Redis Cluster Metadata Management",
    "severity": 3,
    "categories": [
      "Replication",
      "Transaction"
    ],
    "root_cause": "Inconsistent cluster state synchronization during node failure and failover, causing incorrect slot mapping propagation across cluster nodes",
    "issue_number": 13414.0,
    "title": "[BUG] CLUSTER SHARDS command returns \"empty array\" in slots section"
  },
  {
    "bug_location": "Redis Cluster Configuration Management",
    "severity": 3,
    "categories": [
      "Storage",
      "Config",
      "Recovery"
    ],
    "root_cause": "Potential file write/sync issue during node restart causing partial truncation of cluster.nodes.conf configuration file",
    "issue_number": 13353.0,
    "title": "[BUG] node restart result in truncated cluster.nodes.conf file."
  },
  {
    "bug_location": "Redis Sorted Set (ZSET) Command Implementation",
    "severity": 3,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Introduction of deferred reply mechanism in ZREVRANGE command implementation, which adds overhead in reply generation, particularly noticeable in non-pipelined scenarios",
    "issue_number": 10310.0,
    "title": "[BUG] ZREVRANGE 50% slower after upgrading from 5.0.7 to 6.2.6"
  },
  {
    "bug_location": "Persistence Layer (RDB/AOF)",
    "severity": 4,
    "categories": [
      "Storage",
      "Replication",
      "Performance"
    ],
    "root_cause": "Replica unable to write commands to disk, causing persistent storage failures in master-slave configuration",
    "issue_number": 13213.0,
    "title": "[BUG] - Server Keeps crashing randomly"
  },
  {
    "bug_location": "Redis Sentinel TLS Connection Handling",
    "severity": 4,
    "categories": [
      "Memory",
      "Security",
      "CodeBug"
    ],
    "root_cause": "Memory leak in SSL context creation and handling when attempting to establish TLS connections to unreachable Redis nodes, where SSL contexts are not properly freed when connection attempts fail",
    "issue_number": 9725.0,
    "title": "[BUG] Redis Sentinel TLS Memory Leak"
  },
  {
    "bug_location": "Redis Function Load Command Parser",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Command parser does not correctly handle optional arguments for FUNCTION LOAD command, specifically the 'description' and 'replace' options",
    "issue_number": 10226.0,
    "title": "[BUG]can't add `replace` `desc description` at the end of `function load` command in redis 7.0"
  },
  {
    "bug_location": "RedisJSON Module",
    "severity": 3,
    "categories": [
      "Memory",
      "CodeBug"
    ],
    "root_cause": "Incorrect memory usage calculation for JSON string objects, consistently returning a fixed 32-byte value regardless of actual string length",
    "issue_number": 9877.0,
    "title": "[BUG] MEMORY USAGE returns wrong value for json objects"
  },
  {
    "bug_location": "Redis LZF Compression Module (src/lzf_c.c)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential uninitialized hash table (htab) in LZF compression function, which might lead to unpredictable compression behavior or performance variations",
    "issue_number": 9154.0,
    "title": "[BUG] the function - lzf_compress Why use it without initialization"
  },
  {
    "bug_location": "Redis TLS Connection Handling",
    "severity": 3,
    "categories": [
      "Network",
      "Security",
      "Upgrade"
    ],
    "root_cause": "Incompatibility with OpenSSL 3's stricter connection closure requirements, where unexpected EOF during connection termination causes client-side errors due to lack of proper SSL shutdown procedure",
    "issue_number": 10915.0,
    "title": "[BUG] redis-server TLS connection close breaks OpenSSL 3 clients"
  },
  {
    "bug_location": "Lettuce Redis Client Connection Pool",
    "severity": 3,
    "categories": [
      "Performance",
      "Network",
      "Memory"
    ],
    "root_cause": "Virtual thread executor with Netty event loop group causing connection pool exhaustion when resources are not properly managed or configured",
    "issue_number": 13304.0,
    "title": "[BUG] Java 21 VT with Netty and Pool exhausted"
  },
  {
    "bug_location": "Redis ACL (Access Control List) Module",
    "severity": 3,
    "categories": [
      "Security",
      "CodeBug"
    ],
    "root_cause": "The KEYS * command does not properly respect the ACL prefix restriction, allowing users to view keys outside their designated prefix, which breaks the expected access control mechanism",
    "issue_number": 8152.0,
    "title": "[BUG]ACLs are not working properly while setting to a specific prefix."
  },
  {
    "bug_location": "Redis Authentication (ACL) Module",
    "severity": 3,
    "categories": [
      "Security",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Authentication state is not properly reset when an invalid authentication attempt occurs in Redis 6+, causing the connection to retain its previous authenticated user's permissions",
    "issue_number": 10491.0,
    "title": "[BUG] Invalid auth does not reset existing authenticated connection"
  },
  {
    "bug_location": "SCAN command implementation",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "SCAN command is designed to be non-blocking and iterative, which means it does not guarantee consistent results in a single call. The command scans the database in chunks, filters results, and may return different cursors and results based on internal implementation details.",
    "issue_number": 10759.0,
    "title": "[BUG] SCAN command does not always returns the identical result"
  },
  {
    "bug_location": "async.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Lack of memory allocation failure check after realloc() call, which can potentially lead to null pointer dereference if memory reallocation fails",
    "issue_number": 9336.0,
    "title": "[BUG]A potential bug of NULL pointer dereference"
  },
  {
    "bug_location": "Redis Replication Synchronization",
    "severity": 3,
    "categories": [
      "Replication",
      "Storage"
    ],
    "root_cause": "Potential permission issue during temporary file creation for master-replica synchronization, specifically in Redis 5.0.10 Docker image",
    "issue_number": 8395.0,
    "title": "[BUG] Redis cluster 5.0.10 in docker: Opening the temp file needed for MASTER <-> REPLICA synchronization: Permission denied"
  },
  {
    "bug_location": "Memory Management / Object Handling",
    "severity": 5,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Potential memory corruption when server is near memory limit, causing invalid object type detection in object.c",
    "issue_number": 9518.0,
    "title": "[CRASH] Redis server 5.0.5 crashed while memory was hovering around maxmemory limit"
  },
  {
    "bug_location": "HyperLogLog (HLL) implementation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Unable to definitively determine without more investigation, but appears to be a potential issue with HyperLogLog cardinality estimation in specific environment",
    "issue_number": 9810.0,
    "title": "[BUG] meet pfcount always return 1"
  },
  {
    "bug_location": "redis-benchmark.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Incorrect range parameter in LRANGE benchmark command, where 0-449 is used instead of the intended 0-499 range, potentially affecting benchmark accuracy and performance measurement",
    "issue_number": 3334.0,
    "title": "redis-benchmark.c lrange with possibly wrong range parameter "
  },
  {
    "bug_location": "cluster.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Replication",
      "Upgrade"
    ],
    "root_cause": "Potential memory management or slot tracking issue during cluster rebalancing/migration between different Redis versions (7.0.8 and 7.2.1)",
    "issue_number": 12603.0,
    "title": "[CRASH] While running the rebalancing command in a cluster mixture of 7.0.8 and 7.2.1"
  },
  {
    "bug_location": "redis-cli command-line interface",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Autocomplete/suggestion mechanism in redis-cli not properly updating after authentication parameters are entered",
    "issue_number": 10238.0,
    "title": "[BUG] redis-cli - AUTH keeps suggesting [username] even after it's typed"
  },
  {
    "bug_location": "Replication",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Potential synchronization issue in PSYNC2 (Partial Resynchronization) mechanism where the number of full synchronizations does not match the expected count during testing",
    "issue_number": 10377.0,
    "title": "[BUG] [err]: PSYNC2: total sum of full synchronizations is exactly 4 in tests/integration/psync2.tcl"
  },
  {
    "bug_location": "Redis Stream Command (XAUTOCLAIM)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid memory access during rax data structure manipulation in stream group processing, likely related to iterator invalidation during removal operations",
    "issue_number": 10968.0,
    "title": "[BUG] REDIS BUG REPORT by stream command"
  },
  {
    "bug_location": "Redis Key Expiration Mechanism",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Integer overflow in time calculation for key expiration, causing unexpected key deletion behavior on 32-bit systems when large timestamp values are used",
    "issue_number": 86.0,
    "title": "EXPIRE, SETEX, should detect time overflows"
  },
  {
    "bug_location": "Redis Test Suite (unit/memefficiency.tcl)",
    "severity": 2,
    "categories": [
      "Performance",
      "Config"
    ],
    "root_cause": "Test timeout thresholds are too short for slower hardware like Raspberry Pi, causing intermittent test failures due to insufficient time for active memory defragmentation",
    "issue_number": 9418.0,
    "title": "[BUG] Test unit/memefficiency Failed"
  },
  {
    "bug_location": "db.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Storage"
    ],
    "root_cause": "Assertion failure in dictionary lookup, potentially related to key management or memory corruption in Redis 3.2.4, specifically at line 868 where a key was expected to be found in the database dictionary but was not present",
    "issue_number": 9251.0,
    "title": "[CRASH] redis crashed all the time, Redis 3.2.4 (00000000/0) 64 bit"
  },
  {
    "bug_location": "jemalloc memory allocation component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Incompatibility with 16kb page size on aarch64 architecture, where jemalloc's default configuration does not support larger system page sizes",
    "issue_number": 12586.0,
    "title": "[BUG] Unable to start when using 16kb pages on aarch64"
  },
  {
    "bug_location": "Redis core deletion mechanism (db.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Configuration setting for lazy server deletion (lazyfree-lazy-server-del) does not actually modify the deletion behavior of DEL command as expected, continuing to use synchronous deletion instead of asynchronous deletion",
    "issue_number": 7601.0,
    "title": "[BUG] lazyfree-lazy-server-del does not turn DELs into UNLINKs"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "Config"
    ],
    "root_cause": "Hostname resolution failure during node failover in Kubernetes environment, preventing automatic failover mechanism from triggering",
    "issue_number": 12184.0,
    "title": "[BUG] Sentinel failover does not happen when node went down"
  },
  {
    "bug_location": "debug.c",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing Cygwin-specific header or compilation flag for Dl_info and dladdr() function, which are typically part of GNU extensions not enabled by default in Cygwin",
    "issue_number": 11843.0,
    "title": "[BUG] builld redis with cygwin fail :   debug.c:1753:5: error: unknown type name \u2018Dl_info\u2019  "
  },
  {
    "bug_location": "t_zset.c (ZINTER/ZDIFF operations)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Lack of proper handling for SET objects with LISTPACK encoding during ZDIFF/ZINTER operations, causing a crash when encountering unexpected object encoding",
    "issue_number": 11578.0,
    "title": "[CRASH] ZINTER betwen SET and ZSET crashes"
  },
  {
    "bug_location": "Redis server compilation process",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Incompatibility with older GCC version (4.8.5) on CentOS 7, which does not fully support C11 standard and lacks certain struct members in the redisServer structure",
    "issue_number": 7673.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Replication Component",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Race condition in diskless replication handling where the replication state is not properly updated for RDB-only clients, causing unexpected newline transmission and connection management issues",
    "issue_number": 11261.0,
    "title": "[BUG] unexpected `\\n` after the EOF marker when extracting an rdb from redis using diskless replication"
  },
  {
    "bug_location": "Replication",
    "severity": 3,
    "categories": [
      "Network",
      "Storage",
      "Replication"
    ],
    "root_cause": "Docker volume/bind mount performance issue causing file synchronization problems during RDB load, potentially related to filesystem I/O latency or file access permissions",
    "issue_number": 9647.0,
    "title": "[BUG] Cluster replica(s) dead loop on \"Failed trying to load the MASTER synchronization DB from disk\""
  },
  {
    "bug_location": "AOF (Append-Only File) Persistence Module",
    "severity": 5,
    "categories": [
      "CodeBug",
      "Storage",
      "Recovery"
    ],
    "root_cause": "Redis AOF replay mechanism fails to properly replay FLUSHALL command during database recovery, causing unintended data restoration instead of clearing the database as expected",
    "issue_number": 142.0,
    "title": "AOF ignores FLUSHALL"
  },
  {
    "bug_location": "replication.c",
    "severity": 3,
    "categories": [
      "Replication",
      "CodeBug"
    ],
    "root_cause": "Assertion failure in replication state management when switching between non-existent and existing master servers, causing unexpected state transition in replication process",
    "issue_number": 283.0,
    "title": "redis crashed"
  },
  {
    "bug_location": "Redis slowlog and lazyfree components",
    "severity": 4,
    "categories": [
      "Memory",
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Race condition between slowlog entry reference counting and background lazy free thread, potentially causing memory leaks when shared string objects are deleted asynchronously",
    "issue_number": 4323.0,
    "title": "Redis 4.x lazyfree: memory leak may happen when free slowlog entry"
  },
  {
    "bug_location": "Redis Cluster Configuration File (nodes.conf)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Storage",
      "Replication"
    ],
    "root_cause": "Potential memory corruption or file write mechanism issue causing random data injection into cluster configuration file during node synchronization or RDB save process",
    "issue_number": 12624.0,
    "title": "[BUG]  Random characters comes into redis-cluster-config file and cause cluster failure.  "
  },
  {
    "bug_location": "src/memtest.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Global buffer overflow in memtest_preserving_test function when using AddressSanitizer, likely due to memory access beyond allocated bounds in the memory testing routine",
    "issue_number": 9903.0,
    "title": "[BUG] sanitizer address test failed in logging.tcl"
  },
  {
    "bug_location": "Redis server core (server.c, rdb.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory"
    ],
    "root_cause": "Potential data race on shared global variable 'server.loading' between main thread and signal handler, where concurrent read/write operations can lead to undefined behavior without proper synchronization",
    "issue_number": 7777.0,
    "title": "[BUG] Potential data race on server.loading flag"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "Replication",
      "Transaction",
      "Recovery"
    ],
    "root_cause": "Sentinel failover mechanism appears to be stuck in an indecisive state, unable to elect a new master consistently due to potential race conditions or voting conflicts during repeated master deletions",
    "issue_number": 11641.0,
    "title": "[BUG] Sentinels can't decide on a master and are stuck in loop"
  },
  {
    "bug_location": "Client Library",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incorrect method signature definition in a Redis client library, where the `LINDEX` method is defined with wrong parameter and return types",
    "issue_number": 9786.0,
    "title": "[BUG] `LINDEX` method has invalid signature"
  },
  {
    "bug_location": "Redis Persistence/RDB Snapshot Module",
    "severity": 2,
    "categories": [
      "Config",
      "Storage",
      "Replication"
    ],
    "root_cause": "RDB snapshot generation during replication continues even when save configuration is set to an empty string, specifically when `rdb-del-sync-files` is not configured",
    "issue_number": 11662.0,
    "title": "[BUG] Snapshot not disabled when configuration parameter save is \"\""
  },
  {
    "bug_location": "Build System/Compilation Process",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Missing release.h header file during compilation, likely caused by file encoding or cross-platform file transfer issues when mounting Windows disk in WSL",
    "issue_number": 10466.0,
    "title": "When using make I get the following error[BUG]"
  },
  {
    "bug_location": "src/expire.c",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Type mismatch in comparison between a decimal percentage value and an integer, which could lead to unexpected comparison results",
    "issue_number": 11254.0,
    "title": "[BUG] server.stat_expired_stale_perc be compared with an integer in src/expire.c"
  },
  {
    "bug_location": "Test Suite / Integration Tests",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Potential compatibility issue with CentOS 8 test environment causing test failures during complex data generation and replication tests",
    "issue_number": 7657.0,
    "title": "[BUG] make test fails on CentOS 8 for Redis 6.0.6"
  },
  {
    "bug_location": "RDB File Loading Mechanism",
    "severity": 4,
    "categories": [
      "Storage",
      "Recovery",
      "CodeBug"
    ],
    "root_cause": "Incorrect error handling during RDB file loading, allowing server to start with empty key space instead of aborting when file cannot be properly loaded",
    "issue_number": 103.0,
    "title": "Redis should abort when can't load the RDB file"
  },
  {
    "bug_location": "RedisBloom Module",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Inconsistent response type for BF.EXISTS command between different Redis server versions, likely due to changes in the RedisBloom module implementation",
    "issue_number": 12438.0,
    "title": "[BUG] BF.EXISTS return type changed "
  },
  {
    "bug_location": "Transaction Management",
    "severity": 3,
    "categories": [
      "Transaction",
      "CodeBug"
    ],
    "root_cause": "Potential issue with transaction handling where concurrent or multi-step transactions are being prematurely aborted due to intermediate errors",
    "issue_number": 13374.0,
    "title": "Redis error[BUG]"
  },
  {
    "bug_location": "Redis Key Expiration/Deletion Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Storage",
      "Performance"
    ],
    "root_cause": "Potential application-level issue causing unintended Redis database flush during API calls, leading to premature key deletion before expected TTL expiration",
    "issue_number": 8123.0,
    "title": "[BUG] redis key getting deleted even it has enough TTL"
  },
  {
    "bug_location": "Redis Dictionary (dict.c)",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Memory allocation issue with jemalloc under QEMU emulation on Apple M1 architecture, causing calloc() to not properly zero memory during dictionary initialization",
    "issue_number": 10341.0,
    "title": "[CRASH] Redis / Docker / Apple M1"
  },
  {
    "bug_location": "zmalloc.c",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Preprocessor macro issue with sizeof() during compilation on FreeBSD, causing build failure due to incorrect macro definition or include order",
    "issue_number": 8538.0,
    "title": "[BUG] redis 6.0.11 build failed on FreeBSD 12.2"
  },
  {
    "bug_location": "Redis Memory Metrics Reporting",
    "severity": 2,
    "categories": [
      "Memory",
      "Performance"
    ],
    "root_cause": "Inaccurate memory fragmentation calculation that does not include Lua memory allocation, leading to potentially misleading fragmentation ratio metrics",
    "issue_number": 2994.0,
    "title": "INFO MEMORY mem_fragmentation_ratio doesn't include used_memory_lua"
  },
  {
    "bug_location": "Redis Cluster Election Mechanism",
    "severity": 3,
    "categories": [
      "Replication",
      "Performance",
      "Recovery"
    ],
    "root_cause": "Delayed cluster node failure detection and election process, where replica nodes wait for quorum confirmation from other primary nodes before initiating failover, causing a longer-than-expected recovery time",
    "issue_number": 13048.0,
    "title": "[BUG] Redis cluster fails to trigger election by printing log \"Error condition on socket for SYNC: Connection refused\""
  },
  {
    "bug_location": "Redis Systemd Integration",
    "severity": 2,
    "categories": [
      "Config",
      "CodeBug"
    ],
    "root_cause": "Ambiguous warning message about systemd timeout configuration without clear guidance on appropriate timeout values for Redis service startup and shutdown",
    "issue_number": 8024.0,
    "title": "[BUG] TimeoutStartSec and TimeoutStopSec values are valid, but redis still warns"
  },
  {
    "bug_location": "Redis Debian Package Configuration",
    "severity": 3,
    "categories": [
      "Config",
      "Human"
    ],
    "root_cause": "Incorrect default Unix socket path configuration in Debian package's redis.conf, causing service startup failure when Unix socket is enabled",
    "issue_number": 11928.0,
    "title": "[BUG] wrong default setting in debian apt package"
  },
  {
    "bug_location": "networking.c",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Transaction",
      "Performance"
    ],
    "root_cause": "Race condition in thread-safe context handling when freeing clients with IO threads enabled, specifically an assertion failure in networking.c related to io_threads_op state",
    "issue_number": 12785.0,
    "title": "[CRASH] Redis crashing on 7.2.3 version"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 3,
    "categories": [
      "Replication",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Sentinel failover process taking longer than expected due to potential configuration or leader election complexity in distributed setup",
    "issue_number": 11642.0,
    "title": "[BUG] Sentinel takes a longer than expected time to choose a new master"
  },
  {
    "bug_location": "Redis Sentinel Failover Mechanism",
    "severity": 4,
    "categories": [
      "Replication",
      "Performance",
      "Transaction"
    ],
    "root_cause": "Sentinel incorrectly selecting replica with lower replication offset during failover, causing unnecessary full resynchronization and potential data loss/downtime",
    "issue_number": 13483.0,
    "title": "[BUG] During failover sentinel picked replica up with less replication offset which caused full resync "
  },
  {
    "bug_location": "redis-trib.rb resharding algorithm",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Incorrect slot allocation algorithm in ruby script that uses ceiling rounding only for the first node, causing uneven slot distribution when total slots are not perfectly divisible",
    "issue_number": 2990.0,
    "title": "redis-trib.rb reshard bug"
  },
  {
    "bug_location": "Redis Lua Scripting Engine",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Redis Lua scripts do not properly enforce memory limits when using 'noeviction' policy, allowing scripts to continue executing and creating keys even when memory exceeds the configured maximum memory limit",
    "issue_number": 8478.0,
    "title": "[BUG] Lua script doesn't return OOM when making arbitrary delete command first"
  },
  {
    "bug_location": "RDB Persistence Module",
    "severity": 5,
    "categories": [
      "Storage",
      "Recovery",
      "CodeBug"
    ],
    "root_cause": "Duplicated empty key ('') found during RDB file loading, causing Redis server crash during startup",
    "issue_number": 11454.0,
    "title": "[CRASH] AQ redis-qa cache failure [CRITICAL]"
  },
  {
    "bug_location": "Redis Replication/Sync Mechanism",
    "severity": 4,
    "categories": [
      "Replication",
      "Network",
      "Performance"
    ],
    "root_cause": "Potential network instability or memory pressure during large log data synchronization between Redis master and replica, causing incomplete or interrupted replication process",
    "issue_number": 11414.0,
    "title": "[BUG] Continuous \"I/O error reading bulk count from MASTER: No error information\" Failing the Readiness Probe "
  },
  {
    "bug_location": "Redis Integer Increment Operations",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Inconsistent integer overflow handling between INCRBY and HINCRBY commands, where INCRBY strictly prevents overflow while HINCRBY allows wrapping around integer boundaries",
    "issue_number": 330.0,
    "title": "INCRBY / HINCRBY different overflow behavior"
  },
  {
    "bug_location": "Redis Replication Module",
    "severity": 4,
    "categories": [
      "Replication",
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Race condition during master/slave synchronization where connection handling fails when switching replication states, causing server crash when attempting to reconnect",
    "issue_number": 145.0,
    "title": "Server crash on failed master/slave sync (refused connection)"
  },
  {
    "bug_location": "Redis Library Dependency",
    "severity": 3,
    "categories": [
      "Upgrade",
      "Config"
    ],
    "root_cause": "Unexpected libc version dependency upgrade from 2.17 to 2.28 in Redis 6.2.13, which is not compatible with older Linux distributions like Oracle Linux 7",
    "issue_number": 12578.0,
    "title": "[BUG]libc dependency while uplifting redis library from 6.2.12 to 6.2.13"
  },
  {
    "bug_location": "Client Query Processing / Network Layer",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Memory",
      "Performance"
    ],
    "root_cause": "Potential memory corruption or race condition during client query processing, specifically in the readQueryFromClient function",
    "issue_number": 9620.0,
    "title": "[CRASH] redis 6.2.3"
  },
  {
    "bug_location": "Redis Stream Trimming Mechanism",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config",
      "Upgrade"
    ],
    "root_cause": "Default stream configuration with `stream-node-max-bytes` and `stream-node-max-entries` set to 0 caused ineffective stream length trimming in Redis 6.2.3, which was not present in Redis 6.0.8. The issue was related to radix tree implementation changes and stream node management logic.",
    "issue_number": 9469.0,
    "title": "[BUG] XADD/XTRIM approximate (~) MAXLEN not trimming stream"
  },
  {
    "bug_location": "Redis AOF Manifest Parsing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade",
      "Storage"
    ],
    "root_cause": "Incompatible AOF manifest parsing logic between Redis versions 6.2.5 and 7.2.1, causing false positive validation errors when processing AOF files with specific data patterns",
    "issue_number": 12951.0,
    "title": "[BUG] redis-check-aof fails when aof file is ok"
  },
  {
    "bug_location": "Unknown",
    "severity": 3,
    "categories": [
      "Unknown"
    ],
    "root_cause": "Insufficient information provided to definitively diagnose the issue",
    "issue_number": 13570.0,
    "title": "[BUG]Redis cluster startup freezes"
  },
  {
    "bug_location": "Redis Service Configuration",
    "severity": 3,
    "categories": [
      "Config"
    ],
    "root_cause": "Permission issues with log file and configuration file permissions preventing Redis server from starting",
    "issue_number": 8114.0,
    "title": "[BUG]Job for redis-server.service failed because the control process exited with error code."
  },
  {
    "bug_location": "Process Title Setting (setproctitle.c)",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Config"
    ],
    "root_cause": "Incompatibility with musl libc, which lacks glibc-specific process title setting mechanisms",
    "issue_number": 8530.0,
    "title": "[BUG] 6.2.0 - [err]: Process title set as expected in tests/unit/other.tcl"
  },
  {
    "bug_location": "Redis Protocol/Pubsub Handling",
    "severity": 3,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Unexpected protocol behavior when using UNSUBSCRIBE command on a non-pubsub connection, causing multiple RESP replies instead of a standard single response",
    "issue_number": 11046.0,
    "title": "[BUG] Wrong response in redis-cli after unsubscribing channels and use another command to get data."
  },
  {
    "bug_location": "deps/hiredis/hiredis.c",
    "severity": 2,
    "categories": [
      "CodeBug"
    ],
    "root_cause": "Potential misuse of va_list variable before initialization, though likely a false positive due to va_copy() usage",
    "issue_number": 13254.0,
    "title": "[BUG] CWE: 664 "
  },
  {
    "bug_location": "redis-cli client component",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Network"
    ],
    "root_cause": "Redis CLI does not handle null/empty hostname correctly during cluster redirects when cluster-preferred-endpoint-type is set to unknown-endpoint, causing connection failures by not preserving the previous host address during redirection",
    "issue_number": 12266.0,
    "title": "[BUG] redis-cli does not use the \"previously used host address\" to connect when it gets a null/None response for the host during server redirects."
  },
  {
    "bug_location": "jemalloc dependency compilation",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Upgrade"
    ],
    "root_cause": "Position Independent Executable (PIE) compilation incompatibility between jemalloc library and Redis build process, causing relocation errors during linking",
    "issue_number": 11680.0,
    "title": "[BUG]can not be used when making a PIE object; recompile with -fPIE"
  },
  {
    "bug_location": "Redis I/O file write function (rioFileWrite)",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Storage"
    ],
    "root_cause": "Incorrect buffer tracking when file write operation fails, potentially incrementing buffered bytes even when fwrite() returns an error",
    "issue_number": 4322.0,
    "title": "r->io.file.buffered is incorrect in function 'rioFileWrite'"
  },
  {
    "bug_location": "Redis Transaction/Command Parsing",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Transaction"
    ],
    "root_cause": "Improper validation of command arguments during multi/exec transaction, allowing invalid 'expireat' command with an empty string argument to be queued without raising an immediate error",
    "issue_number": 10793.0,
    "title": "[BUG]"
  },
  {
    "bug_location": "Redis Hash Command (hrandfield)",
    "severity": 4,
    "categories": [
      "Performance",
      "CodeBug"
    ],
    "root_cause": "Lack of input validation and boundary checks in hrandfield command when processing extremely large negative integer arguments, causing an infinite loop that consumes server resources and prevents other client connections",
    "issue_number": 11671.0,
    "title": "[BUG] `hrandfield` hangs the server"
  },
  {
    "bug_location": "Redis Server Startup Process",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Performance",
      "Upgrade"
    ],
    "root_cause": "Compatibility issue with Apple Silicon (ARM64) architecture, specifically during PID file creation process, causing segmentation fault during server initialization",
    "issue_number": 8177.0,
    "title": "[BUG] Could not connect to Redis at 127.0.0.1:6379: Connection refused - Apple Silicon"
  },
  {
    "bug_location": "Redis Sentinel",
    "severity": 4,
    "categories": [
      "CodeBug",
      "Crash",
      "Memory"
    ],
    "root_cause": "Potential memory corruption or invalid memory access in sentinelRefreshInstanceInfo function during sentinel instance information refresh",
    "issue_number": 8671.0,
    "title": "[CRASH] Sentinel 5.0.8"
  },
  {
    "bug_location": "Redis Service Management",
    "severity": 3,
    "categories": [
      "Config",
      "Upgrade"
    ],
    "root_cause": "Compatibility issue between Redis 5.0.7, Ubuntu 20.04, and Docker/Bitbucket pipeline environment causing service startup failure, with manual Redis start working but service management failing",
    "issue_number": 7675.0,
    "title": "[BUG] Service Redis-Server Fails to Start"
  },
  {
    "bug_location": "Redis Test Suite",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Unknown"
    ],
    "root_cause": "Potential test suite compatibility issue or environment-specific problem during test execution on CentOS Linux 7 with Redis 6.0.6, causing I/O errors and test failures during 'make test'",
    "issue_number": 10174.0,
    "title": "[CRASH] Executing test client: tail: \u00e0\u00d5S\"+31\" \u00fb\u00d6pn: \u00a1"
  },
  {
    "bug_location": "Redis Core/Replication Module",
    "severity": 3,
    "categories": [
      "CodeBug",
      "Replication",
      "Transaction"
    ],
    "root_cause": "Replication validation check in processCommand() does not apply to Lua script (EVAL) commands due to incorrect condition checking 'is_write_command' which is always false for eval commands",
    "issue_number": 9993.0,
    "title": "[BUG] Config min-slaves-to-write is not worked with Lua scripts"
  },
  {
    "bug_location": "Persistence/Replication",
    "severity": 3,
    "categories": [
      "Storage",
      "Replication",
      "Recovery"
    ],
    "root_cause": "No space left on device during RDB background save, causing replica to be unable to write commands to disk",
    "issue_number": 13368.0,
    "title": "[CRASH] redis in a 3-node replication setup crashed."
  },
  {
    "bug_location": "Redis Cluster Configuration Management",
    "severity": 4,
    "categories": [
      "Upgrade",
      "Storage",
      "Replication"
    ],
    "root_cause": "Potential configuration file corruption during version upgrade from 6.2.6 to 7.2.5, causing unrecoverable cluster configuration errors",
    "issue_number": 13456.0,
    "title": "[BUG] Unrecoverable error: corrupted cluster config file \"5270a2453e7db28eee53f976faca81306e649b19... "
  },
  {
    "bug_location": "Memory Allocation (zmalloc)",
    "severity": 4,
    "categories": [
      "Memory",
      "CodeBug",
      "Performance"
    ],
    "root_cause": "Out-of-memory condition during RDB save operation, triggered in zmalloc_default_oom function when memory allocation fails",
    "issue_number": 13568.0,
    "title": "[BUG] Report of STACK TRACE of Redis 5.0.14.1"
  },
  {
    "bug_location": "Redis Scripting/Errorstats Component",
    "severity": 2,
    "categories": [
      "CodeBug",
      "Monitoring"
    ],
    "root_cause": "Inconsistent error type handling in Lua script error reporting for Errorstats tracking, where custom error formats are not being normalized to standard Redis error types",
    "issue_number": 11976.0,
    "title": "[BUG]  `Info Errorstats` confusion when reply error at `EVAL`"
  }
]